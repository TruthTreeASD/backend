{"version":3,"sources":["truthtree-logo.png","constants.js","reducers/RootReducer.js","reducers/FilterByReducer.js","reducers/AttributeRangeReducer.js","reducers/SelectedAttributeReducer.js","reducers/YearSelectorReducer.js","reducers/LocationSearchBoxReducer.js","components/YearSelector.js","components/Normalization.js","components/DisplayComponent.js","components/LeftSideBar.js","components/AttributeDeselector.js","components/AttributeRange.js","components/Explore/Tab.js","components/Explore/Tabs.js","components/Explore/TimeSeriesChart.js","components/Explore/TimeSeriesView.js","components/Explore/TimeSeriesGrid.js","components/Home.js","components/Header.js","components/About/index.js","components/Explore/Map.js","actions/LocationSearchBoxActions.js","components/Explore/LocationSearchBox.js","components/Explore/IntroHeading.js","components/Explore/Intro.js","components/Explore/index.js","App.js","serviceWorker.js","index.js","store.js"],"names":["module","exports","__webpack_require__","p","TRUTHTREE_URI","combineReducers","FilterByReducer","state","arguments","length","undefined","dimension","action","type","Object","objectSpread","value","AttributeRangeReducer","attributeName","populationRange","SelectedAttributeReducer","sidebarData","selectedAttributes","console","log","Array","from","YearSelectorReducer","yearSelected","LocationSearchBoxReducer","payload","Normalization","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dropdownOpen","selectedNormalization","normalizationValues","normalizationValuesCall","bind","assertThisInitialized","toggle","setSelectedNormalization","setState","prevState","_this2","axios","get","concat","then","response","data","catch","error","_this3","react_default","a","createElement","id","Dropdown","isOpen","DropdownToggle","caret","DropdownMenu","DropdownItem","onClick","Component","DisplayComponent","currentLevel","locationIds","year","getAttributeType","populationRangeCall","nextProps","attributes","_","flatMap","elem","map","row","location_id","attribute_id","selectedAttribtes","_this4","minPopulation","maxPopulation","population","Math","floor","obj","name","1","push","_this5","components_Normalization","Table","hover","column","index","key","values","toLocaleString","i","url","href","target","connect","LeftSideBar","isAttributeSelected","handleClickCollection","collection","defineProperty","handleChangeSearch","event","searchedString","toLowerCase","renderSearchTerm","search","attr","isLoaded","collapsedLeft","keys","match","params","attribute","newArr","_loop","remove","dispatch","v","_ret","confirmAlert","title","message","buttons","label","className","collapseLeftBar","data-spy","data-offset-top","onChange","placeholder","style","display","handleClickAttribute","background","withRouter","dropdownMenuStyle","height","overflow","allYears","YearSelector","e","yearArray","AttributeDeselector","padding","fontSize","deselectAttribute","paddingRight","Range","Slider","AttributeRange","onSliderChange","locationPopulation","min","max","locationId","locPop","res","err","createSliders","currentAttribute","location","level","dots","step","Tab","_this$props","_this$props2","activeTab","Tabs","onClickTabItem","tab","children","child","Explore_Tab","TimeSeries","condition","Badge","color","LineChart","width","margin","top","right","bottom","left","CartesianGrid","stroke","strokeDasharray","XAxis","dataKey","position","YAxis","angle","Tooltip","Legend","verticalAlign","iconSize","locations","Line","isAnimationActive","TimeSeriesView","loading","dataReal","lineColors","fetchResponse","formatResponse","initializeYearMap","fetchLocations","dataForEachLocation","attributesForEachLocation","attrValue","val","da","select","random","yearArr","yearEntry","len","Spinner","size","attrData","TimeSeriesChart","GridTest","handExpandClick","attrId","modal","modalAttrIndex","modalToggle","getAttributeNames","cards","card","Card","sm","CardBody","Explore_TimeSeriesView","Button","Container","Row","Modal","ModalBody","ModalFooter","homeStyle","paddingTop","Home","fluid","components_LeftSideBar","components_AttributeDeselector","Explore_Tabs","components_DisplayComponent","TimeSeriesGrid","CardHeader","Col","components_AttributeRange","components_YearSelector","navbarStyle","backgroundColor","navBrandStyle","&:hover","textDecoration","logoStyle","Header","collapseOpen","Navbar","expand","NavbarBrand","Link","to","src","logo","alt","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","tag","aboutStyle","About","Jumbotron","mapContainerStyle","Map","center","lat","lng","zoom","handleApiLoaded","maps","setOptions","styles","mapStyles","fullscreenControlOptions","ControlPosition","BOTTOM_RIGHT","google_map_react_lib_default","bootstrapURLKeys","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","_ref","updateValue","ENDPOINTS","STATES","COUNTIES","CITIES","TYPE_CODE","0","2","createFuseOptions","threshold","includeScore","distance","maxPatternLength","minMatchCharLength","renderInputComponent","inputProps","Label","cursor","for","Input","assign","renderSuggestionsContainer","containerProps","getSuggestionLabel","suggestion","item","typeCode","county","stateAbbr","renderSuggestion","replace","LocationSearchBox","_parseData","statesData","countiesData","citiesData","statesDataById","reduce","newStatesData","state_code","counties","forEach","abbreviation","city","statesFuseOptions","weight","countiesFuseOptions","citiesFuseOptions","Fuse","handleInputChange","_ref2","newValue","handleSuggestionsFetchRequested","_ref3","searchPhrase","matchedStates","matchedCounties","matchedCities","temp","slice","sort","b","score","suggestions","popoverOpen","timer","debouncedhandleSuggestionsFetchRequested","debounce","reqs","Promise","all","_ref4","_ref5","slicedToArray","statesRes","countiesRes","citiesRes","dist_default","theme","container","suggestionsList","alwaysRenderSuggestions","onSuggestionsClearRequested","onSuggestionsFetchRequested","getSuggestionValue","store","introHeadingStyle","IntroHeading","Typist_default","avgTypingDelay","hideWhenDone","introContainerStyle","marginBottom","Intro","xs","md","lg","Explore_IntroHeading","Explore_LocationSearchBox","exploreStyle","flex","Explore","Explore_Map","Explore_Intro","App","BrowserRouter","components_Header","Switch","Route","exact","path","component","Boolean","window","hostname","ReactDOM","render","es","createStore","rootReducer","applyMiddleware","thunk","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b1bac1e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/truthtree-logo.75b56fb9.png\";","const TRUTHTREE_URI = 'https://truthtree.herokuapp.com';\nmodule.exports = {\n  TRUTHTREE_URI\n};\n","import { combineReducers } from 'redux';\nimport AttributeRangeReducer from './AttributeRangeReducer';\nimport FilterByReducer from './FilterByReducer';\nimport SelectedAttributeReducer from './SelectedAttributeReducer';\nimport YearSelectorReducer from './YearSelectorReducer';\nimport LocationSearchBoxReducer from './LocationSearchBoxReducer';\n\nexport default combineReducers({\n  FilterByReducer,\n  AttributeRangeReducer,\n  SelectedAttributeReducer,\n  YearSelectorReducer,\n  LocationSearchBoxReducer\n});\n","export default (state = { dimension: 'State' }, action) => {\n  switch (action.type) {\n    case 'CHANGE_DIMENSION':\n      return {\n        ...state,\n        dimension: action.value\n      };\n    default:\n      return state;\n  }\n};\n","export default (\n  state = {\n    attributeName: ['Population'],\n    populationRange: [-50, 50]\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'RANGE_SELECTION':\n      return {\n        ...state,\n        populationRange: action.populationRange\n      };\n    default:\n      return state;\n  }\n};\n","export default (\n  state = {\n    sidebarData: [],\n    selectedAttributes: []\n  },\n  action\n) => {\n  console.log(action);\n  switch (action.type) {\n    case 'CHANGE_ATTRIBUTE':\n      return {\n        ...state,\n        selectedAttributes: Array.from(action.value)\n      };\n    default:\n      return state;\n  }\n};\n","export default (state = { yearSelected: 2016 }, action) => {\n  switch (action.type) {\n    case 'CHANGE_YEAR':\n      state = {\n        ...state,\n        yearSelected: action.yearSelected\n      };\n      break;\n    default:\n      return state;\n  }\n  return state;\n};\n","export default (state = { value: '' }, action) => {\n  switch (action.type) {\n    case 'SEARCHBOX_UPDATE_VALUE':\n      return {\n        ...state,\n        value: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import React, { Component } from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\nimport { connect } from 'react-redux';\n\nconst dropdownMenuStyle = {\n  height: '200px',\n  overflow: 'auto'\n};\n\nlet allYears = [];\nfor (let i = 1966; i < 2016; i++) {\n  allYears.push(i + 1);\n}\n\nclass YearSelector extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      dropdownOpen: false,\n      yearSelected: '2016'\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  onClick(e) {\n    //this.setState({ yearSelected: e.target.id });\n    console.log(e.target.id);\n    this.props.dispatch({\n      type: 'CHANGE_YEAR',\n      yearSelected: e.target.id\n    });\n  }\n\n  render() {\n    let yearArray = allYears.map((year, i) => (\n      <DropdownItem key={i} id={year} onClick={this.onClick}>\n        {year}\n      </DropdownItem>\n    ));\n\n    return (\n      <div>\n        <p> Select Year of Data to be displayed: </p>\n        <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n          <DropdownToggle caret>{this.props.yearSelected}</DropdownToggle>\n          <DropdownMenu style={dropdownMenuStyle}>{yearArray}</DropdownMenu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    yearSelected: state.YearSelectorReducer.yearSelected\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(YearSelector);\n","import React, { Component } from 'react';\n\nimport '../styles/Header.css';\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle\n} from 'reactstrap';\nimport axios from 'axios/index';\nimport { TRUTHTREE_URI } from '../constants';\n\nclass Normalization extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownOpen: false,\n      selectedNormalization: 'Gross',\n      normalizationValues: []\n    };\n    this.normalizationValuesCall = this.normalizationValuesCall.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.setSelectedNormalization = this.setSelectedNormalization.bind(this);\n  }\n\n  componentDidMount() {\n    this.normalizationValuesCall();\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  setSelectedNormalization(value) {\n    this.setState(prevState => ({\n      selectedNormalization: value\n    }));\n  }\n\n  normalizationValuesCall() {\n    axios\n      .get(`${TRUTHTREE_URI}/api/normalization_types`)\n      .then(response => {\n        console.log(response.data);\n        this.setState({ normalizationValues: response.data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n      <div id=\"normalisation\">\n        Normalization attribute:\n        <Dropdown\n          id=\"dropdown\"\n          isOpen={this.state.dropdownOpen}\n          toggle={this.toggle}\n        >\n          <DropdownToggle caret>\n            {this.state.selectedNormalization}\n          </DropdownToggle>\n          <DropdownMenu>\n            <DropdownItem\n              onClick={() => this.setSelectedNormalization('Gross')}\n            >\n              Gross\n            </DropdownItem>\n            <DropdownItem\n              onClick={() => this.setSelectedNormalization('Per Capita')}\n            >\n              Per Capita\n            </DropdownItem>\n            <DropdownItem\n              onClick={() => this.setSelectedNormalization('Per Revenue')}\n            >\n              Per Revenue\n            </DropdownItem>\n          </DropdownMenu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\n\nexport default Normalization;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios/index';\nimport _ from 'lodash';\nimport '../styles/DisplayComponent.css';\nimport { TRUTHTREE_URI } from '../constants';\nimport { Table } from 'reactstrap';\n\nimport Normalization from './Normalization';\n\nclass DisplayComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentLevel: null,\n      data: {},\n      locationIds: [],\n      selectedAttributes: [],\n      year: 2016\n    };\n    this.getAttributeType = this.getAttributeType.bind(this);\n    this.populationRangeCall = this.populationRangeCall.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      selectedAttributes: nextProps.selectedAttributes,\n      year: nextProps.year\n    });\n    let attributes = _.flatMap(nextProps.selectedAttributes, elem => {\n      return elem[0];\n    });\n    if (attributes.length > 0) {\n      axios\n        .get(\n          '/api/attributes?locationIds=' +\n            this.state.locationIds +\n            '&attributeIds=' +\n            attributes +\n            '&yearList=' +\n            nextProps.year\n        )\n        .then(response => {\n          let data = this.state.data;\n          _.map(response.data, row => {\n            _.map(row.attributes, elem => {\n              data[row.location_id][elem.attribute_id] = elem.data[0].value;\n            });\n          });\n          this.setState({ data: data });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n    this.populationRangeCall();\n  }\n\n  getAttributeType(type) {\n    return _.flatMap(this.state.selectedAttributes, elem => {\n      return type === 'ids' ? elem[0] : elem[1];\n    });\n  }\n\n  componentDidMount() {\n    this.setState(prevState => ({\n      data: {},\n      selectedAttribtes: this.props.selectedAttributes,\n      year: this.props.yearSelected\n    }));\n    this.populationRangeCall();\n  }\n\n  populationRangeCall() {\n    let minPopulation = 0;\n    let maxPopulation = 0;\n    let data = {};\n    let locationIds = [];\n    // Calculate min and max population\n    axios\n      .get(\n        `${TRUTHTREE_URI}/api/population?locationId=` +\n          this.props.id +\n          '&year=' +\n          this.state.year\n      )\n      .then(response => {\n        let population = response.data.population;\n        maxPopulation = Math.floor(\n          population + (this.props.populationRange[1] / 100) * population\n        );\n        minPopulation = Math.floor(\n          population + (this.props.populationRange[0] / 100) * population\n        );\n        return axios\n          .get(\n            `${TRUTHTREE_URI}/api/states?populationRange=` +\n              minPopulation +\n              ',' +\n              maxPopulation\n          )\n          .then(response => {\n            _.map(response.data, obj => {\n              data[obj.id] = { name: obj.name, '1': obj.population };\n              locationIds.push(obj.id);\n            });\n            this.setState({ data: data });\n            this.setState({ locationIds: locationIds });\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n      <div id=\"mainDisplay\">\n        <Normalization />\n        <Table hover>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Population</th>\n              {this.state.selectedAttributes.map((column, index) => {\n                return <th key={index}>{column[1]}</th>;\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {_.values(this.state.data).map((row, index) => {\n              return (\n                <tr key={index}>\n                  <td>{row['name']}</td>\n                  <td>{row['1'].toLocaleString()}</td>\n                  {this.state.selectedAttributes.map((column, i) => {\n                    let url =\n                      'https://www.google.com/search?q=' +\n                      row['name'] +\n                      '+' +\n                      this.state.selectedAttributes[i][1];\n                    return (\n                      <td key={i}>\n                        <a href={url} target=\"_blank\">\n                          {row[column[0]]\n                            ? row[column[0]].toLocaleString()\n                            : ''}\n                        </a>\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => ({\n  year: state.YearSelectorReducer.yearSelected,\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes,\n  populationRange: state.AttributeRangeReducer.populationRange\n});\n\nexport default connect(mapState)(DisplayComponent);\n","import React, { Component } from 'react';\nimport '../styles/LeftSideBar.css';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { confirmAlert } from 'react-confirm-alert';\n\nimport { TRUTHTREE_URI } from '../constants';\nimport { withRouter } from 'react-router-dom';\nimport { isAbsolute } from 'path';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nclass LeftSideBar extends Component {\n  constructor(props) {\n    super(props);\n    //   /api/collections?level=state\n    this.state = {\n      sidebarData: [],\n      isLoaded: false,\n      selectedAttributes: [],\n      collapsedLeft: false,\n      searchedString: ''\n    };\n    // Set initial state of each collection to false\n    Object.keys(this.state.sidebarData).map(key => (this.state[key] = false));\n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        `${TRUTHTREE_URI}/api/collections?locationId=` + //382026003\n          this.props.match.params.id // +&year=2016\n      )\n      .then(response => {\n        //data contains the variables\n        this.setState({\n          sidebarData: response.data,\n          isLoaded: true\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // if (this.state.selectedAttributes != nextProps.selectedAttributes) {\n    // this.setState({ selectedAttributes: nextProps.selectedAttributes });\n    //  }\n    //console.log('got prop');\n  }\n\n  isAttributeSelected = attribute_id => {\n    for (let i = 0; i < this.state.selectedAttributes.length; i++) {\n      if (this.state.selectedAttributes[i][0] === attribute_id) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // Toggle state of each collection on click\n  handleClickCollection = collection => {\n    this.setState({ [collection]: !this.state[collection] });\n  };\n\n  // stores attribute selected\n  handleClickAttribute(collection, attribute) {\n    let newArr = this.state.selectedAttributes;\n    let id = attribute.attribute_id;\n    for (let i = 0; i < newArr.length; i++) {\n      if (newArr[i][0] === id) {\n        _.remove(newArr, elem => {\n          return elem === newArr[i];\n        });\n        this.setState({\n          selectedAttributes: newArr\n        });\n\n        this.props.dispatch({\n          type: 'CHANGE_ATTRIBUTE',\n          value: newArr\n        });\n        return;\n      }\n    }\n\n    // To limit number of selected attributes to 10\n    if (newArr.length < 10) {\n      newArr.push([id, attribute.name, collection]);\n      this.setState({\n        selectedAttributes: newArr\n      });\n      this.props.dispatch({\n        type: 'CHANGE_ATTRIBUTE',\n        value: newArr\n      });\n    } else {\n      confirmAlert({\n        title: 'Error!',\n        message:\n          'Number of selected attributes exceeded limit of 10, please remove attributes to add more.',\n        buttons: [\n          {\n            label: 'OK'\n          }\n        ]\n      });\n    }\n  }\n\n  collapseLeftBar() {\n    this.setState({ collapsedLeft: !this.state.collapsedLeft });\n    this.setState({ searchedString: '' });\n  }\n\n  //updates search bar with text\n  handleChangeSearch = event => {\n    this.setState({ searchedString: event.target.value.toLowerCase() });\n    if (this.state.searchedString == '') {\n    }\n  };\n\n  renderSearchTerm = collection => {\n    if (\n      this.state.searchedString == '' ||\n      this.state.sidebarData[collection].name\n        .toLowerCase()\n        .search(this.state.searchedString) > -1\n    ) {\n      return true;\n    }\n    var attr;\n    for (attr in this.state.sidebarData[collection].attributes) {\n      if (\n        this.state.sidebarData[collection].attributes[attr].name\n          .toLowerCase()\n          .search(this.state.searchedString) > -1\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  render() {\n    var { isLoaded } = this.state;\n    if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      if (this.state.collapsedLeft) {\n        return (\n          <button className={'btn'} onClick={() => this.collapseLeftBar()}>\n            <i\n              className={\n                'col-md-flex d-md-flex ' + !this.state.collapsedLeft\n                  ? 'fa fa-chevron-right'\n                  : 'fa fa-chevron-left'\n              }\n            />\n          </button>\n        );\n      } else {\n        return (\n          <nav className=\"scrollLeftBar col-md-2 d-none d-md-block bg-light sidebar\">\n            <div className=\"row\">\n              <div className=\"col-10\">\n                <input\n                  className=\"form-control leftSearch\"\n                  data-spy=\"affix\"\n                  data-offset-top=\"197\" //trying to make search box stay top\n                  id=\"attribute-search-box\"\n                  onChange={this.handleChangeSearch}\n                  placeholder=\"Property Lookup\"\n                />\n              </div>\n              <button className={'btn'} onClick={() => this.collapseLeftBar()}>\n                <i\n                  className={\n                    'chevron-icon-padding ' + !this.state.collapsedLeft\n                      ? 'fa fa-chevron-left'\n                      : 'fa fa-chevron-right'\n                  }\n                />\n              </button>\n            </div>\n            <div\n              style={{ display: !this.state.collapsedLeft ? 'block' : 'none' }}\n            >\n              {Object.keys(this.state.sidebarData).map((collection, i) => {\n                if (this.renderSearchTerm(collection)) {\n                  return (\n                    <div key={i}>\n                      <button\n                        className=\"accordion\"\n                        onClick={() => this.handleClickCollection(collection)}\n                      >\n                        {this.state.sidebarData[collection].name}\n                      </button>\n                      <div\n                        style={{\n                          display: this.state[collection] ? 'block' : 'none'\n                        }}\n                      >\n                        {Object.keys(\n                          this.state.sidebarData[collection].attributes\n                        ).map((attr, i) => {\n                          return (\n                            <label\n                              onClick={() =>\n                                this.handleClickAttribute(\n                                  this.state.sidebarData[collection].name,\n                                  this.state.sidebarData[collection].attributes[\n                                    attr\n                                  ]\n                                )\n                              }\n                              key={i}\n                              className=\"panel float-right\"\n                              style={{\n                                background: this.isAttributeSelected(\n                                  this.state.sidebarData[collection].attributes[\n                                    attr\n                                  ].attribute_id\n                                )\n                                  ? '#d4f3c7'\n                                  : 'white'\n                              }}\n                            >\n                              <div>\n                                {\n                                  this.state.sidebarData[collection].attributes[\n                                    attr\n                                  ].name\n                                }\n                              </div>\n                            </label>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  );\n                }\n              })}\n            </div>\n          </nav>\n        );\n      }\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  selectedAttributes: state.SelectedAttributeReducer\n});\n\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(LeftSideBar));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios/index';\nimport _ from 'lodash';\nimport { TRUTHTREE_URI } from '../constants';\nimport SelectedAttributeReducer from '../reducers/SelectedAttributeReducer';\n\nclass AttributeDeselector extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedAttributes: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ selectedAttribtes: this.props.selectedAttributes });\n    console.log(this.state.selectedAttributes);\n    console.log('it worked' + this.state.selectedAttributes);\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({ selectedAttributes: nextProps.selectedAttributes });\n    console.log('got prop');\n  }\n\n  deselectAttribute(attribute) {\n    console.log('Clicked button');\n    let newArr = this.state.selectedAttributes;\n    let id = attribute[0];\n    console.log(attribute);\n    for (let i = 0; i < newArr.length; i++) {\n      if (newArr[i][0] === id) {\n        _.remove(newArr, elem => {\n          return elem === newArr[i];\n        });\n        this.setState({\n          selectedAttributes: newArr\n        });\n\n        this.props.dispatch({\n          type: 'CHANGE_ATTRIBUTE',\n          value: newArr\n        });\n        return;\n      }\n    }\n  }\n\n  render() {\n    if (this.state.selectedAttributes.length < 1) {\n      return <div />;\n    } else {\n      return (\n        <div className={'row'}>\n          <span\n            className=\"text-info\"\n            style={{ padding: '10px', fontSize: '18px' }}\n          >\n            Selected Filters\n          </span>\n          {Object.keys(this.state.selectedAttributes).map((attributes, i) => {\n            return (\n              <div style={{ padding: '10px' }}>\n                <button\n                  className=\"btn btn-light\"\n                  onClick={() =>\n                    this.deselectAttribute(this.state.selectedAttributes[i])\n                  }\n                >\n                  <i className=\"fa fa-times\" style={{ paddingRight: '10px' }} />\n                  {this.state.selectedAttributes[i][1]}\n                </button>\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n  }\n}\n\nconst mapState = state => ({\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes\n});\n\nexport default connect(mapState)(AttributeDeselector);\n","import React, { Component } from 'react';\nimport Slider from 'rc-slider';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport '../styles/AttributeRange.css';\nimport { TRUTHTREE_URI } from '../constants';\n\nconst Range = Slider.Range;\n\nclass AttributeRange extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locationPopulation: null,\n      value: [-5, 5],\n      min: -50,\n      max: 50\n    };\n  }\n\n  componentDidMount() {\n    let year = this.props.yearSelected ? this.props.yearSelected : 2016;\n    let url =\n      `${TRUTHTREE_URI}/api/population?locationId=` +\n      this.props.locationId +\n      '&year=' +\n      year;\n    console.log(url);\n    let locPop = null;\n\n    axios\n      .get(url)\n      .then(res => {\n        locPop = res.data.population;\n        console.log(res.data.population);\n        this.setState({ locationPopulation: locPop });\n      })\n      .catch(err => console.log(err));\n  }\n\n  onSliderChange = value => {\n    console.log();\n    this.props.dispatch({\n      type: 'RANGE_SELECTION',\n      populationRange: value\n    });\n  };\n\n  render() {\n    const createSliders = this.props.attribute.attributeName.map(\n      (currentAttribute, i) => (\n        <div key={i}>\n          <p>\n            {currentAttribute} of {this.props.location} {':  '}{' '}\n            <b>{this.state.locationPopulation}</b>\n          </p>\n          <p>\n            Select range of <b>{currentAttribute}</b> for filtering other{' '}\n            <b>{this.props.level}</b>:\n          </p>\n          <p className=\"Note\">\n            (*range selection available from -50% to +50% wrt to{' '}\n            {this.props.location} {currentAttribute})\n          </p>\n\n          <Range\n            dots\n            step={5}\n            value={this.props.attribute.populationRange}\n            min={this.state.min}\n            max={this.state.max}\n            onChange={this.onSliderChange}\n          />\n\n          <p>\n            Current selection: {this.props.attribute.populationRange[0]}% to{' '}\n            {this.props.attribute.populationRange[1]}% :\n          </p>\n        </div>\n      )\n    );\n\n    return (\n      <div>\n        <div>\n          <div> {createSliders} </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    year: state.YearSelectorReducer.yearSelected,\n    attribute: state.AttributeRangeReducer\n  };\n};\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AttributeRange);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tab extends Component {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  };\n\n  render() {\n    const {\n      onClick,\n      props: { activeTab, label }\n    } = this;\n\n    let className = 'tab-list-item';\n\n    if (activeTab === label) {\n      className += ' tab-list-active';\n    }\n\n    return (\n      <li className={className} onClick={onClick}>\n        {label}\n      </li>\n    );\n  }\n}\n\nexport default Tab;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Tab from './Tab';\nimport '../../styles/Tab.css';\n\nclass Tabs extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Array).isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: this.props.children[0].props.label\n    };\n  }\n\n  onClickTabItem = tab => {\n    this.setState({ activeTab: tab });\n  };\n\n  render() {\n    const {\n      onClickTabItem,\n      props: { children },\n      state: { activeTab }\n    } = this;\n\n    return (\n      <div className=\"tabs\">\n        <ol className=\"tab-list\">\n          {children.map(child => {\n            const { label } = child.props;\n\n            return (\n              <Tab\n                activeTab={activeTab}\n                key={label}\n                label={label}\n                onClick={onClickTabItem}\n              />\n            );\n          })}\n        </ol>\n        <div className=\"tab-content\">\n          {children.map(child => {\n            if (child.props.label !== activeTab) return undefined;\n            return child.props.children;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\n","import React, { Component } from 'react';\nimport { Badge } from 'reactstrap';\n\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend\n} from 'recharts';\nimport '../../styles/TimeSeries.css';\n\nclass TimeSeries extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const attributeName = this.props.attributeName;\n    if (this.props.condition === 'large') {\n      return (\n        <div className=\"chartDiv\">\n          <Badge color=\"info\" className=\"popupHeader\">\n            {' '}\n            {this.props.attributeName} vs Year{' '}\n          </Badge>\n          <LineChart\n            width={1050}\n            height={450}\n            data={this.props.data}\n            margin={{ top: 5, right: 5, bottom: 5, left: 5 }}\n          >\n            <CartesianGrid\n              className=\"chartDiv\"\n              stroke=\"#ccc\"\n              strokeDasharray=\"5 5\"\n              padding={{ left: 20, right: 20 }}\n            />\n            <XAxis\n              dataKey=\"year\"\n              label={{\n                value: 'Year',\n                position: 'insideBottom'\n              }}\n            />\n            <YAxis\n              label={{\n                value: attributeName,\n                angle: -90,\n                position: 'insideLeft'\n              }}\n            />\n            <Tooltip />\n            <Legend verticalAlign=\"bottom\" iconSize={10} />\n            {this.props.locations.map((location, i) => (\n              <Line\n                key={location.id}\n                type=\"monotone\"\n                dataKey={location.name}\n                stroke={location.color}\n                isAnimationActive={false}\n              />\n            ))}\n          </LineChart>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"chartDiv\">\n          <Badge color=\"info\"> {this.props.attributeName} vs Year </Badge>\n          <LineChart\n            width={475}\n            height={200}\n            data={this.props.data}\n            margin={{ top: 5, right: 5, bottom: 5, left: 5 }}\n          >\n            <CartesianGrid\n              className=\"chartDiv\"\n              stroke=\"#ccc\"\n              strokeDasharray=\"5 5\"\n              padding={{ left: 20, right: 20 }}\n            />\n            <XAxis\n              dataKey=\"year\"\n              label={{\n                value: 'Year',\n                position: 'insideBottom'\n              }}\n            />\n            <YAxis\n              label={{\n                value: attributeName,\n                angle: -90,\n                position: 'insideLeft'\n              }}\n            />\n            <Tooltip />\n            {this.props.locations.map((location, i) => (\n              <Line\n                key={location.id}\n                type=\"monotone\"\n                dataKey={location.name}\n                stroke={location.color}\n                isAnimationActive={false}\n              />\n            ))}\n          </LineChart>\n        </div>\n      );\n    }\n  }\n}\n\nexport default TimeSeries;\n","import React, { Component } from 'react';\nimport { Spinner } from 'reactstrap';\nimport axios from 'axios/index';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport TimeSeriesChart from './TimeSeriesChart';\nimport { TRUTHTREE_URI } from '../../constants';\n\nclass TimeSeriesView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      locations: [],\n      data: [],\n      currentLevel: null,\n      dataReal: [],\n      locationIds: [],\n      lineColors: [\n        'red',\n        'purple',\n        'green',\n        'blue',\n        'deeppink',\n        'orange',\n        'navy',\n        'olive',\n        'lime',\n        'indianred',\n        'dimgrey'\n      ]\n    };\n    this.fetchResponse = this.fetchResponse.bind(this);\n    this.formatResponse = this.formatResponse.bind(this);\n    this.initializeYearMap = this.initializeYearMap.bind(this);\n    this.fetchLocations = this.fetchLocations.bind(this);\n  }\n\n  componentDidMount() {\n    const len = this.props.selectedAttributes.length;\n    if (len !== 0) {\n      this.fetchLocations();\n    }\n  }\n\n  componentWillReceiveProps() {\n    const len = this.props.selectedAttributes.length;\n    if (len !== 0) {\n      this.fetchLocations();\n    }\n  }\n\n  fetchLocations() {\n    let minPopulation = 0;\n    let maxPopulation = 0;\n    let locationIds = [];\n    let year = this.props.yearSelected ? this.props.yearSelected : 2016;\n\n    axios\n      .get(\n        `${TRUTHTREE_URI}/api/population?locationId=` +\n          this.props.id +\n          '&year=' +\n          year\n      )\n      .then(response => {\n        let population = response.data.population;\n        maxPopulation = Math.floor(\n          population + (this.props.populationRange[1] / 100) * population\n        );\n        minPopulation = Math.floor(\n          population + (this.props.populationRange[0] / 100) * population\n        );\n        return axios\n          .get(\n            `${TRUTHTREE_URI}/api/states?populationRange=` +\n              minPopulation +\n              ',' +\n              maxPopulation\n          )\n          .then(response => {\n            _.map(response.data, obj => {\n              locationIds.push(obj.id);\n            });\n            this.setState({ locationIds: locationIds });\n\n            this.fetchResponse();\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  fetchResponse() {\n    let url =\n      `${TRUTHTREE_URI}/api/attributes?locationIds=` +\n      this.state.locationIds +\n      '&attributeIds=' +\n      this.props.selectedAttributes[this.props.index][0];\n    axios\n      .get(url)\n      .then(response => {\n        this.formatResponse(response);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  formatResponse(response) {\n    let data = [];\n    let locations = [];\n    let map = {};\n    response.data.map(dataForEachLocation => {\n      let location = {};\n      dataForEachLocation.attributes.map(attributesForEachLocation => {\n        attributesForEachLocation.data.map(attrValue => {\n          let val = map[attributesForEachLocation.attribute_id];\n          if (val === undefined) {\n            val = this.initializeYearMap();\n          }\n          let da = val[attrValue.year - 1967];\n          if (\n            da[dataForEachLocation.location_id] === 0 ||\n            da[dataForEachLocation.location_id] === undefined\n          ) {\n            val[attrValue.year - 1967][dataForEachLocation.location_id] =\n              attrValue.value;\n          }\n          map[attributesForEachLocation.attribute_id] = val;\n        });\n        location['id'] = dataForEachLocation.location_id;\n        let select = this.state.lineColors[Math.floor(Math.random() * 11)];\n        location['color'] = select;\n        location['name'] = dataForEachLocation.location_id;\n        locations.push(location);\n      });\n    });\n    data.push(map);\n    this.setState({ data: data, locations: locations, loading: false });\n  }\n\n  initializeYearMap() {\n    let yearArr = [];\n    for (let i = 1967; i < 2017; i++) {\n      let yearEntry = { year: i };\n      yearArr.push(yearEntry);\n    }\n    return yearArr;\n  }\n\n  render() {\n    const len = this.props.selectedAttributes.length;\n\n    const { loading } = this.state;\n\n    if (len === 0) {\n      return <div>Select an attribute</div>;\n    } else {\n      if (loading === true) {\n        return (\n          <div className=\"d-flex justify-content-center\">\n            <Spinner\n              className=\"align-self-center\"\n              color=\"secondary\"\n              size=\"sm\"\n            />\n          </div>\n        );\n      } else {\n        return this.state.data.map((attrData, i) => {\n          return (\n            <TimeSeriesChart\n              data={\n                attrData[this.props.selectedAttributes[this.props.index][i]]\n              }\n              attributeName={this.props.selectedAttributes[this.props.index][1]}\n              locations={this.state.locations}\n              condition={this.props.condition}\n            />\n          );\n        });\n      }\n    }\n  }\n}\n\nconst mapState = state => ({\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes,\n  year: state.YearSelectorReducer.yearSelected,\n  populationRange: state.AttributeRangeReducer.populationRange\n});\nexport default connect(mapState)(TimeSeriesView);\n","import React, { Component } from 'react';\nimport {\n  Container,\n  Row,\n  Card,\n  CardBody,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Badge\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport TimeSeriesView from './TimeSeriesView';\n\nimport '../../styles/TimeSeries.css';\n\nclass GridTest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n\n    this.modalToggle = this.modalToggle.bind(this);\n  }\n\n  modalToggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  getAttributeNames(type) {\n    return _.flatMap(this.props.selectedAttributes, elem => {\n      return type === 'name' ? elem[1] : elem[0];\n    });\n  }\n\n  handExpandClick = attrId =>\n    this.setState({\n      modal: true,\n      modalAttrIndex: attrId\n    });\n\n  render() {\n    let attributes = this.getAttributeNames('name');\n    let len = attributes.length;\n\n    let cards = attributes.map((card, index) => {\n      return (\n        <Card key={index} sm=\"8\">\n          <CardBody>\n            <TimeSeriesView index={index} condition=\"tiny\" id={this.props.id} />\n            <Button\n              className=\"button\"\n              color=\"secondary\"\n              onClick={() => this.handExpandClick(index)}\n            >\n              <Badge>Expand</Badge>\n            </Button>\n          </CardBody>\n        </Card>\n      );\n    });\n\n    if (len === 0) {\n      return (\n        <Container className=\"alert\">\n          {' '}\n          Please select minimum of one attribute{' '}\n        </Container>\n      );\n    } else {\n      return (\n        <Container className=\"GridContainer\">\n          <Row>\n            {cards}\n            <Modal\n              isOpen={this.state.modal}\n              toggle={this.modalToggle}\n              className=\"GridModal\"\n            >\n              <ModalBody>\n                <TimeSeriesView\n                  index={this.state.modalAttrIndex}\n                  condition=\"large\"\n                  id={this.props.id}\n                />\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"secondary\" onClick={this.modalToggle}>\n                  Cancel\n                </Button>\n              </ModalFooter>\n            </Modal>\n          </Row>\n        </Container>\n      );\n    }\n  }\n}\nconst mapState = state => ({\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes\n});\nexport default connect(mapState)(GridTest);\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport '../styles/Home.css';\nimport { Card, CardBody, CardHeader } from 'reactstrap';\n\nimport DisplayComponent from './DisplayComponent';\nimport LeftSideBar from './LeftSideBar';\nimport YearSelector from './YearSelector';\nimport AttributeDeselector from './AttributeDeselector';\nimport Filters from './AttributeRange';\nimport Tabs from './Explore/Tabs';\nimport TimeSeriesGrid from './Explore/TimeSeriesGrid';\n\nconst homeStyle = {\n  paddingTop: 90\n};\n\nclass Home extends Component {\n  render() {\n    return (\n      <Container fluid style={homeStyle}>\n        <Row>\n          <LeftSideBar />\n\n          <div className=\"col-12 col-md-10 align-items-center\">\n            <Card>\n              <div className={'attribute-selector-padding'}>\n                <AttributeDeselector />\n              </div>\n              <Tabs>\n                <div label=\"Table View\">\n                  <DisplayComponent\n                    level={this.props.match.params.level}\n                    id={this.props.match.params.id}\n                  />\n                </div>\n\n                <div label=\"Time Series View\">\n                  <TimeSeriesGrid id={this.props.match.params.id} />\n                </div>\n              </Tabs>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <div>\n                  Selected Location: <b>{this.props.match.params.name}</b>\n                </div>\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col className=\"border-right\">\n                    <Filters\n                      level={this.props.match.params.level}\n                      location={this.props.match.params.name}\n                      locationId={this.props.match.params.id}\n                    />\n                  </Col>\n                  <Col>\n                    <YearSelector />\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </div>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport {\n  Collapse,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavItem,\n  NavLink,\n  NavbarToggler\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nimport '../styles/Header.css';\nimport logo from '../truthtree-logo.png';\n\nconst navbarStyle = {\n  backgroundColor: 'rgba(13, 22, 38, 0.8)'\n};\n\nconst navBrandStyle = {\n  '&:hover': {\n    textDecoration: 'none'\n  }\n};\n\nconst logoStyle = {\n  width: 50\n};\n\nclass Header extends Component {\n  state = {\n    collapseOpen: false\n  };\n\n  render() {\n    return (\n      <Navbar style={navbarStyle} expand=\"md\" className=\"fixed-top\">\n        <NavbarBrand className=\"text-primary\" style={navBrandStyle}>\n          <Link to=\"/\">\n            <img\n              src={logo}\n              style={logoStyle}\n              className=\"d-inline-block\"\n              alt=\"TruthTree logo\"\n            />\n          </Link>\n          &nbsp;TruthTree\n        </NavbarBrand>\n        <NavbarToggler\n          onClick={() =>\n            this.setState({ collapseOpen: !this.state.collapseOpen })\n          }\n        />\n        <Collapse isOpen={this.state.collapseOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink tag={Link} to=\"/\">\n                Explore\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to=\"/about\">\n                About\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { Container, Jumbotron } from 'reactstrap';\nimport '../../styles/About.css';\n\nconst aboutStyle = {\n  paddingTop: 70\n};\n\nclass About extends Component {\n  render() {\n    return (\n      <Container fluid style={aboutStyle} className=\"about\">\n        <Jumbotron className=\"float-center\">\n          <h1 className=\"display-3\">TruthTree</h1>\n          <p>A Public Data Vizipedia/Wiki-Laboratory</p>\n          <hr className=\"my-2\" />\n          <p className=\"lead\">\n            TruthTree seeks to unite all the public data in the world into a\n            data-visualization tool and reference platform that can facilitate\n            data-driven understanding and consensus regarding geography,\n            politics, and culture for geographical entities at all scales.\n          </p>\n          <p className=\"lead\" />\n        </Jumbotron>\n      </Container>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n\nimport mapStyles from './mapStyles.json';\n\nconst mapContainerStyle = {\n  height: '100%',\n  width: '100%'\n};\n\nclass Map extends Component {\n  state = {\n    center: {\n      lat: 37.09024,\n      lng: -95.712891\n    },\n    zoom: 5\n  };\n\n  handleApiLoaded = (map, maps) => {\n    map.setOptions({\n      styles: mapStyles,\n      fullscreenControlOptions: {\n        position: maps.ControlPosition.BOTTOM_RIGHT\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div style={mapContainerStyle} className=\"position-absolute\">\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: 'AIzaSyD6S0fXIE22l64bV3nhv-EB-7K1gh39nqs' }}\n          defaultCenter={this.state.center}\n          defaultZoom={this.state.zoom}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({ map, maps }) => this.handleApiLoaded(map, maps)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Map;\n","export const updateValue = value => {\n  return {\n    type: 'SEARCHBOX_UPDATE_VALUE',\n    payload: value\n  };\n};\n","import React, { Component } from 'react';\nimport { Container, Row, Col, Label, Spinner, Input } from 'reactstrap';\nimport { get } from 'axios';\nimport Fuse from 'fuse.js';\nimport Autosuggest from 'react-autosuggest';\nimport { Link, withRouter } from 'react-router-dom';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\n\nimport { TRUTHTREE_URI } from '../../constants';\nimport { updateValue } from '../../actions/LocationSearchBoxActions';\n\n// TruthTree API endpoints\nconst ENDPOINTS = {\n  STATES: `${TRUTHTREE_URI}/api/states`,\n  COUNTIES: `${TRUTHTREE_URI}/api/counties`,\n  CITIES: `${TRUTHTREE_URI}/api/cities`\n};\n\nconst TYPE_CODE = {\n  0: 'states',\n  1: 'counties',\n  2: 'cities'\n};\n\nconst createFuseOptions = keys => {\n  return {\n    threshold: 0.6,\n    includeScore: true,\n    location: 0,\n    distance: 100,\n    maxPatternLength: 32,\n    minMatchCharLength: 2,\n    keys: keys\n  };\n};\n\nconst renderInputComponent = inputProps => (\n  <div>\n    <Label\n      style={{ cursor: 'pointer', color: 'white' }}\n      for=\"location-search-box\"\n    >\n      Search for a U.S location:\n    </Label>\n    <Input\n      {...inputProps}\n      id=\"location-search-box\"\n      name=\"location-search-box\"\n      placeholder=\"Try something like Seattle or Boston\"\n    />\n  </div>\n);\n\nconst renderSuggestionsContainer = ({ containerProps, children }) => {\n  const style = {\n    height: '5em'\n  };\n  return (\n    <div style={style} {...containerProps}>\n      {children}\n    </div>\n  );\n};\n\nconst getSuggestionLabel = suggestion => {\n  let item = suggestion.item;\n  let label = item.name;\n  if (item.typeCode !== 1) {\n    label += item.county ? `, ${item.county}` : '';\n  }\n  label += item.stateAbbr ? `, ${item.stateAbbr}` : '';\n  return label;\n};\n\nconst renderSuggestion = suggestion => {\n  let item = suggestion.item;\n  const url = `/explore/${\n    TYPE_CODE[item.typeCode]\n  }/${item.name.toLowerCase().replace(' ', '-')}/${item.id}`;\n  return <Link to={url}>{getSuggestionLabel(suggestion)}</Link>;\n};\n\nclass LocationSearchBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      value: '',\n      popoverOpen: false,\n      statesData: undefined,\n      countiesData: undefined,\n      citiesData: undefined,\n      matchedStates: [],\n      matchedCounties: [],\n      matchedCities: [],\n      suggestions: []\n    };\n    this.timer = null;\n    this.debouncedhandleSuggestionsFetchRequested = _.debounce(\n      this.handleSuggestionsFetchRequested,\n      250\n    );\n  }\n\n  componentDidMount() {\n    const reqs = [\n      get(ENDPOINTS.STATES),\n      get(ENDPOINTS.COUNTIES),\n      get(ENDPOINTS.CITIES)\n    ];\n\n    Promise.all(reqs)\n      .then(([statesRes, countiesRes, citiesRes]) => {\n        this._parseData(statesRes.data, countiesRes.data, citiesRes.data);\n      })\n      .catch(err => console.log(err));\n  }\n\n  _parseData = (statesData, countiesData, citiesData) => {\n    const statesDataById = statesData.reduce((newStatesData, state) => {\n      newStatesData[state.state_code] = state;\n      state.counties = {};\n      state.typeCode = 0;\n      return newStatesData;\n    }, {});\n\n    countiesData.forEach(county => {\n      const state = statesDataById[county.state_code];\n      county.state = state.name;\n      county.stateAbbr = state.abbreviation;\n      county.typeCode = 1;\n      state.counties[county.county] = county;\n    });\n\n    citiesData.forEach(city => {\n      const state = statesDataById[city.state_code];\n      const county = state.counties[city.county];\n\n      if (state) {\n        city.state = state.name;\n        city.stateAbbr = state.abbreviation;\n      } else {\n        city.state = null;\n        city.stateAbbr = null;\n      }\n      city.county = county ? county.name : null;\n      city.typeCode = 2;\n    });\n\n    const statesFuseOptions = createFuseOptions([\n      { name: 'abbreviation', weight: 0.3 },\n      { name: 'name', weight: 0.7 }\n    ]);\n\n    const countiesFuseOptions = createFuseOptions([\n      { name: 'name', weight: 0.6 },\n      { name: 'state', weight: 0.3 },\n      { name: 'stateAbbr', weight: 0.1 }\n    ]);\n\n    const citiesFuseOptions = createFuseOptions([\n      { name: 'name', weight: 0.7 },\n      { name: 'state', weight: 0.2 },\n      { name: 'stateAbbr', weight: 0.05 },\n      { name: 'county', weight: 0.05 }\n    ]);\n\n    this.setState({\n      loading: false,\n      statesData: new Fuse(statesData, statesFuseOptions),\n      countiesData: new Fuse(countiesData, countiesFuseOptions),\n      citiesData: new Fuse(citiesData, citiesFuseOptions)\n    });\n  };\n\n  handleInputChange = (_, { newValue }) => {\n    this.props.dispatch(updateValue(newValue));\n  };\n\n  handleSuggestionsFetchRequested = ({ value }) => {\n    const searchPhrase = value;\n    const matchedStates = this.state.statesData.search(searchPhrase);\n    const matchedCounties = this.state.countiesData.search(searchPhrase);\n    const matchedCities = this.state.citiesData.search(searchPhrase);\n    const temp = [].concat(\n      matchedStates.slice(0, 5),\n      matchedCounties.slice(0, 5),\n      matchedCities.slice(0, 5)\n    );\n    temp.sort((a, b) => a.score - b.score);\n    this.setState({\n      suggestions: temp.slice(0, 10)\n    });\n  };\n\n  render() {\n    const { loading } = this.state;\n\n    const inputProps = {\n      value: this.props.value,\n      onChange: this.handleInputChange\n    };\n\n    return (\n      <Container>\n        <Row className=\"py-3\">\n          {loading ? (\n            <Col className=\"d-flex justify-content-center\">\n              <Spinner className=\"align-self-center\" color=\"primary\" />\n            </Col>\n          ) : (\n            <Col>\n              <Autosuggest\n                theme={{\n                  container: 'position-relative',\n                  suggestionsList:\n                    'list-group position-absolute w-100 overflow-y',\n                  suggestion: 'list-group-item'\n                }}\n                suggestions={this.state.suggestions}\n                alwaysRenderSuggestions\n                onSuggestionsClearRequested={() =>\n                  this.setState({ suggestions: [] })\n                }\n                onSuggestionsFetchRequested={\n                  this.debouncedhandleSuggestionsFetchRequested\n                }\n                getSuggestionValue={getSuggestionLabel}\n                renderInputComponent={renderInputComponent}\n                renderSuggestionsContainer={renderSuggestionsContainer}\n                renderSuggestion={renderSuggestion}\n                inputProps={inputProps}\n              />\n            </Col>\n          )}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  value: store.LocationSearchBoxReducer.value\n});\n\nexport default connect(mapStateToProps)(withRouter(LocationSearchBox));\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport Typist from 'react-typist';\nimport { Link } from 'react-router-dom';\n\nconst introHeadingStyle = {\n  color: 'white'\n};\n\nclass IntroHeading extends Component {\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col style={introHeadingStyle}>\n            <h1 className=\"display-5\">Welcome to TruthTree</h1>\n            <Typist avgTypingDelay={20} cursor={{ hideWhenDone: true }}>\n              We're an open source data visualization project that focuses on\n              U.S government financial spending. &nbsp;\n              <Link to=\"/about\">Find out more</Link>\n            </Typist>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default IntroHeading;\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport LocationSearchBox from './LocationSearchBox';\nimport IntroHeading from './IntroHeading';\n\nconst introContainerStyle = {\n  marginBottom: '12em',\n  backgroundColor: 'rgba(13, 22, 38, 0.7)'\n};\n\nclass Intro extends Component {\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col\n            style={introContainerStyle}\n            xs={12}\n            sm={11}\n            md={9}\n            lg={6}\n            className=\"py-3 px-4\"\n          >\n            <IntroHeading />\n            <LocationSearchBox />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Intro;\n","import React, { Component } from 'react';\n\nimport Map from './Map';\nimport Intro from './Intro';\n\nconst exploreStyle = {\n  flex: '1 1 100%'\n};\n\nclass Explore extends Component {\n  render() {\n    return (\n      <div\n        style={exploreStyle}\n        className=\"d-flex align-items-center position-relative\"\n      >\n        <Map />\n        <Intro />\n      </div>\n    );\n  }\n}\n\nexport default Explore;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Explore from './components/Explore';\n\nimport './App.css';\nimport './styles/Tab.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"d-flex flex-column\">\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={Explore} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/explore/:level/:name/:id\" component={Home} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-typist/dist/Typist.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/RootReducer';\nexport default function configureStore() {\n  return createStore(rootReducer, applyMiddleware(thunk));\n}\n"],"sourceRoot":""}