{
  "version": 3,
  "sources": [
    "truthtree-logo.png",
    "constants.js",
    "reducers/RootReducer.js",
    "reducers/FilterByReducer.js",
    "reducers/AttributeRangeReducer.js",
    "reducers/SelectedAttributeReducer.js",
    "reducers/YearSelectorReducer.js",
    "components/YearSelector.js",
    "components/DisplayComponent.js",
    "components/LeftSideBar.js",
    "components/AttributeRange.js",
    "components/Explore/Tab.js",
    "components/Explore/Tabs.js",
    "components/Explore/TimeSeries.js",
    "components/Home.js",
    "components/Header.js",
    "components/Trending/index.js",
    "components/Explore/Map.js",
    "components/Explore/LocationSearchBox.js",
    "components/Explore/index.js",
    "App.js",
    "serviceWorker.js",
    "index.js",
    "store.js"
  ],
  "names": [
    "module",
    "exports",
    "__webpack_require__",
    "p",
    "TRUTHTREE_URI",
    "combineReducers",
    "FilterByReducer",
    "state",
    "arguments",
    "length",
    "undefined",
    "dimension",
    "action",
    "type",
    "Object",
    "objectSpread",
    "value",
    "AttributeRangeReducer",
    "attributeName",
    "populationRange",
    "SelectedAttributeReducer",
    "sidebarData",
    "selectedAttributes",
    "console",
    "log",
    "Array",
    "from",
    "YearSelectorReducer",
    "yearSelected",
    "DisplayComponent",
    "props",
    "_this",
    "classCallCheck",
    "this",
    "possibleConstructorReturn",
    "getPrototypeOf",
    "call",
    "currentLevel",
    "data",
    "locationIds",
    "cellRenderer",
    "bind",
    "assertThisInitialized",
    "getAttributeType",
    "populationRangeCall",
    "columnIndex",
    "_ref",
    "key",
    "rowIndex",
    "style",
    "react_default",
    "a",
    "createElement",
    "_",
    "flatMap",
    "elem",
    "_this2",
    "minPopulation",
    "maxPopulation",
    "year",
    "axios",
    "get",
    "concat",
    "id",
    "then",
    "response",
    "population",
    "Math",
    "floor",
    "map",
    "obj",
    "push",
    "name",
    "setState",
    "catch",
    "error",
    "_this3",
    "attributes",
    "row",
    "indexOf",
    "location_id",
    "dist_es",
    "columnCount",
    "columnWidth",
    "height",
    "rowCount",
    "rowHeight",
    "width",
    "Component",
    "connect",
    "LeftSideBar",
    "handleClickCollection",
    "collection",
    "defineProperty",
    "handleChangeSearch",
    "event",
    "searchedString",
    "target",
    "toLowerCase",
    "renderSearchTerm",
    "search",
    "attr",
    "isLoaded",
    "collapsedLeft",
    "keys",
    "attrKey",
    "match",
    "params",
    "attribute",
    "newArr",
    "attribute_id",
    "_loop",
    "i",
    "remove",
    "dispatch",
    "v",
    "_ret",
    "_this4",
    "className",
    "onClick",
    "collapseLeftBar",
    "data-spy",
    "data-offset-top",
    "onChange",
    "placeholder",
    "display",
    "handleClickAttribute",
    "background",
    "withRouter",
    "dropdownMenuStyle",
    "overflow",
    "allYears",
    "YearSelector",
    "toggle",
    "dropdownOpen",
    "prevState",
    "e",
    "yearArray",
    "DropdownItem",
    "Dropdown",
    "isOpen",
    "DropdownToggle",
    "caret",
    "DropdownMenu",
    "Range",
    "Slider",
    "AttributeRange",
    "onSliderChange",
    "locationPopulation",
    "min",
    "max",
    "url",
    "locationId",
    "locPop",
    "res",
    "err",
    "createSliders",
    "currentAttribute",
    "location",
    "level",
    "dots",
    "step",
    "Tab",
    "_this$props",
    "label",
    "_this$props2",
    "activeTab",
    "Tabs",
    "onClickTabItem",
    "tab",
    "children",
    "child",
    "Explore_Tab",
    "location1",
    "location2",
    "TimeSeries",
    "rows",
    "cols",
    "LineChart",
    "margin",
    "top",
    "right",
    "bottom",
    "left",
    "CartesianGrid",
    "stroke",
    "strokeDasharray",
    "XAxis",
    "dataKey",
    "YAxis",
    "Tooltip",
    "Legend",
    "Line",
    "activeDot",
    "r",
    "Home",
    "Container",
    "fluid",
    "Row",
    "components_LeftSideBar",
    "Card",
    "Explore_Tabs",
    "components_DisplayComponent",
    "Explore_TimeSeries",
    "CardHeader",
    "CardBody",
    "Col",
    "components_AttributeRange",
    "components_YearSelector",
    "logoStyle",
    "Header",
    "collapseOpen",
    "Navbar",
    "color",
    "light",
    "expand",
    "NavbarBrand",
    "Link",
    "to",
    "src",
    "logo",
    "alt",
    "NavbarToggler",
    "Collapse",
    "navbar",
    "Nav",
    "NavItem",
    "NavLink",
    "tag",
    "Trending",
    "Map",
    "center",
    "lat",
    "lng",
    "zoom",
    "handleApiLoaded",
    "maps",
    "setOptions",
    "styles",
    "mapStyles",
    "lib_default",
    "bootstrapURLKeys",
    "defaultCenter",
    "defaultZoom",
    "yesIWantToUseGoogleMapApiInternals",
    "onGoogleApiLoaded",
    "ENDPOINTS",
    "STATES",
    "COUNTIES",
    "CITIES",
    "createFuseOptions",
    "threshold",
    "includeScore",
    "distance",
    "maxPatternLength",
    "minMatchCharLength",
    "PopoverSection",
    "items",
    "ListGroup",
    "ListGroupItem",
    "item",
    "index",
    "buttonText",
    "county",
    "stateAbbr",
    "replace",
    "LocationSearchBox",
    "_parseData",
    "statesData",
    "countiesData",
    "citiesData",
    "statesDataById",
    "reduce",
    "newStatesData",
    "state_code",
    "counties",
    "forEach",
    "abbreviation",
    "city",
    "statesFuseOptions",
    "weight",
    "countiesFuseOptions",
    "citiesFuseOptions",
    "loading",
    "Fuse",
    "handleChange",
    "timer",
    "clearTimeout",
    "searchPhrase",
    "setTimeout",
    "matchedStates",
    "matchedCounties",
    "matchedCities",
    "popoverOpen",
    "shouldPopoverOpen",
    "reqs",
    "Promise",
    "all",
    "_ref2",
    "_ref3",
    "slicedToArray",
    "statesRes",
    "countiesRes",
    "citiesRes",
    "_this$state",
    "Spinner",
    "Input",
    "Popover",
    "placement",
    "LocationSearchBox_PopoverSection",
    "slice",
    "exploreStyle",
    "flex",
    "searchBoxWrapperStyle",
    "zIndex",
    "Explore",
    "xs",
    "Explore_LocationSearchBox",
    "Explore_Map",
    "App",
    "BrowserRouter",
    "components_Header",
    "Switch",
    "Route",
    "exact",
    "path",
    "component",
    "Boolean",
    "window",
    "hostname",
    "ReactDOM",
    "render",
    "es",
    "store",
    "createStore",
    "rootReducer",
    "applyMiddleware",
    "thunk",
    "src_App_0",
    "document",
    "getElementById",
    "navigator",
    "serviceWorker",
    "ready",
    "registration",
    "unregister"
  ],
  "mappings": "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",
  "file": "static/js/main.576c0f5f.chunk.js",
  "sourcesContent": [
    "module.exports = __webpack_public_path__ + \"static/media/truthtree-logo.75b56fb9.png\";",
    "const TRUTHTREE_URI = 'https://truthtree.herokuapp.com';\nmodule.exports = {\n  TRUTHTREE_URI\n};\n",
    "import { combineReducers } from 'redux';\nimport AttributeRangeReducer from './AttributeRangeReducer';\nimport FilterByReducer from './FilterByReducer';\nimport SelectedAttributeReducer from './SelectedAttributeReducer';\nimport YearSelectorReducer from './YearSelectorReducer';\n\nexport default combineReducers({\n  FilterByReducer,\n  AttributeRangeReducer,\n  SelectedAttributeReducer,\n  YearSelectorReducer\n});\n",
    "export default (state = { dimension: 'State' }, action) => {\n  switch (action.type) {\n    case 'CHANGE_DIMENSION':\n      return {\n        ...state,\n        dimension: action.value\n      };\n    default:\n      return state;\n  }\n};\n",
    "export default (\n  state = {\n    attributeName: ['Population'],\n    populationRange: [-50, 50]\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'RANGE_SELECTION':\n      return {\n        ...state,\n        populationRange: action.populationRange\n      };\n    default:\n      return state;\n  }\n};\n",
    "export default (\n  state = {\n    sidebarData: [],\n    selectedAttributes: []\n  },\n  action\n) => {\n  console.log(action);\n  switch (action.type) {\n    case 'CHANGE_ATTRIBUTE':\n      return {\n        ...state,\n        selectedAttributes: Array.from(action.value)\n      };\n    default:\n      return state;\n  }\n};\n",
    "export default (state = { yearSelected: 2016 }, action) => {\n  switch (action.type) {\n    case 'CHANGE_YEAR':\n      state = {\n        ...state,\n        yearSelected: action.yearSelected\n      };\n      break;\n    default:\n      return state;\n  }\n  return state;\n};\n",
    "import React, { Component } from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\nimport { connect } from 'react-redux';\n\nconst dropdownMenuStyle = {\n  height: '200px',\n  overflow: 'auto'\n};\n\nlet allYears = [];\nfor (let i = 1966; i < 2016; i++) {\n  allYears.push(i + 1);\n}\n\nclass YearSelector extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      dropdownOpen: false,\n      yearSelected: '2016'\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  onClick(e) {\n    //this.setState({ yearSelected: e.target.id });\n    console.log(e.target.id);\n    this.props.dispatch({\n      type: 'CHANGE_YEAR',\n      yearSelected: e.target.id\n    });\n  }\n\n  render() {\n    let yearArray = allYears.map((year, i) => (\n      <DropdownItem key={i} id={year} onClick={this.onClick}>\n        {year}\n      </DropdownItem>\n    ));\n\n    return (\n      <div>\n        <p> Select Year of Data to be displayed: </p>\n        <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n          <DropdownToggle caret>{this.props.yearSelected}</DropdownToggle>\n          <DropdownMenu style={dropdownMenuStyle}>{yearArray}</DropdownMenu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    yearSelected: state.YearSelectorReducer.yearSelected\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(YearSelector);\n",
    "import React, { Component } from 'react';\nimport { Grid } from 'react-virtualized';\nimport { connect } from 'react-redux';\nimport axios from 'axios/index';\nimport _ from 'lodash';\nimport '../styles/DisplayComponent.css';\nimport { TRUTHTREE_URI } from '../constants';\n\nclass DisplayComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentLevel: null,\n      data: [['Name', 'Population']],\n      locationIds: []\n    };\n    this.cellRenderer = this.cellRenderer.bind(this);\n    this.getAttributeType = this.getAttributeType.bind(this);\n    this.populationRangeCall = this.populationRangeCall.bind(this);\n  }\n\n  cellRenderer({ columnIndex, key, rowIndex, style }) {\n    return (\n      <div key={key} style={style}>\n        {this.state.data[rowIndex][columnIndex]}\n      </div>\n    );\n  }\n\n  getAttributeType(type) {\n    console.log(this.props.selectedAttributes);\n    return _.flatMap(this.props.selectedAttributes, elem => {\n      return type === 'ids' ? elem[0] : elem[1];\n    });\n  }\n\n  componentDidMount() {\n    this.populationRangeCall();\n  }\n\n  populationRangeCall() {\n    let minPopulation = 0;\n    let maxPopulation = 0;\n    let data = [['Name', 'Population']];\n    let locationIds = [];\n    let year = this.props.yearSelected ? this.props.yearSelected : 2016;\n    // Calculate min and max population\n    axios\n      .get(\n        `${TRUTHTREE_URI}/api/population?locationId=` +\n          this.props.id +\n          '&year=' +\n          year\n      )\n      .then(response => {\n        let population = response.data.population;\n        maxPopulation = Math.floor(\n          population + (this.props.populationRange[1] / 100) * population\n        );\n        minPopulation = Math.floor(\n          population + (this.props.populationRange[0] / 100) * population\n        );\n        return axios\n          .get(\n            `${TRUTHTREE_URI}/api/states?populationRange=` +\n              minPopulation +\n              ',' +\n              maxPopulation\n          )\n          .then(response => {\n            _.map(response.data, obj => {\n              data.push([obj.name, obj.population]);\n              locationIds.push(obj.id);\n            });\n            this.setState({ data: data });\n            this.setState({ locationIds: locationIds });\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    console.log('----------');\n    console.log(this.props);\n    console.log('----------');\n    let attributes = this.getAttributeType('ids');\n    if (attributes.length > 0) {\n      let temp = ['Name', 'Population'];\n      this.state.data[0] = temp.concat(this.getAttributeType('name'));\n      axios\n        .get(\n          '/api/attributes?locationIds=' +\n            this.state.locationIds +\n            '&attributeIds=' +\n            attributes +\n            '&yearList=' +\n            this.props.year\n        )\n        .then(response => {\n          //data contains the variables\n          console.log(response.data);\n          _.map(response.data, row => {\n            console.log('+++++++++');\n            console.log(\n              this.state.data[this.state.locationIds.indexOf(row.location_id)]\n            );\n            console.log(\n              _.map(row.attributes, elem => {\n                return elem.data;\n              })\n            );\n            console.log('++++++++++');\n            this.state.data[\n              this.state.locationIds.indexOf(row.location_id)\n            ].push(\n              row.attributes[0].data[0].value\n              // _.map(row.attributes, elem => {\n              //     return elem.data[0].value;\n              // })\n            );\n          });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n\n    return (\n      <div id=\"mainDisplay\">\n        <Grid\n          cellRenderer={this.cellRenderer}\n          columnCount={this.state.data[0].length}\n          columnWidth={150}\n          height={500}\n          rowCount={this.state.data.length}\n          rowHeight={35}\n          width={1100}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapState = state => ({\n  year: state.YearSelectorReducer.yearSelected,\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes,\n  populationRange: state.AttributeRangeReducer.populationRange\n});\n\nexport default connect(mapState)(DisplayComponent);\n",
    "import React, { Component } from 'react';\nimport '../styles/LeftSideBar.css';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n//import { Grid } from 'react-virtualized';\nimport { TRUTHTREE_URI } from '../constants';\nimport { withRouter } from 'react-router-dom';\n\nclass LeftSideBar extends Component {\n  constructor(props) {\n    super(props);\n    //   /api/collections?level=state\n    this.state = {\n      sidebarData: [],\n      isLoaded: false,\n      selectedAttributes: [],\n      collapsedLeft: false,\n      searchedString: ''\n    };\n    // Set initial state of each collection to false\n    Object.keys(this.state.sidebarData).map(key => (this.state[key] = false));\n    Object.keys(this.state.sidebarData).map(key =>\n      Object.keys(this.state.sidebarData[key]).map(\n        attrKey => (this.state[key + attrKey] = false)\n      )\n    );\n  } /*\n  // each of these will need a diff api\n  componentWillReceiveProps(nextProps) {\n      let year = nextProps.year;\n      axios\n          .get(`${TRUTHTREE_URI}/api/collections?locationId=` + //382026003\n              this.props.match.params.id+this.props.year)\n        .then(response => {\n          //data contains the variables\n          this.setState({\n            sidebarData: response.data,\n            isLoaded: true\n          });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    } \n  }*/\n\n  componentDidMount() {\n    axios\n      .get(\n        `${TRUTHTREE_URI}/api/collections?locationId=` + //382026003\n          this.props.match.params.id // +&year=2016\n      )\n      .then(response => {\n        //data contains the variables\n        this.setState({\n          sidebarData: response.data,\n          isLoaded: true\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  // Toggle state of each collection on click\n  handleClickCollection = collection => {\n    this.setState({ [collection]: !this.state[collection] });\n  };\n\n  // stores attribute selected\n  handleClickAttribute(collection, attribute) {\n    this.setState({\n      [collection + attribute]: !this.state[collection + attribute]\n    });\n    //console.log(this.state[collection+attribute]);\n    let newArr = this.state.selectedAttributes;\n    let id = attribute.attribute_id;\n    for (let i = 0; i < newArr.length; i++) {\n      if (newArr[i][0] === id) {\n        _.remove(newArr, elem => {\n          return elem === newArr[i];\n        });\n        this.setState({\n          selectedAttributes: newArr\n        });\n\n        this.props.dispatch({\n          type: 'CHANGE_ATTRIBUTE',\n          value: newArr\n        });\n        return;\n      }\n    }\n    newArr.push([id, attribute.name]);\n    //console.log(this.props);\n\n    this.setState({\n      selectedAttributes: newArr\n    });\n    this.props.dispatch({\n      type: 'CHANGE_ATTRIBUTE',\n      value: newArr\n    });\n\n    //this.setState({ [attribute]: !this.state[attribute] });\n  }\n\n  collapseLeftBar() {\n    this.setState({ collapsedLeft: !this.state.collapsedLeft });\n    this.setState({ searchedString: '' });\n  }\n\n  handleChangeSearch = event => {\n    this.setState({ searchedString: event.target.value.toLowerCase() });\n    if (this.state.searchedString == '') {\n    }\n  };\n\n  renderSearchTerm = collection => {\n    if (\n      this.state.searchedString == '' ||\n      this.state.sidebarData[collection].name\n        .toLowerCase()\n        .search(this.state.searchedString) > -1\n    ) {\n      return true;\n    }\n    var attr;\n    for (attr in this.state.sidebarData[collection].attributes) {\n      if (\n        this.state.sidebarData[collection].attributes[attr].name\n          .toLowerCase()\n          .search(this.state.searchedString) > -1\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  render() {\n    var { isLoaded } = this.state;\n    if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      if (this.state.collapsedLeft) {\n        return (\n          <button\n            className=\"col-md-flex d-md-flex\"\n            onClick={() => this.collapseLeftBar()}\n          >\n            {!this.state.collapsedLeft ? 'Hide Left Nav' : 'Show'}\n          </button>\n        );\n      } else {\n        return (\n          <nav className=\"scrollLeftBar col-md-2 d-none d-md-block bg-light sidebar\">\n            <input\n              className=\"leftSearch\"\n              data-spy=\"affix\"\n              data-offset-top=\"197\" //trying to make search box stay top\n              id=\"attribute-search-box\"\n              onChange={this.handleChangeSearch}\n              placeholder=\"Search for a property\"\n            />\n            <button\n              className=\"float-right\"\n              onClick={() => this.collapseLeftBar()}\n            >\n              {!this.state.collapsedLeft ? 'Hide' : 'Show Left Nav'}\n            </button>\n            <div\n              style={{\n                display: !this.state.collapsedLeft ? 'block' : 'none'\n              }}\n            >\n              {Object.keys(this.state.sidebarData).map((collection, i) => {\n                if (this.renderSearchTerm(collection)) {\n                  return (\n                    <div key={i}>\n                      <button\n                        className=\"accordion\"\n                        onClick={() => this.handleClickCollection(collection)}\n                      >\n                        {this.state.sidebarData[collection].name}\n                      </button>\n                      <div\n                        style={{\n                          display: this.state[collection] ? 'block' : 'none'\n                        }}\n                      >\n                        {Object.keys(\n                          this.state.sidebarData[collection].attributes\n                        ).map((attr, i) => {\n                          return (\n                            <label //{/*BUGS START HERE*/}\n                              onClick={() =>\n                                this.handleClickAttribute(\n                                  collection,\n                                  this.state.sidebarData[collection].attributes[\n                                    attr\n                                  ]\n                                )\n                              }\n                              key={i}\n                              className=\"panel float-right\"\n                              style={{\n                                background: this.state[collection + attr]\n                                  ? 'bisque'\n                                  : '#d4f3c7'\n                              }}\n                            >\n                              {console.log(this.state[collection + attr])}\n\n                              <div>\n                                {/* <input type=\"checkbox\"/>*/}\n                                {\n                                  this.state.sidebarData[collection].attributes[\n                                    attr\n                                  ].name\n                                }\n                              </div>\n                            </label>\n                          );\n                        })}\n                      </div>\n                      {/*BUGS END HERE*/}\n                    </div>\n                  );\n                }\n              })}\n            </div>\n          </nav>\n        );\n      }\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  selectedAttributes: state.SelectedAttributeReducer\n});\n\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(LeftSideBar));\n",
    "import React, { Component } from 'react';\nimport Slider from 'rc-slider';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport '../styles/AttributeRange.css';\nimport { TRUTHTREE_URI } from '../constants';\n\nconst Range = Slider.Range;\n\nclass AttributeRange extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locationPopulation: null,\n      value: [-5, 5],\n      min: -50,\n      max: 50\n    };\n  }\n\n  componentDidMount() {\n    let year = this.props.yearSelected ? this.props.yearSelected : 2016;\n    let url =\n      `${TRUTHTREE_URI}/api/population?locationId=` +\n      this.props.locationId +\n      '&year=' +\n      year;\n    console.log(url);\n    let locPop = null;\n\n    axios\n      .get(url)\n      .then(res => {\n        locPop = res.data.population;\n        console.log(res.data.population);\n        this.setState({ locationPopulation: locPop });\n      })\n      .catch(err => console.log(err));\n  }\n\n  onSliderChange = value => {\n    console.log();\n    this.props.dispatch({\n      type: 'RANGE_SELECTION',\n      populationRange: value\n    });\n  };\n\n  render() {\n    const createSliders = this.props.attribute.attributeName.map(\n      (currentAttribute, i) => (\n        <div key={i}>\n          <p>\n            {currentAttribute} of {this.props.location} {':  '}{' '}\n            <b>{this.state.locationPopulation}</b>\n          </p>\n          <p>\n            Select range of <b>{currentAttribute}</b> for filtering other{' '}\n            <b>{this.props.level}</b>:\n          </p>\n          <p className=\"Note\">\n            (*range selection available from -50% to +50% wrt to{' '}\n            {this.props.location} {currentAttribute})\n          </p>\n\n          <Range\n            dots\n            step={5}\n            value={this.props.attribute.populationRange}\n            min={this.state.min}\n            max={this.state.max}\n            onChange={this.onSliderChange}\n          />\n\n          <p>\n            Current selection: {this.props.attribute.populationRange[0]}% to{' '}\n            {this.props.attribute.populationRange[1]}% :\n          </p>\n        </div>\n      )\n    );\n\n    return (\n      <div>\n        <div>\n          <div> {createSliders} </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    year: state.YearSelectorReducer.yearSelected,\n    attribute: state.AttributeRangeReducer\n  };\n};\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AttributeRange);\n",
    "import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tab extends Component {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  };\n\n  render() {\n    const {\n      onClick,\n      props: { activeTab, label }\n    } = this;\n\n    let className = 'tab-list-item';\n\n    if (activeTab === label) {\n      className += ' tab-list-active';\n    }\n\n    return (\n      <li className={className} onClick={onClick}>\n        {label}\n      </li>\n    );\n  }\n}\n\nexport default Tab;\n",
    "import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Tab from './Tab';\nimport '../../styles/Tab.css';\n\nclass Tabs extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Array).isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: this.props.children[0].props.label\n    };\n  }\n\n  onClickTabItem = tab => {\n    this.setState({ activeTab: tab });\n  };\n\n  render() {\n    const {\n      onClickTabItem,\n      props: { children },\n      state: { activeTab }\n    } = this;\n\n    return (\n      <div className=\"tabs\">\n        <ol className=\"tab-list\">\n          {children.map(child => {\n            const { label } = child.props;\n\n            return (\n              <Tab\n                activeTab={activeTab}\n                key={label}\n                label={label}\n                onClick={onClickTabItem}\n              />\n            );\n          })}\n        </ol>\n        <div className=\"tab-content\">\n          {children.map(child => {\n            if (child.props.label !== activeTab) return undefined;\n            return child.props.children;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\n",
    "import React, { Component } from 'react';\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend\n} from 'recharts';\nimport { connect } from 'react-redux';\nconst data = [\n  { year: '1967', location1: 400, location2: 1200 },\n  { year: '1969', location1: 200, location2: 2400 },\n  { year: '2005', location1: 700, location2: 2000 },\n  { year: '2010', location1: 300, location2: 1500 }\n];\n\nclass TimeSeries extends Component {\n  render() {\n    console.log('In Render');\n    let rows = data.length;\n    let cols = Object.keys(data[0]).length;\n    console.log('Rows is ' + rows);\n    console.log('Cols is ' + cols);\n\n    // const createLine => (\n    //     <div key={i}>\n    //\n    //     </div>\n    //   )\n    // );\n    return (\n      <div>\n        <LineChart\n          width={400}\n          height={400}\n          data={data}\n          margin={{ top: 5, right: 20, bottom: 5, left: 0 }}\n        >\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis dataKey=\"year\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n\n          <Line\n            type=\"monotone\"\n            dataKey=\"location1\"\n            stroke=\"#8884d8\"\n            activeDot={{ r: 8 }}\n          />\n          <Line type=\"monotone\" dataKey=\"location2\" stroke=\"#82ca9d\" />\n        </LineChart>\n      </div>\n    );\n  }\n}\n\nexport default TimeSeries;\n",
    "import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport '../styles/Home.css';\nimport { Card, CardBody, CardHeader } from 'reactstrap';\n\nimport DisplayComponent from './DisplayComponent';\nimport LeftSideBar from './LeftSideBar';\nimport YearSelector from './YearSelector';\nimport Filters from './AttributeRange';\nimport Tabs from './Explore/Tabs';\nimport TimeSeriesChart from './Explore/TimeSeries';\n\nclass Home extends Component {\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <LeftSideBar />\n\n          <div className=\"col-12 col-md-10 align-items-center\">\n            <Card>\n              <Tabs>\n                <div label=\"Table View\">\n                  <DisplayComponent\n                    level={this.props.match.params.level}\n                    id={this.props.match.params.id}\n                  />\n                </div>\n\n                <div label=\"Time Series View\">\n                  <TimeSeriesChart />\n                </div>\n\n                <div label=\"Map View\">Coming soon :)</div>\n              </Tabs>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <div>\n                  Selected Location: <b>{this.props.match.params.name}</b>\n                </div>\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col className=\"border-right\">\n                    <Filters\n                      level={this.props.match.params.level}\n                      location={this.props.match.params.name}\n                      locationId={this.props.match.params.id}\n                    />\n                  </Col>\n                  <Col>\n                    <YearSelector />\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </div>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Home;\n",
    "import React, { Component } from 'react';\nimport {\n  Collapse,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavItem,\n  NavLink,\n  NavbarToggler\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nimport '../styles/Header.css';\nimport logo from '../truthtree-logo.png';\n\nconst logoStyle = {\n  width: 50\n};\n\nclass Header extends Component {\n  state = {\n    collapseOpen: false\n  };\n\n  render() {\n    return (\n      <Navbar color=\"light\" light expand=\"md\" className={this.props.className}>\n        <NavbarBrand>\n          <Link to=\"/\">\n            <img\n              src={logo}\n              style={logoStyle}\n              className=\"d-inline-block\"\n              alt=\"TruthTree logo\"\n            />\n          </Link>\n          &nbsp;TruthTree\n        </NavbarBrand>\n        <NavbarToggler\n          onClick={() =>\n            this.setState({ collapseOpen: !this.state.collapseOpen })\n          }\n        />\n        <Collapse isOpen={this.state.collapseOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink tag={Link} to=\"/\">\n                Trending\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to=\"/explore\">\n                Explore\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n",
    "import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Trending extends Component {\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col>Trending topics</Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Trending;\n",
    "import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n\nimport mapStyles from './mapStyles.json';\n\nclass Map extends Component {\n  state = {\n    center: {\n      lat: 37.09024,\n      lng: -95.712891\n    },\n    zoom: 5\n  };\n\n  handleApiLoaded = (map, maps) => {\n    console.log(map, maps);\n    map.setOptions({\n      styles: mapStyles\n    });\n  };\n\n  render() {\n    return (\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: 'AIzaSyD6S0fXIE22l64bV3nhv-EB-7K1gh39nqs' }}\n        defaultCenter={this.state.center}\n        defaultZoom={this.state.zoom}\n        yesIWantToUseGoogleMapApiInternals\n        onGoogleApiLoaded={({ map, maps }) => this.handleApiLoaded(map, maps)}\n      />\n    );\n  }\n}\nexport default Map;\n",
    "import React, { Component } from 'react';\nimport { Spinner, Popover, Input, ListGroup, ListGroupItem } from 'reactstrap';\nimport { get } from 'axios';\nimport Fuse from 'fuse.js';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { TRUTHTREE_URI } from '../../constants';\n\n// TruthTree API endpoints\nconst ENDPOINTS = {\n  STATES: `${TRUTHTREE_URI}/api/states`,\n  COUNTIES: `${TRUTHTREE_URI}/api/counties`,\n  CITIES: `${TRUTHTREE_URI}/api/cities`\n};\n\nconst createFuseOptions = keys => {\n  return {\n    threshold: 0.6,\n    includeScore: true,\n    location: 0,\n    distance: 100,\n    maxPatternLength: 32,\n    minMatchCharLength: 2,\n    keys: keys\n  };\n};\n\nconst PopoverSection = ({ level, items }) => {\n  return (\n    <ListGroup>\n      <ListGroupItem>\n        <strong className=\"text-uppercase\">{level}</strong>\n      </ListGroupItem>\n      {items.map((item, index) => {\n        item = item.item;\n        let buttonText = item.name;\n        if (level !== 'counties') {\n          buttonText += item.county ? `, ${item.county}` : '';\n        }\n        buttonText += item.stateAbbr ? `, ${item.stateAbbr}` : '';\n        const url = `/explore/${level}/${item.name\n          .toLowerCase()\n          .replace(' ', '-')}/${item.id}`;\n\n        return (\n          <ListGroupItem key={index}>\n            <Link to={url}>{buttonText}</Link>\n          </ListGroupItem>\n        );\n      })}\n    </ListGroup>\n  );\n};\n\nclass LocationSearchBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      popoverOpen: false,\n      statesData: undefined,\n      countiesData: undefined,\n      citiesData: undefined,\n      matchedStates: [],\n      matchedCounties: [],\n      matchedCities: []\n    };\n    this.timer = null;\n  }\n\n  componentDidMount() {\n    const reqs = [\n      get(ENDPOINTS.STATES),\n      get(ENDPOINTS.COUNTIES),\n      get(ENDPOINTS.CITIES)\n    ];\n\n    Promise.all(reqs)\n      .then(([statesRes, countiesRes, citiesRes]) => {\n        this._parseData(statesRes.data, countiesRes.data, citiesRes.data);\n      })\n      .catch(err => console.log(err));\n  }\n\n  _parseData = (statesData, countiesData, citiesData) => {\n    const statesDataById = statesData.reduce((newStatesData, state) => {\n      newStatesData[state.state_code] = state;\n      state.counties = {};\n      return newStatesData;\n    }, {});\n\n    countiesData.forEach(county => {\n      const state = statesDataById[county.state_code];\n      county.state = state.name;\n      county.stateAbbr = state.abbreviation;\n      state.counties[county.county] = county;\n    });\n\n    citiesData.forEach(city => {\n      const state = statesDataById[city.state_code];\n      const county = state.counties[city.county];\n\n      if (state) {\n        city.state = state.name;\n        city.stateAbbr = state.abbreviation;\n      } else {\n        city.state = null;\n        city.stateAbbr = null;\n      }\n      city.county = county ? county.name : null;\n    });\n\n    const statesFuseOptions = createFuseOptions([\n      { name: 'abbreviation', weight: 0.3 },\n      { name: 'name', weight: 0.7 }\n    ]);\n\n    const countiesFuseOptions = createFuseOptions([\n      { name: 'name', weight: 0.6 },\n      { name: 'state', weight: 0.3 },\n      { name: 'stateAbbr', weight: 0.1 }\n    ]);\n\n    const citiesFuseOptions = createFuseOptions([\n      { name: 'name', weight: 0.7 },\n      { name: 'state', weight: 0.2 },\n      { name: 'stateAbbr', weight: 0.05 },\n      { name: 'county', weight: 0.05 }\n    ]);\n\n    this.setState({\n      loading: false,\n      statesData: new Fuse(statesData, statesFuseOptions),\n      countiesData: new Fuse(countiesData, countiesFuseOptions),\n      citiesData: new Fuse(citiesData, citiesFuseOptions)\n    });\n  };\n\n  handleChange = event => {\n    if (this.timer) {\n      clearTimeout(this.timer);\n      this.timer = null;\n    }\n    const searchPhrase = event.target.value;\n    this.timer = setTimeout(() => {\n      const matchedStates = this.state.statesData.search(searchPhrase);\n      const matchedCounties = this.state.countiesData.search(searchPhrase);\n      const matchedCities = this.state.citiesData.search(searchPhrase);\n      const popoverOpen = this.shouldPopoverOpen(\n        matchedStates,\n        matchedCounties,\n        matchedCities\n      );\n      this.setState({\n        matchedStates,\n        matchedCounties,\n        matchedCities,\n        popoverOpen\n      });\n    }, 300);\n  };\n\n  shouldPopoverOpen = (matchedStates, matchedCounties, matchedCities) => {\n    return (\n      matchedStates.length > 0 ||\n      matchedCounties.length > 0 ||\n      matchedCities.length > 0\n    );\n  };\n\n  render() {\n    const {\n      loading,\n      matchedStates,\n      matchedCounties,\n      matchedCities,\n      popoverOpen\n    } = this.state;\n\n    return (\n      <div>\n        {loading ? (\n          <div className=\"d-flex justify-content-center\">\n            <Spinner className=\"align-self-center\" color=\"primary\" />\n          </div>\n        ) : (\n          <div>\n            <Input\n              id=\"location-search-box\"\n              onChange={this.handleChange}\n              placeholder=\"Search for location\"\n            />\n            <Popover\n              placement=\"bottom\"\n              isOpen={popoverOpen}\n              target=\"location-search-box\"\n            >\n              {matchedStates.length > 0 && (\n                <PopoverSection\n                  level=\"states\"\n                  items={matchedStates.slice(0, 3)}\n                />\n              )}\n              {matchedCounties.length > 0 && (\n                <PopoverSection\n                  level=\"counties\"\n                  items={matchedCounties.slice(0, 3)}\n                />\n              )}\n              {matchedCities.length > 0 && (\n                <PopoverSection\n                  level=\"cities\"\n                  items={matchedCities.slice(0, 3)}\n                />\n              )}\n            </Popover>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LocationSearchBox);\n",
    "import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport Map from './Map';\nimport LocationSearchBox from './LocationSearchBox';\n\nconst exploreStyle = {\n  flex: '1 1 auto'\n};\n\nconst searchBoxWrapperStyle = {\n  zIndex: 99\n};\n\nclass Explore extends Component {\n  render() {\n    return (\n      <div className=\"position-relative\" style={exploreStyle}>\n        <Container\n          fluid\n          className=\"position-absolute my-3\"\n          style={searchBoxWrapperStyle}\n        >\n          <Row className=\"justify-content-center\">\n            <Col xs={6}>\n              <LocationSearchBox />\n            </Col>\n          </Row>\n        </Container>\n        <Map />\n      </div>\n    );\n  }\n}\n\nexport default Explore;\n",
    "import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Header from './components/Header';\nimport Trending from './components/Trending';\nimport Explore from './components/Explore';\n\nimport './App.css';\nimport './styles/Tab.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"d-flex flex-column\">\n          <Header className=\"flex-grow-0 flex-shrink-0\" />\n          <Switch>\n            <Route exact path=\"/\" component={Trending} />\n            <Route exact path=\"/explore\" component={Explore} />\n            <Route exact path=\"/explore/:level/:name/:id\" component={Home} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n",
    "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",
    "import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/RootReducer';\nexport default function configureStore() {\n  return createStore(rootReducer, applyMiddleware(thunk));\n}\n"
  ],
  "sourceRoot": ""
}