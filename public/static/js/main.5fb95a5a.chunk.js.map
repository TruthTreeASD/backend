{"version":3,"sources":["truthtree-logo.png","constants.js","reducers/LocationSearchBoxReducer.js","reducers/RootReducer.js","reducers/FilterByReducer.js","reducers/AttributeRangeReducer.js","reducers/SelectedAttributeReducer.js","reducers/YearSelectorReducer.js","reducers/NormalizationReducer.js","components/YearSelector.js","components/Explore/Normalization.js","components/DisplayComponent.js","components/LeftSideBar.js","components/AttributeDeselector.js","components/AttributeRange.js","components/Explore/Tab.js","components/Explore/Tabs.js","components/Explore/TimeSeriesChart.js","components/Explore/TimeSeriesView.js","components/Explore/TimeSeriesGrid.js","components/Home.js","actions/LocationSearchBoxActions.js","components/Explore/LocationSearchBox.js","components/Header.js","components/About/index.js","components/Explore/Map.js","components/Explore/DummySearchBox.js","components/Explore/IntroHeading.js","components/Explore/Intro.js","components/Explore/index.js","App.js","serviceWorker.js","index.js","store.js"],"names":["module","exports","__webpack_require__","p","TRUTHTREE_URI","defaultState","value","loading","combineReducers","FilterByReducer","state","arguments","length","undefined","dimension","action","type","Object","objectSpread","AttributeRangeReducer","attributeName","populationRange","SelectedAttributeReducer","sidebarData","selectedAttributes","Array","from","YearSelectorReducer","yearSelected","LocationSearchBoxReducer","payload","NormalizationReducer","selectedNormalizationDisplayName","selectedNormalizationName","Normalization","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dropdownOpen","normalizationValues","normalizationValuesCall","bind","assertThisInitialized","toggle","setSelectedNormalization","setState","prevState","e","dispatch","target","id","_this2","axios","get","concat","then","response","data","catch","error","console","log","_this3","values","map","i","react_default","a","createElement","DropdownItem","key","name","displayValue","onClick","Dropdown","isOpen","DropdownToggle","caret","DropdownMenu","Component","connect","DisplayComponent","currentPopulation","currentLevel","selectedData","locationIds","year","populationRangeCall","getFormattedName","attributeCall","nextProps","normalizationKeys","currentRows","_","pickBy","keys","attributes","flatMap","elem","row","location_id","attribute_id","per_capita","by_revenue","rowName","toLowerCase","location","replace","capitalize","_this4","minPopulation","maxPopulation","population","confirmAlert","title","message","buttons","label","Math","floor","level","obj","1","_this5","Explore_Normalization","Table","hover","striped","size","className","column","index","toLocaleString","url","href","rel","LeftSideBar","isAttributeSelected","handleClickCollection","collection","defineProperty","handleChangeSearch","event","searchedString","renderSearchTerm","search","attr","isLoaded","collapsedLeft","match","params","attribute","newArr","_loop","remove","v","_ret","push","collapseLeftBar","style","color","data-spy","data-offset-top","onChange","placeholder","display","handleClickAttribute","background","withRouter","dropdownMenuStyle","height","overflow","allYears","YearSelector","yearArray","AttributeDeselector","selectedAttribtes","Row","Col","xs","deselectAttribute","paddingRight","Range","Slider","marks","-50","-40","-30","-20","-10","0","10","20","30","40","50","AttributeRange","onSliderChange","locationPopulation","min","max","locationId","locPop","res","err","createSliders","currentAttribute","dots","step","Tab","_this$props","_this$props2","activeTab","Tabs","onClickTabItem","tab","children","child","Explore_Tab","TimeSeries","condition","padding","Badge","collectionName","LineChart","width","margin","top","right","bottom","left","CartesianGrid","stroke","strokeDasharray","XAxis","dataKey","position","YAxis","angle","Tooltip","Legend","verticalAlign","iconSize","locations","Line","isAnimationActive","TimeSeriesView","locationData","dataReal","lineColors","fetchResponse","formatResponse","initializeYearMap","fetchLocations","toInteger","updateLocation","selectedNormalization","dataForEachLocation","locationName","attributesForEachLocation","attrValue","val","da","userSelectedLocations","includes","select","yearArr","yearEntry","len","Spinner","attrData","TimeSeriesChart","GridTest","handExpandClick","attrId","modal","modalAttrIndex","modalToggle","renderLocationList","selectLocations","defaultLocations","slice","selected","assign","clickedLocation","parseInt","filter","locationlist","sm","checked","htmlFor","getAttributeNames","cards","card","Card","CardBody","Explore_TimeSeriesView","Button","Container","Modal","ModalBody","ModalFooter","homeStyle","paddingTop","Home","fluid","components_LeftSideBar","components_AttributeDeselector","Explore_Tabs","components_DisplayComponent","TimeSeriesGrid","CardHeader","components_AttributeRange","components_YearSelector","updateValue","finishLoading","ENDPOINTS","TYPE_CODE","2","createFuseOptions","threshold","includeScore","distance","maxPatternLength","minMatchCharLength","renderSuggestionsContainer","_ref","containerProps","getSuggestionLabel","suggestion","item","typeCode","county","stateAbbr","renderSuggestion","type_code","Link","to","LocationSearchBox","_parseData","statesData","countiesData","citiesData","statesDataById","reduce","newStatesData","state_code","counties","forEach","fips_code_state","abbreviation","city","statesFuseOptions","weight","countiesFuseOptions","citiesFuseOptions","Fuse","storeInputRef","searchBox","input","handleInputChange","_ref2","newValue","handleSuggestionsFetchRequested","_ref3","searchPhrase","matchedStates","matchedCounties","matchedCities","temp","sort","b","score","suggestions","renderInputComponent","inputProps","Input","innerRef","inputRef","popoverOpen","debouncedhandleSuggestionsFetchRequested","debounce","reqs","Promise","all","_ref4","_ref5","slicedToArray","statesRes","countiesRes","citiesRes","prevProps","focus","dist_default","ref","theme","container","suggestionsList","onSuggestionsClearRequested","onSuggestionsFetchRequested","getSuggestionValue","store","navbarStyle","backgroundColor","navBrandStyle","&:hover","textDecoration","logoStyle","Header","collapseOpen","searchBoxContainerClasses","classNames","justify-content-center","d-none","Navbar","expand","NavbarBrand","src","logo","alt","NavbarToggler","Collapse","navbar","md","lg","Explore_LocationSearchBox","Nav","NavItem","NavLink","tag","aboutStyle","About","Jumbotron","mapContainerStyle","Map","center","lat","lng","zoom","handleApiLoaded","maps","setOptions","styles","mapStyles","fullscreenControlOptions","ControlPosition","BOTTOM_RIGHT","google_map_react_lib_default","bootstrapURLKeys","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","DummySearchBox","blur","Label","cursor","for","introHeadingStyle","IntroHeading","Typist_default","avgTypingDelay","hideWhenDone","introContainerStyle","marginBottom","Intro","introContainerClasses","Explore_IntroHeading","Explore_DummySearchBox","exploreStyle","flex","Explore","Explore_Map","Explore_Intro","App","BrowserRouter","components_Header","Switch","Route","exact","path","component","Boolean","window","hostname","ReactDOM","render","es","createStore","rootReducer","applyMiddleware","thunk","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5fb95a5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/truthtree-logo.75b56fb9.png\";","const TRUTHTREE_URI = 'https://truthtree.herokuapp.com';\nmodule.exports = {\n  TRUTHTREE_URI\n};\n","const defaultState = {\n  value: '',\n  loading: true\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SEARCHBOX_UPDATE_VALUE':\n      return {\n        ...state,\n        value: action.payload\n      };\n\n    case 'SEARCHBOX_FINISH_LOADING':\n      return {\n        ...state,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport AttributeRangeReducer from './AttributeRangeReducer';\nimport FilterByReducer from './FilterByReducer';\nimport SelectedAttributeReducer from './SelectedAttributeReducer';\nimport YearSelectorReducer from './YearSelectorReducer';\nimport LocationSearchBoxReducer from './LocationSearchBoxReducer';\nimport NormalizationReducer from './NormalizationReducer';\n\nexport default combineReducers({\n  FilterByReducer,\n  AttributeRangeReducer,\n  SelectedAttributeReducer,\n  YearSelectorReducer,\n  LocationSearchBoxReducer,\n  NormalizationReducer\n});\n","export default (state = { dimension: 'State' }, action) => {\n  switch (action.type) {\n    case 'CHANGE_DIMENSION':\n      return {\n        ...state,\n        dimension: action.value\n      };\n    default:\n      return state;\n  }\n};\n","export default (\n  state = {\n    attributeName: ['Population'],\n    populationRange: [-25, 25]\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'RANGE_SELECTION':\n      return {\n        ...state,\n        populationRange: action.populationRange\n      };\n    default:\n      return state;\n  }\n};\n","export default (\n  state = {\n    sidebarData: [],\n    selectedAttributes: []\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'CHANGE_ATTRIBUTE':\n      return {\n        ...state,\n        selectedAttributes: Array.from(action.value)\n      };\n    default:\n      return state;\n  }\n};\n","export default (state = { yearSelected: 2016 }, action) => {\n  switch (action.type) {\n    case 'CHANGE_YEAR':\n      state = {\n        ...state,\n        yearSelected: action.yearSelected\n      };\n      break;\n    default:\n      return state;\n  }\n  return state;\n};\n","export default (\n  state = {\n    selectedNormalizationDisplayName: 'Gross',\n    selectedNormalizationName: 'GROSS'\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'CHANGE_NORMALIZATION':\n      state = {\n        ...state,\n        selectedNormalizationName: action.selectedNormalizationName,\n        selectedNormalizationDisplayName:\n          action.selectedNormalizationDisplayName\n      };\n      break;\n    default:\n      return state;\n  }\n  return state;\n};\n","import React, { Component } from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\nimport { connect } from 'react-redux';\n\nconst dropdownMenuStyle = {\n  height: '200px',\n  overflow: 'auto'\n};\n\nlet allYears = [];\nfor (let i = 1966; i < 2016; i++) {\n  allYears.push(i + 1);\n}\n\nclass YearSelector extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      dropdownOpen: false,\n      yearSelected: '2016'\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  onClick(e) {\n    //this.setState({ yearSelected: e.target.id });\n    this.props.dispatch({\n      type: 'CHANGE_YEAR',\n      yearSelected: e.target.id\n    });\n  }\n\n  render() {\n    let yearArray = allYears.map((year, i) => (\n      <DropdownItem key={i} id={year} onClick={this.onClick}>\n        {year}\n      </DropdownItem>\n    ));\n\n    return (\n      <div>\n        <p> Select Year of Data to be displayed: </p>\n        <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n          <DropdownToggle caret>{this.props.yearSelected}</DropdownToggle>\n          <DropdownMenu style={dropdownMenuStyle}>{yearArray}</DropdownMenu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    yearSelected: state.YearSelectorReducer.yearSelected\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(YearSelector);\n","import React, { Component } from 'react';\n\nimport '../../styles/Header.css';\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle\n} from 'reactstrap';\nimport axios from 'axios/index';\nimport { connect } from 'react-redux';\n\nimport { TRUTHTREE_URI } from '../../constants';\n\nclass Normalization extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownOpen: false,\n      selectedNormalizationDisplayName: 'Gross',\n      selectedNormalizationName: 'GROSS',\n      normalizationValues: []\n    };\n    this.normalizationValuesCall = this.normalizationValuesCall.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.setSelectedNormalization = this.setSelectedNormalization.bind(this);\n  }\n\n  componentDidMount() {\n    this.normalizationValuesCall();\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  setSelectedNormalization(e) {\n    //console.log(e.target.id);\n    //this.setState({selectedNormalizationDisplayName: e.target.value});\n    //this.setState({selectedNormalizationName: e.target.id});\n    this.props.dispatch({\n      type: 'CHANGE_NORMALIZATION',\n      selectedNormalizationName: e.target.id,\n      selectedNormalizationDisplayName: e.target.value\n    });\n  }\n\n  normalizationValuesCall() {\n    axios\n      .get(`${TRUTHTREE_URI}/api/normalization_types`)\n      .then(response => {\n        this.setState({ normalizationValues: response.data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    let values = this.state.normalizationValues.map((value, i) => (\n      <DropdownItem\n        key={i}\n        id={value.name}\n        value={value.displayValue}\n        onClick={this.setSelectedNormalization}\n      >\n        {value.displayValue}\n      </DropdownItem>\n    ));\n\n    return (\n      <div id=\"normalisation\">\n        Normalization attribute:\n        <Dropdown\n          id=\"dropdown\"\n          isOpen={this.state.dropdownOpen}\n          toggle={this.toggle}\n        >\n          <DropdownToggle caret>\n            {' '}\n            {this.props.selectedNormalizationDisplayName}{' '}\n          </DropdownToggle>\n          <DropdownMenu>{values}</DropdownMenu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    selectedNormalizationName:\n      state.NormalizationReducer.selectedNormalizationName,\n    selectedNormalizationDisplayName:\n      state.NormalizationReducer.selectedNormalizationDisplayName\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Normalization);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios/index';\nimport _ from 'lodash';\nimport '../styles/DisplayComponent.css';\nimport { TRUTHTREE_URI } from '../constants';\nimport { Table } from 'reactstrap';\n\nimport Normalization from './Explore/Normalization';\nimport { confirmAlert } from 'react-confirm-alert';\n\nclass DisplayComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPopulation: 0,\n      currentLevel: null,\n      data: {},\n      selectedData: {},\n      locationIds: [],\n      selectedAttributes: [],\n      year: 2016,\n      selectedNormalizationName: 'GROSS',\n      populationRange: [-25, 25]\n    };\n    this.populationRangeCall = this.populationRangeCall.bind(this);\n    this.getFormattedName = this.getFormattedName.bind(this);\n    this.attributeCall = this.attributeCall.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      selectedAttributes: nextProps.selectedAttributes,\n      year: nextProps.year,\n      selectedNormalizationName: nextProps.selectedNormalizationName,\n      populationRange: nextProps.populationRange,\n      normalizationKeys: nextProps.normalizationKeys\n    });\n    if (this.state.populationRange !== nextProps.populationRange) {\n      let currentRows = _.pickBy(this.state.data, e => {\n        return (\n          e['1'] <=\n            this.state.currentPopulation +\n              (nextProps.populationRange[1] / 100) *\n                this.state.currentPopulation &&\n          e['1'] >=\n            this.state.currentPopulation +\n              (nextProps.populationRange[0] / 100) *\n                this.state.currentPopulation\n        );\n      });\n      this.setState({ selectedData: currentRows });\n      this.setState({ locationIds: _.keys(currentRows) });\n    }\n    let attributes = _.flatMap(nextProps.selectedAttributes, elem => {\n      return elem[0];\n    });\n    if (attributes.length > 0) {\n      this.attributeCall(attributes, nextProps);\n    }\n  }\n\n  attributeCall(attributes, nextProps) {\n    let year = nextProps.year ? nextProps.year : 2016;\n    axios\n      .get(\n        '/api/attributes?locationIds=' +\n          this.state.locationIds +\n          '&attributeIds=' +\n          attributes +\n          '&normalizationType=' +\n          nextProps.selectedNormalizationName +\n          '&yearList=' +\n          year\n      )\n      .then(response => {\n        let data = this.state.selectedData;\n        _.map(response.data, row => {\n          _.map(row.attributes, elem => {\n            data[row.location_id][elem.attribute_id] =\n              nextProps.selectedNormalizationName === 'PER_CAPITA'\n                ? elem.data[0].per_capita\n                : nextProps.selectedNormalizationName === 'BY_REVENUE'\n                ? elem.data[0].by_revenue\n                : elem.data[0].value;\n          });\n        });\n        this.setState({ selectedData: data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: {},\n      selectedAttributes: this.props.selectedAttributes,\n      year: this.props.yearSelected,\n      selectedNormalizationName: this.props.selectedNormalizationName,\n      populationRange: this.props.populationRange\n    });\n    this.populationRangeCall();\n  }\n\n  getFormattedName(rowName) {\n    if (rowName.toLowerCase() === this.props.location.replace(/-/g, ' ')) {\n      return <b>{_.capitalize(rowName)}</b>;\n    } else {\n      return _.capitalize(rowName);\n    }\n  }\n\n  populationRangeCall() {\n    let minPopulation = 0;\n    let maxPopulation = 0;\n    let data = {};\n    let population = 0;\n    let year = this.state.year ? this.state.year : 2016;\n    // Calculate min and max population\n    axios\n      .get(\n        `${TRUTHTREE_URI}/api/population?locationId=` +\n          this.props.id +\n          '&year=' +\n          year\n      )\n      .then(response => {\n        population = response.data.population;\n        if (!population) {\n          confirmAlert({\n            title: 'Oops!',\n            message:\n              'The location you have selected does not seem to have data. Please go back and chose another location.',\n            buttons: [\n              {\n                label: 'OK'\n              }\n            ]\n          });\n        }\n        this.setState({ currentPopulation: population });\n        maxPopulation = Math.floor(population + 0.5 * population);\n        minPopulation = Math.floor(population - 0.5 * population);\n        return axios\n          .get(\n            `${TRUTHTREE_URI}/api/${this.props.level}?populationRange=` +\n              minPopulation +\n              ',' +\n              maxPopulation\n          )\n          .then(response => {\n            _.map(response.data, obj => {\n              data[obj.id] = { name: obj.name, '1': obj.population };\n            });\n            this.setState({ data: data });\n            let currentRows = _.pickBy(this.state.data, e => {\n              return (\n                e['1'] <=\n                  population +\n                    (this.state.populationRange[1] / 100) * population &&\n                e['1'] >=\n                  population +\n                    (this.state.populationRange[0] / 100) * population\n              );\n            });\n            this.setState({ selectedData: currentRows });\n            this.setState({\n              locationIds: _.keys(currentRows)\n            });\n            if (this.props.selectedAttributes) {\n              let attributes = _.flatMap(\n                this.props.selectedAttributes,\n                elem => {\n                  return elem[0];\n                }\n              );\n              this.attributeCall(attributes, this.state);\n            }\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n      <div id=\"mainDisplay\">\n        <Normalization />\n        <Table hover striped size=\"sm\">\n          <thead className=\"table-header\">\n            <tr>\n              <th>Name</th>\n              <th>Population</th>\n              {this.state.selectedAttributes.map((column, index) => {\n                return <th key={index}>{column[1]}</th>;\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {_.values(this.state.selectedData).map((row, index) => {\n              return (\n                <tr key={index}>\n                  <td>{this.getFormattedName(row['name'])}</td>\n                  <td>{row['1'].toLocaleString()}</td>\n                  {this.state.selectedAttributes.map((column, i) => {\n                    let url =\n                      'https://www.google.com/search?q=' +\n                      row['name'] +\n                      '+' +\n                      this.state.selectedAttributes[i][2] +\n                      ' ' +\n                      this.state.selectedAttributes[i][1];\n                    return (\n                      <td key={i}>\n                        <a\n                          className=\"link-value\"\n                          href={url}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          {row[column[0]]\n                            ? row[column[0]].toLocaleString()\n                            : '-'}\n                        </a>\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => ({\n  year: state.YearSelectorReducer.yearSelected,\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes,\n  populationRange: state.AttributeRangeReducer.populationRange,\n  selectedNormalizationName:\n    state.NormalizationReducer.selectedNormalizationName\n});\n\nexport default connect(mapState)(DisplayComponent);\n","import React, { Component } from 'react';\nimport '../styles/LeftSideBar.css';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { confirmAlert } from 'react-confirm-alert';\n\nimport { TRUTHTREE_URI } from '../constants';\nimport { withRouter } from 'react-router-dom';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nclass LeftSideBar extends Component {\n  constructor(props) {\n    super(props);\n    //   /api/collections?level=state\n    this.state = {\n      sidebarData: [],\n      isLoaded: false,\n      selectedAttributes: [],\n      collapsedLeft: false,\n      searchedString: ''\n    };\n    // Set initial state of each collection to false\n    Object.keys(this.state.sidebarData).map(key => (this.state[key] = false));\n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        `${TRUTHTREE_URI}/api/collections?locationId=` + //382026003\n          this.props.match.params.id // +&year=2016\n      )\n      .then(response => {\n        //data contains the variables\n        this.setState({\n          sidebarData: response.data,\n          isLoaded: true\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // if (this.state.selectedAttributes != nextProps.selectedAttributes) {\n    // this.setState({ selectedAttributes: nextProps.selectedAttributes });\n    //  }\n    //console.log('got prop');\n  }\n\n  isAttributeSelected = attribute_id => {\n    for (let i = 0; i < this.props.selectedAttributes.length; i++) {\n      if (this.props.selectedAttributes[i][0] === attribute_id) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // Toggle state of each collection on click\n  handleClickCollection = collection => {\n    this.setState({ [collection]: !this.state[collection] });\n  };\n\n  // stores attribute selected\n  handleClickAttribute(collection, attribute) {\n    let newArr = this.props.selectedAttributes;\n    let id = attribute.attribute_id;\n    for (let i = 0; i < newArr.length; i++) {\n      if (newArr[i][0] === id) {\n        _.remove(newArr, elem => {\n          return elem === newArr[i];\n        });\n        this.setState({\n          selectedAttributes: newArr\n        });\n\n        this.props.dispatch({\n          type: 'CHANGE_ATTRIBUTE',\n          value: newArr\n        });\n        return;\n      }\n    }\n\n    // To limit number of selected attributes to 10\n    if (newArr.length < 10) {\n      newArr.push([id, attribute.name, collection]);\n      this.setState({\n        selectedAttributes: newArr\n      });\n      this.props.dispatch({\n        type: 'CHANGE_ATTRIBUTE',\n        value: newArr\n      });\n    } else {\n      confirmAlert({\n        title: 'Error!',\n        message:\n          'Number of selected attributes exceeded limit of 10, please remove attributes to add more.',\n        buttons: [\n          {\n            label: 'OK'\n          }\n        ]\n      });\n    }\n  }\n\n  collapseLeftBar() {\n    this.setState({ collapsedLeft: !this.state.collapsedLeft });\n    this.setState({ searchedString: '' });\n  }\n\n  //updates search bar with text\n  handleChangeSearch = event => {\n    this.setState({ searchedString: event.target.value.toLowerCase() });\n    if (this.state.searchedString === '') {\n    }\n  };\n\n  renderSearchTerm = collection => {\n    if (\n      this.state.searchedString === '' ||\n      this.state.sidebarData[collection].name\n        .toLowerCase()\n        .search(this.state.searchedString) > -1\n    ) {\n      return true;\n    }\n    var attr;\n    for (attr in this.state.sidebarData[collection].attributes) {\n      if (\n        this.state.sidebarData[collection].attributes[attr].name\n          .toLowerCase()\n          .search(this.state.searchedString) > -1\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  render() {\n    var { isLoaded } = this.state;\n    if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      if (this.state.collapsedLeft) {\n        return (\n          <button className=\"btn\" onClick={() => this.collapseLeftBar()}>\n            <i\n              style={{ color: 'black' }}\n              className={\n                'col-md-flex d-md-flex ' + !this.state.collapsedLeft\n                  ? 'fa fa-chevron-right'\n                  : 'fa fa-chevron-left'\n              }\n            />\n          </button>\n        );\n      } else {\n        return (\n          <nav className=\"scrollLeftBar col-md-2 d-none d-md-block bg-dark sidebar\">\n            <div className=\"row\">\n              <div className=\"col-10\">\n                <input\n                  className=\"form-control leftSearch\"\n                  data-spy=\"affix\"\n                  data-offset-top=\"197\" //trying to make search box stay top\n                  id=\"attribute-search-box\"\n                  onChange={this.handleChangeSearch}\n                  placeholder=\"Property Lookup\"\n                />\n              </div>\n              <button className={'btn'} onClick={() => this.collapseLeftBar()}>\n                <i\n                  className={\n                    'chevron-icon-padding ' + !this.state.collapsedLeft\n                      ? 'fa fa-chevron-left'\n                      : 'fa fa-chevron-right'\n                  }\n                />\n              </button>\n            </div>\n            <div\n              style={{ display: !this.state.collapsedLeft ? 'block' : 'none' }}\n            >\n              {Object.keys(this.state.sidebarData).map((collection, i) => {\n                if (this.renderSearchTerm(collection)) {\n                  return (\n                    <div key={i}>\n                      <button\n                        className=\"accordion\"\n                        onClick={() => this.handleClickCollection(collection)}\n                      >\n                        {this.state.sidebarData[collection].name}\n                      </button>\n                      <div\n                        style={{\n                          display: this.state[collection] ? 'block' : 'none'\n                        }}\n                      >\n                        {Object.keys(\n                          this.state.sidebarData[collection].attributes\n                        ).map((attr, i) => {\n                          return (\n                            <label\n                              onClick={() =>\n                                this.handleClickAttribute(\n                                  this.state.sidebarData[collection].name,\n                                  this.state.sidebarData[collection].attributes[\n                                    attr\n                                  ]\n                                )\n                              }\n                              key={i}\n                              className=\"panel float-right attributes\"\n                              style={{\n                                background: this.isAttributeSelected(\n                                  this.state.sidebarData[collection].attributes[\n                                    attr\n                                  ].attribute_id\n                                )\n                                  ? '#bfd9d5'\n                                  : 'white'\n                              }}\n                            >\n                              <div>\n                                {\n                                  this.state.sidebarData[collection].attributes[\n                                    attr\n                                  ].name\n                                }\n                              </div>\n                            </label>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  );\n                }\n              })}\n            </div>\n          </nav>\n        );\n      }\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes\n});\n\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(LeftSideBar));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Col, Row } from 'reactstrap';\n\nimport '../styles/AttributeDeselector.css';\n\nclass AttributeDeselector extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedAttributes: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ selectedAttribtes: this.props.selectedAttributes });\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({ selectedAttributes: nextProps.selectedAttributes });\n  }\n\n  deselectAttribute(attribute) {\n    let newArr = this.state.selectedAttributes;\n    let id = attribute[0];\n    for (let i = 0; i < newArr.length; i++) {\n      if (newArr[i][0] === id) {\n        _.remove(newArr, elem => {\n          return elem === newArr[i];\n        });\n        this.setState({\n          selectedAttributes: newArr\n        });\n        this.props.dispatch({\n          type: 'CHANGE_ATTRIBUTE',\n          value: newArr\n        });\n        return;\n      }\n    }\n  }\n\n  render() {\n    if (this.state.selectedAttributes.length < 1) {\n      return (\n        <Row>\n          <Col xs=\"auto\" className=\"filters\">\n            Selected Attributes: None\n          </Col>\n        </Row>\n      );\n    } else {\n      return (\n        <Row>\n          <Col xs=\"auto\" className=\"filters\">\n            Selected Attributes:\n          </Col>\n          <Col>\n            {Object.keys(this.state.selectedAttributes).map((attributes, i) => {\n              return (\n                <button\n                  className=\"btn btn-light selected-attribute-button\"\n                  onClick={() =>\n                    this.deselectAttribute(this.state.selectedAttributes[i])\n                  }\n                >\n                  <i className=\"fa fa-times\" style={{ paddingRight: '10px' }} />\n                  {this.state.selectedAttributes[i][2]}-\n                  {this.state.selectedAttributes[i][1]}\n                </button>\n              );\n            })}\n          </Col>\n        </Row>\n      );\n    }\n  }\n}\n\nconst mapState = state => ({\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes\n});\n\nexport default connect(mapState)(AttributeDeselector);\n","import React, { Component } from 'react';\nimport Slider from 'rc-slider';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport '../styles/AttributeRange.css';\nimport { TRUTHTREE_URI } from '../constants';\n\nconst Range = Slider.Range;\n\nconst marks = {\n  '-50': '-50%',\n  '-40': '-40%',\n  '-30': '-30%',\n  '-20': '-20%',\n  '-10': '-10%',\n  '0': '0%',\n  '10': '10%',\n  '20': '+20%',\n  '30': '+30%',\n  '40': '+40%',\n  '50': '+50%'\n};\n\nclass AttributeRange extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locationPopulation: null,\n      value: [-5, 5],\n      min: -50,\n      max: 50\n    };\n  }\n\n  componentDidMount() {\n    let year = this.props.yearSelected ? this.props.yearSelected : 2016;\n    let url =\n      `${TRUTHTREE_URI}/api/population?locationId=` +\n      this.props.locationId +\n      '&year=' +\n      year;\n    let locPop = null;\n\n    axios\n      .get(url)\n      .then(res => {\n        locPop = res.data.population;\n        this.setState({ locationPopulation: locPop });\n      })\n      .catch(err => console.log(err));\n  }\n\n  onSliderChange = value => {\n    console.log();\n    this.props.dispatch({\n      type: 'RANGE_SELECTION',\n      populationRange: value\n    });\n  };\n\n  render() {\n    const createSliders = this.props.attribute.attributeName.map(\n      (currentAttribute, i) => (\n        <div className=\"outer\" key={i}>\n          <p>\n            {currentAttribute} of {this.props.location} {':  '}{' '}\n            <b>{this.state.locationPopulation}</b>\n          </p>\n          <p className=\"no-margin\">\n            Select range of {currentAttribute} for filtering other{' '}\n            {this.props.level}:{' '}\n            <b>\n              {this.props.attribute.populationRange[0]}% to{' '}\n              {this.props.attribute.populationRange[1]}%\n            </b>\n          </p>\n          <p className=\"Note\">\n            (*range selection available from -50% to +50% wrt to{' '}\n            {this.props.location} {currentAttribute})\n          </p>\n\n          <Range\n            dots\n            step={5}\n            value={this.props.attribute.populationRange}\n            min={this.state.min}\n            max={this.state.max}\n            marks={marks}\n            onChange={this.onSliderChange}\n          />\n        </div>\n      )\n    );\n\n    return (\n      <div>\n        <div>\n          <div> {createSliders} </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    year: state.YearSelectorReducer.yearSelected,\n    attribute: state.AttributeRangeReducer\n  };\n};\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AttributeRange);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tab extends Component {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  };\n\n  render() {\n    const {\n      onClick,\n      props: { activeTab, label }\n    } = this;\n\n    let className = 'tab-list-item';\n\n    if (activeTab === label) {\n      className += ' tab-list-active';\n    }\n\n    return (\n      <li className={className} onClick={onClick}>\n        {label}\n      </li>\n    );\n  }\n}\n\nexport default Tab;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Tab from './Tab';\nimport '../../styles/Tab.css';\n\nclass Tabs extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Array).isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: this.props.children[0].props.label\n    };\n  }\n\n  onClickTabItem = tab => {\n    this.setState({ activeTab: tab });\n  };\n\n  render() {\n    const {\n      onClickTabItem,\n      props: { children },\n      state: { activeTab }\n    } = this;\n\n    return (\n      <div className=\"tabs\">\n        <ol className=\"tab-list\">\n          {children.map(child => {\n            const { label } = child.props;\n\n            return (\n              <Tab\n                activeTab={activeTab}\n                key={label}\n                label={label}\n                onClick={onClickTabItem}\n              />\n            );\n          })}\n        </ol>\n        <div className=\"tab-content\">\n          {children.map(child => {\n            if (child.props.label !== activeTab) return undefined;\n            return child.props.children;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\n","import React, { Component } from 'react';\nimport { Badge } from 'reactstrap';\n\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend\n} from 'recharts';\nimport '../../styles/TimeSeries.css';\n\nclass TimeSeries extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const attributeName = this.props.attributeName;\n    if (this.props.condition === 'large') {\n      return (\n        <div className=\"chartDiv\">\n          <div style={{ padding: '10px' }}>\n            <Badge color=\"info\" className=\"popupHeader\">\n              {this.props.collectionName} - {this.props.attributeName}\n            </Badge>\n          </div>\n\n          <LineChart\n            width={1050}\n            height={450}\n            data={this.props.data}\n            margin={{ top: 5, right: 5, bottom: 5, left: 5 }}\n          >\n            <CartesianGrid\n              className=\"chartDiv\"\n              stroke=\"#ccc\"\n              strokeDasharray=\"5 5\"\n              padding={{ left: 20, right: 20 }}\n            />\n            <XAxis\n              dataKey=\"year\"\n              label={{\n                value: 'Year',\n                position: 'insideBottom'\n              }}\n            />\n            <YAxis\n              label={{\n                value: attributeName,\n                angle: -90,\n                position: 'insideLeft'\n              }}\n            />\n            <Tooltip />\n            <Legend verticalAlign=\"bottom\" iconSize={10} />\n            {this.props.locations.map((location, i) => (\n              <Line\n                key={location.name}\n                type=\"monotone\"\n                dataKey={location.name}\n                stroke={location.color}\n                isAnimationActive={false}\n              />\n            ))}\n          </LineChart>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"chartDiv\">\n          <div style={{ padding: '10px' }}>\n            <Badge color=\"info\"> {this.props.collectionName} - {this.props.attributeName} </Badge>\n          </div>\n          <LineChart\n            width={495}\n            height={200}\n            data={this.props.data}\n            margin={{ top: 5, right: 5, bottom: 5, left: 5 }}\n          >\n            <CartesianGrid\n              className=\"chartDiv\"\n              stroke=\"#ccc\"\n              strokeDasharray=\"5 5\"\n              padding={{ left: 20, right: 20 }}\n            />\n            <XAxis\n              dataKey=\"year\"\n              label={{\n                value: 'Year',\n                position: 'insideBottom'\n              }}\n            />\n            <YAxis\n              label={{\n                value: attributeName,\n                angle: -90,\n                position: 'insideLeft'\n              }}\n            />\n            <Tooltip />\n            {this.props.locations.map((location, i) => (\n              <Line\n                key={location.name}\n                type=\"monotone\"\n                dataKey={location.name}\n                stroke={location.color}\n                isAnimationActive={false}\n              />\n            ))}\n          </LineChart>\n        </div>\n      );\n    }\n  }\n}\n\nexport default TimeSeries;\n","import React, { Component } from 'react';\nimport { Spinner } from 'reactstrap';\nimport axios from 'axios/index';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport TimeSeriesChart from './TimeSeriesChart';\nimport { TRUTHTREE_URI } from '../../constants';\n\nclass TimeSeriesView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      locations: [],\n      data: [],\n      locationData: [],\n      currentLevel: null,\n      dataReal: [],\n      locationIds: [],\n      lineColors: [\n        'red',\n        'purple',\n        'green',\n        'blue',\n        'deeppink',\n        'orange',\n        'navy',\n        'slategray',\n        'lime',\n        'indianred',\n        'dimgrey'\n      ],\n      populationRange: [-25, 25]\n    };\n    this.fetchResponse = this.fetchResponse.bind(this);\n    this.formatResponse = this.formatResponse.bind(this);\n    this.initializeYearMap = this.initializeYearMap.bind(this);\n    this.fetchLocations = this.fetchLocations.bind(this);\n  }\n\n  componentDidMount() {\n    const len = this.props.selectedAttributes.length;\n    if (len !== 0) {\n      this.fetchLocations();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      selectedAttributes: nextProps.selectedAttributes\n    });\n    const len = this.props.selectedAttributes.length;\n    if (len !== 0) {\n      this.fetchLocations();\n    }\n  }\n\n  fetchLocations() {\n    let minPopulation = 0;\n    let maxPopulation = 0;\n    let year = this.props.yearSelected ? this.props.yearSelected : 2016;\n    let locationIds = [];\n    let data = {};\n    let population = 0;\n    // Calculate min and max population\n    axios\n      .get(\n        `${TRUTHTREE_URI}/api/population?locationId=` +\n          this.props.id +\n          '&year=' +\n          year\n      )\n      .then(response => {\n        population = response.data.population;\n        this.setState({ currentPopulation: population });\n        maxPopulation = Math.floor(population + 0.5 * population);\n        minPopulation = Math.floor(population - 0.5 * population);\n        return axios\n          .get(\n            `${TRUTHTREE_URI}/api/${this.props.level}?populationRange=` +\n              minPopulation +\n              ',' +\n              maxPopulation\n          )\n          .then(response => {\n            _.map(response.data, obj => {\n              data[obj.id] = { name: obj.name, '1': obj.population };\n            });\n            this.setState({ locationData: data });\n            let currentRows = _.pickBy(data, e => {\n              return (\n                e['1'] <=\n                  population +\n                    (this.props.populationRange[1] / 100) * population &&\n                e['1'] >=\n                  population +\n                    (this.props.populationRange[0] / 100) * population\n              );\n            });\n            this.setState({\n              locationIds: _.map(_.keys(currentRows), _.toInteger)\n            });\n            this.setState({ locationData: data });\n            this.props.updateLocation(data, this.state.locationIds);\n            this.fetchResponse();\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  fetchResponse() {\n    let url =\n      `${TRUTHTREE_URI}/api/attributes?locationIds=` +\n      this.state.locationIds +\n      '&attributeIds=' +\n      this.props.selectedAttributes[this.props.index][0] +\n      '&normalizationType=' +\n      this.props.selectedNormalization;\n    axios\n      .get(url)\n      .then(response => {\n        console.log(response);\n        this.formatResponse(response);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  formatResponse(response) {\n    let data = [];\n    let locations = [];\n    let map = {};\n\n    response.data.map(dataForEachLocation => {\n      let location = {};\n      let lData = this.state.locationData[dataForEachLocation.location_id];\n      let locationName = lData['name'];\n      dataForEachLocation.attributes.map(attributesForEachLocation => {\n        attributesForEachLocation.data.map(attrValue => {\n          let val = map[attributesForEachLocation.attribute_id];\n          if (val === undefined) {\n            val = this.initializeYearMap();\n          }\n          let da = val[attrValue.year - 1967];\n          if (\n            da[dataForEachLocation.location_id] === 0 ||\n            da[dataForEachLocation.location_id] === undefined\n          ) {\n            if (this.props.selectedNormalization === 'GROSS') {\n              val[attrValue.year - 1967][locationName] = attrValue.value;\n            } else if (this.props.selectedNormalization === 'PER_CAPITA') {\n              val[attrValue.year - 1967][locationName] = attrValue.per_capita;\n            } else if (this.props.selectedNormalization === 'BY_REVENUE') {\n              val[attrValue.year - 1967][locationName] = attrValue.by_revenue;\n            }\n          }\n          map[attributesForEachLocation.attribute_id] = val;\n          return null;\n        });\n        if (\n          this.props.userSelectedLocations.includes(\n            dataForEachLocation.location_id\n          )\n        ) {\n          location['id'] = dataForEachLocation.location_id;\n          // let select = this.state.lineColors[Math.floor(Math.random() * 11)];\n          let select = this.state.lineColors[locations.length - 1];\n          location['color'] = select;\n          location['name'] = locationName;\n          locations.push(location);\n        }\n        return null;\n      });\n      return null;\n    });\n    data.push(map);\n    this.setState({ data: data, locations: locations, loading: false });\n  }\n\n  initializeYearMap() {\n    let yearArr = [];\n    for (let i = 1967; i < 2017; i++) {\n      let yearEntry = { year: i };\n      yearArr.push(yearEntry);\n    }\n    return yearArr;\n  }\n\n  render() {\n    const len = this.props.selectedAttributes.length;\n\n    const { loading } = this.state;\n\n    if (len === 0) {\n      return <div>Select an attribute</div>;\n    } else {\n      if (loading) {\n        return (\n          <div className=\"d-flex justify-content-center\">\n            <Spinner\n              className=\"align-self-center\"\n              color=\"secondary\"\n              size=\"sm\"\n            />\n          </div>\n        );\n      } else {\n        return this.state.data.map((attrData, i) => {\n          return (\n            <TimeSeriesChart\n              data={\n                attrData[this.props.selectedAttributes[this.props.index][i]]\n              }\n              attributeName={this.props.selectedAttributes[this.props.index][1]}\n              collectionName={\n                this.props.selectedAttributes[this.props.index][2]\n              }\n              locations={this.state.locations}\n              condition={this.props.condition}\n            />\n          );\n        });\n      }\n    }\n  }\n}\n\nconst mapState = state => ({\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes,\n  year: state.YearSelectorReducer.yearSelected,\n  populationRange: state.AttributeRangeReducer.populationRange,\n  selectedNormalization: state.NormalizationReducer.selectedNormalizationName\n});\nexport default connect(mapState)(TimeSeriesView);\n","import React, { Component } from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardHeader,\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  Badge\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { confirmAlert } from 'react-confirm-alert';\n\nimport TimeSeriesView from './TimeSeriesView';\nimport Normalization from './Normalization';\n\nimport '../../styles/TimeSeries.css';\n\nclass GridTest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      locations: {},\n      locationIds: [],\n      userSelectedLocations: []\n    };\n\n    this.modalToggle = this.modalToggle.bind(this);\n    this.updateLocation = this.updateLocation.bind(this);\n    this.renderLocationList = this.renderLocationList.bind(this);\n    this.selectLocations = this.selectLocations.bind(this);\n  }\n\n  modalToggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  getAttributeNames(type) {\n    return _.flatMap(this.props.selectedAttributes, elem => {\n      return type === 'name' ? elem[1] : elem[0];\n    });\n  }\n\n  updateLocation(locations, locationIds) {\n    let defaultLocations = this.state.userSelectedLocations;\n    if (defaultLocations.length === 0) {\n      if (locationIds.length > 10) {\n        defaultLocations = locationIds.slice(0, 10);\n      } else {\n        defaultLocations = locationIds;\n      }\n    }\n    this.setState({\n      locations,\n      locationIds,\n      userSelectedLocations: defaultLocations\n    });\n  }\n\n  selectLocations(event) {\n    let selected = Object.assign([], this.state.userSelectedLocations);\n    let clickedLocation = parseInt(event.target.value);\n    if (selected.includes(clickedLocation)) {\n      selected = selected.filter(val => {\n        return val !== clickedLocation;\n      });\n      this.setState({ userSelectedLocations: selected });\n    } else if (selected.length < 10) {\n      selected.push(clickedLocation);\n      this.setState({ userSelectedLocations: selected });\n    } else {\n      confirmAlert({\n        title: 'Error!',\n        message:\n          'Number of selected locations exceeded limit of 10, please remove existing location to add more.',\n        buttons: [\n          {\n            label: 'OK'\n          }\n        ]\n      });\n    }\n  }\n\n  renderLocationList() {\n    let locationlist = this.state.locationIds.map(location => {\n      return (\n        <Col\n          sm=\"3\"\n          className=\"form-check checkbox checkbox-circle checkbox-yellow\"\n        >\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            value={location}\n            id=\"checkbox-input\"\n            checked={this.state.userSelectedLocations.includes(location)}\n            onClick={this.selectLocations}\n          />\n          <label className=\"form-check-label\" htmlFor=\"checkbox-input\">\n            {this.state.locations[location].name}\n          </label>\n        </Col>\n      );\n    });\n    return <Row className=\"location-list-padding\">{locationlist}</Row>;\n  }\n\n  handExpandClick = attrId =>\n    this.setState({\n      modal: true,\n      modalAttrIndex: attrId\n    });\n\n  render() {\n    let attributes = this.getAttributeNames('name');\n    let len = attributes.length;\n\n    let cards = attributes.map((card, index) => {\n      return (\n        <Card key={index}>\n          <CardBody className=\"time-series-card\">\n            <TimeSeriesView\n              index={index}\n              condition=\"tiny\"\n              id={this.props.id}\n              level={this.props.level}\n              updateLocation={this.updateLocation}\n              userSelectedLocations={this.state.userSelectedLocations}\n            />\n            <Button\n              className=\"button\"\n              color=\"secondary\"\n              onClick={() => this.handExpandClick(index)}\n            >\n              <Badge>Expand</Badge>\n            </Button>\n          </CardBody>\n        </Card>\n      );\n    });\n\n    if (len === 0) {\n      return (\n        <Container className=\"alert\">\n          {' '}\n          Please select minimum of one attribute{' '}\n        </Container>\n      );\n    } else {\n      return (\n        <Container className=\"GridContainer\">\n          <Row>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Normalization />\n                </Row>\n                <hr />\n                <Row className=\"SelectedLocations\">\n                  <i>\n                    Select locations from the selected range to be plotted in\n                    the graph:{' '}\n                  </i>\n                  {this.renderLocationList()}\n                </Row>\n              </CardBody>\n            </Card>\n          </Row>\n          <Row>\n            {' '}\n            <div className=\"Space\" />\n          </Row>\n          <Row>\n            {cards}\n            <Modal\n              isOpen={this.state.modal}\n              toggle={this.modalToggle}\n              className=\"GridModal\"\n            >\n              <ModalBody>\n                <TimeSeriesView\n                  index={this.state.modalAttrIndex}\n                  condition=\"large\"\n                  id={this.props.id}\n                  updateLocation={this.updateLocation}\n                  userSelectedLocations={this.state.userSelectedLocations}\n                  level={this.props.level}\n                />\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"secondary\" onClick={this.modalToggle}>\n                  Cancel\n                </Button>\n              </ModalFooter>\n            </Modal>\n          </Row>\n        </Container>\n      );\n    }\n  }\n}\n\nconst mapState = state => ({\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes\n});\nexport default connect(mapState)(GridTest);\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport '../styles/Home.css';\nimport { Card, CardBody, CardHeader } from 'reactstrap';\n\nimport DisplayComponent from './DisplayComponent';\nimport LeftSideBar from './LeftSideBar';\nimport YearSelector from './YearSelector';\nimport AttributeDeselector from './AttributeDeselector';\nimport Filters from './AttributeRange';\nimport Tabs from './Explore/Tabs';\nimport TimeSeriesGrid from './Explore/TimeSeriesGrid';\n\nconst homeStyle = {\n  paddingTop: 75\n};\n\nclass Home extends Component {\n  render() {\n    return (\n      <Container fluid style={homeStyle} className=\"home\">\n        <Row>\n          <LeftSideBar />\n\n          <div className=\"col-12 col-md-10 align-items-center padding\">\n            <Card className=\"selected-attributes padding\">\n              <AttributeDeselector />\n            </Card>\n\n            <Card className=\"right-panel\">\n              <Tabs>\n                <div label=\"Table View\">\n                  <DisplayComponent\n                    level={this.props.match.params.level}\n                    id={this.props.match.params.id}\n                    location={this.props.match.params.name}\n                  />\n                </div>\n\n                <div label=\"Time Series View\">\n                  <TimeSeriesGrid\n                    id={this.props.match.params.id}\n                    level={this.props.match.params.level}\n                  />\n                </div>\n              </Tabs>\n            </Card>\n\n            <Card className=\"bottom-panel\">\n              <CardHeader className=\"bottom-panel-header\">\n                <div>\n                  Selected Location: <b>{this.props.match.params.name}</b>\n                </div>\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col className=\"border-right\">\n                    <Filters\n                      level={this.props.match.params.level}\n                      location={this.props.match.params.name}\n                      locationId={this.props.match.params.id}\n                    />\n                  </Col>\n                  <Col sm=\"2\" xs=\"2\">\n                    <YearSelector />\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </div>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Home;\n","export const updateValue = value => {\n  return {\n    type: 'SEARCHBOX_UPDATE_VALUE',\n    payload: value\n  };\n};\n\nexport const finishLoading = () => {\n  return {\n    type: 'SEARCHBOX_FINISH_LOADING'\n  };\n};\n","import React, { Component } from 'react';\nimport { Container, Row, Col, Spinner, Input } from 'reactstrap';\nimport { get } from 'axios';\nimport Fuse from 'fuse.js';\nimport Autosuggest from 'react-autosuggest';\nimport { Link, withRouter } from 'react-router-dom';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\n\nimport {\n  updateValue,\n  finishLoading\n} from '../../actions/LocationSearchBoxActions';\n\n// TruthTree API endpoints\nconst ENDPOINTS = {\n  STATES: `/api/states`,\n  COUNTIES: `/api/counties`,\n  CITIES: `/api/cities`\n};\n\nconst TYPE_CODE = {\n  0: 'states',\n  1: 'counties',\n  2: 'cities'\n};\n\nconst createFuseOptions = keys => {\n  return {\n    threshold: 0.6,\n    includeScore: true,\n    location: 0,\n    distance: 100,\n    maxPatternLength: 32,\n    minMatchCharLength: 2,\n    keys: keys\n  };\n};\n\nconst renderSuggestionsContainer = ({ containerProps, children }) => {\n  const style = {\n    height: '5em'\n  };\n  return (\n    <div style={style} {...containerProps}>\n      {children}\n    </div>\n  );\n};\n\nconst getSuggestionLabel = suggestion => {\n  let item = suggestion.item;\n  let label = item.name;\n  if (item.typeCode !== 1) {\n    label += item.county ? `, ${item.county}` : '';\n  }\n  label += item.stateAbbr ? `, ${item.stateAbbr}` : '';\n  return label;\n};\n\nconst renderSuggestion = suggestion => {\n  let item = suggestion.item;\n  const url = `/explore/${\n    TYPE_CODE[item.type_code]\n  }/${item.name.toLowerCase().replace(' ', '-')}/${item.id}`;\n  return <Link to={url}>{getSuggestionLabel(suggestion)}</Link>;\n};\n\nclass LocationSearchBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      popoverOpen: false,\n      statesData: undefined,\n      countiesData: undefined,\n      citiesData: undefined,\n      matchedStates: [],\n      matchedCounties: [],\n      matchedCities: [],\n      suggestions: []\n    };\n    this.debouncedhandleSuggestionsFetchRequested = _.debounce(\n      this.handleSuggestionsFetchRequested,\n      250\n    );\n  }\n\n  componentDidMount() {\n    const reqs = [\n      get(ENDPOINTS.STATES),\n      get(ENDPOINTS.COUNTIES),\n      get(ENDPOINTS.CITIES)\n    ];\n\n    Promise.all(reqs)\n      .then(([statesRes, countiesRes, citiesRes]) => {\n        this._parseData(statesRes.data, countiesRes.data, citiesRes.data);\n      })\n      .catch(err => console.log(err));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.value !== prevProps.value) {\n      this.inputRef.focus();\n    }\n  }\n\n  _parseData = (statesData, countiesData, citiesData) => {\n    const statesDataById = statesData.reduce((newStatesData, state) => {\n      newStatesData[state.state_code] = state;\n      state.counties = {};\n      state.type_code = 0;\n      return newStatesData;\n    }, {});\n\n    countiesData.forEach(county => {\n      const state = statesDataById[county.fips_code_state];\n      county.state = state.name;\n      county.stateAbbr = state.abbreviation;\n      state.counties[county.county] = county;\n    });\n\n    citiesData.forEach(city => {\n      const state = statesDataById[city.fips_code_state];\n      const county = state.counties[city.county];\n\n      if (state) {\n        city.state = state.name;\n        city.stateAbbr = state.abbreviation;\n      } else {\n        city.state = null;\n        city.stateAbbr = null;\n      }\n      city.county = county ? county.name : null;\n    });\n\n    const statesFuseOptions = createFuseOptions([\n      { name: 'abbreviation', weight: 0.3 },\n      { name: 'name', weight: 0.7 }\n    ]);\n\n    const countiesFuseOptions = createFuseOptions([\n      { name: 'name', weight: 0.6 },\n      { name: 'state', weight: 0.3 },\n      { name: 'stateAbbr', weight: 0.1 }\n    ]);\n\n    const citiesFuseOptions = createFuseOptions([\n      { name: 'name', weight: 0.7 },\n      { name: 'state', weight: 0.2 },\n      { name: 'stateAbbr', weight: 0.05 },\n      { name: 'county', weight: 0.05 }\n    ]);\n\n    this.setState(\n      {\n        statesData: new Fuse(statesData, statesFuseOptions),\n        countiesData: new Fuse(countiesData, countiesFuseOptions),\n        citiesData: new Fuse(citiesData, citiesFuseOptions)\n      },\n      () => {\n        this.props.dispatch(finishLoading());\n      }\n    );\n  };\n\n  storeInputRef = searchBox => {\n    if (searchBox !== null) {\n      this.input = searchBox.input;\n    }\n  };\n\n  handleInputChange = (_, { newValue }) => {\n    this.props.dispatch(updateValue(newValue));\n  };\n\n  handleSuggestionsFetchRequested = ({ value }) => {\n    const searchPhrase = value;\n    const matchedStates = this.state.statesData.search(searchPhrase);\n    const matchedCounties = this.state.countiesData.search(searchPhrase);\n    const matchedCities = this.state.citiesData.search(searchPhrase);\n    const temp = [].concat(matchedStates, matchedCounties, matchedCities);\n    temp.sort((a, b) => a.score - b.score);\n    this.setState({\n      suggestions: temp.slice(0, 10)\n    });\n  };\n  renderInputComponent = inputProps => (\n    <div>\n      <Input\n        {...inputProps}\n        id=\"location-search-box\"\n        name=\"location-search-box\"\n        placeholder=\"Try something like Seattle or Boston\"\n        innerRef={input => {\n          this.inputRef = input;\n        }}\n      />\n    </div>\n  );\n\n  render() {\n    const { loading, value } = this.props;\n\n    const inputProps = {\n      value,\n      onChange: this.handleInputChange\n    };\n\n    return (\n      <Container>\n        <Row>\n          {loading ? (\n            <Col className=\"d-flex justify-content-center\">\n              <Spinner className=\"align-self-center\" color=\"primary\" />\n            </Col>\n          ) : (\n            <Col>\n              <Autosuggest\n                ref={this.storeInputRef}\n                theme={{\n                  container: 'position-relative',\n                  suggestionsList:\n                    'list-group position-absolute w-100 overflow-y',\n                  suggestion: 'list-group-item'\n                }}\n                suggestions={this.state.suggestions}\n                onSuggestionsClearRequested={() =>\n                  this.setState({ suggestions: [] })\n                }\n                onSuggestionsFetchRequested={\n                  this.debouncedhandleSuggestionsFetchRequested\n                }\n                getSuggestionValue={getSuggestionLabel}\n                renderInputComponent={this.renderInputComponent}\n                renderSuggestionsContainer={renderSuggestionsContainer}\n                renderSuggestion={renderSuggestion}\n                inputProps={inputProps}\n              />\n            </Col>\n          )}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  value: store.LocationSearchBoxReducer.value,\n  loading: store.LocationSearchBoxReducer.loading\n});\n\nexport default connect(mapStateToProps)(withRouter(LocationSearchBox));\n","import React, { Component } from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Collapse,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavItem,\n  NavLink,\n  NavbarToggler\n} from 'reactstrap';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport LocationSearchBox from './Explore/LocationSearchBox';\n\nimport '../styles/Header.css';\nimport logo from '../truthtree-logo.png';\n\nconst navbarStyle = {\n  backgroundColor: 'rgba(13, 22, 38, 0.8)'\n};\n\nconst navBrandStyle = {\n  '&:hover': {\n    textDecoration: 'none'\n  }\n};\n\nconst logoStyle = {\n  width: 50\n};\n\nclass Header extends Component {\n  state = {\n    collapseOpen: false\n  };\n\n  render() {\n    const { searchPhrase } = this.props;\n    const searchBoxContainerClasses = classNames({\n      'justify-content-center': true,\n      'd-none': searchPhrase === ''\n    });\n    return (\n      <Navbar style={navbarStyle} expand=\"md\" className=\"fixed-top\">\n        <NavbarBrand className=\"text-primary\" style={navBrandStyle}>\n          <Link to=\"/\">\n            <img\n              src={logo}\n              style={logoStyle}\n              className=\"d-inline-block\"\n              alt=\"TruthTree logo\"\n            />\n          </Link>\n          &nbsp;TruthTree\n        </NavbarBrand>\n        <NavbarToggler\n          onClick={() =>\n            this.setState({ collapseOpen: !this.state.collapseOpen })\n          }\n        />\n        <Collapse isOpen={this.state.collapseOpen} navbar>\n          <Container>\n            <Row className={searchBoxContainerClasses}>\n              <Col md={10} lg={7}>\n                <LocationSearchBox />\n              </Col>\n            </Row>\n          </Container>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink tag={Link} to=\"/\">\n                Explore\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to=\"/about\">\n                About\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  searchPhrase: store.LocationSearchBoxReducer.value\n});\n\nexport default withRouter(connect(mapStateToProps)(Header));\n","import React, { Component } from 'react';\nimport { Container, Jumbotron } from 'reactstrap';\nimport '../../styles/About.css';\n\nconst aboutStyle = {\n  paddingTop: 70\n};\n\nclass About extends Component {\n  render() {\n    return (\n      <Container fluid style={aboutStyle} className=\"about\">\n        <Jumbotron className=\"float-center\">\n          <h1 className=\"text-primary\">TruthTree</h1>\n          <p>A Public Data Vizipedia/Wiki-Laboratory</p>\n          <hr className=\"my-2\" />\n          <p className=\"lead\">\n            TruthTree seeks to unite all the public data in the world into a\n            data-visualization tool and reference platform that can facilitate\n            data-driven understanding and consensus regarding geography,\n            politics, and culture for geographical entities at all scales.\n          </p>\n          <p className=\"lead\" />\n        </Jumbotron>\n      </Container>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n\nimport mapStyles from './mapStyles.json';\n\nconst mapContainerStyle = {\n  height: '100%',\n  width: '100%'\n};\n\nclass Map extends Component {\n  state = {\n    center: {\n      lat: 37.09024,\n      lng: -95.712891\n    },\n    zoom: 5\n  };\n\n  handleApiLoaded = (map, maps) => {\n    map.setOptions({\n      styles: mapStyles,\n      fullscreenControlOptions: {\n        position: maps.ControlPosition.BOTTOM_RIGHT\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div style={mapContainerStyle} className=\"position-absolute\">\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: 'AIzaSyD6S0fXIE22l64bV3nhv-EB-7K1gh39nqs' }}\n          defaultCenter={this.state.center}\n          defaultZoom={this.state.zoom}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({ map, maps }) => this.handleApiLoaded(map, maps)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Map;\n","import React, { Component } from 'react';\nimport { Container, Row, Col, Label, Input, Spinner } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { updateValue } from '../../actions/LocationSearchBoxActions';\n\nclass DummySearchBox extends Component {\n  handleInputChange = event => {\n    event.target.blur();\n    this.props.dispatch(updateValue(event.target.value));\n  };\n\n  render() {\n    const { value, loading } = this.props;\n    return (\n      <Container>\n        <Row className=\"py-3\">\n          {loading ? (\n            <Col className=\"d-flex justify-content-center\">\n              <Spinner className=\"align-self-center\" color=\"primary\" />\n            </Col>\n          ) : (\n            <Col>\n              <Label\n                style={{ cursor: 'pointer', color: 'white' }}\n                for=\"dummy-search-box\"\n              >\n                Search for a U.S location:\n              </Label>\n              <Input\n                id=\"dummy-search-box\"\n                value={value}\n                onChange={this.handleInputChange}\n                placeholder=\"Try something like Seattle or Boston\"\n              />\n            </Col>\n          )}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  value: store.LocationSearchBoxReducer.value,\n  loading: store.LocationSearchBoxReducer.loading\n});\n\nexport default connect(mapStateToProps)(DummySearchBox);\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport Typist from 'react-typist';\nimport { Link } from 'react-router-dom';\n\nconst introHeadingStyle = {\n  color: 'white'\n};\n\nclass IntroHeading extends Component {\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col style={introHeadingStyle}>\n            <h1 className=\"text-primary\">Welcome to TruthTree</h1>\n            <Typist avgTypingDelay={20} cursor={{ hideWhenDone: true }}>\n              We're an open source data visualization project that focuses on\n              U.S government financial spending. &nbsp;\n              <Link to=\"/about\">Find out more</Link>\n            </Typist>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default IntroHeading;\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport DummySearchBox from './DummySearchBox';\nimport IntroHeading from './IntroHeading';\n\nconst introContainerStyle = {\n  marginBottom: '12em',\n  backgroundColor: 'rgba(13, 22, 38, 0.7)'\n};\n\nclass Intro extends Component {\n  render() {\n    const { searchPhrase } = this.props;\n    const introContainerClasses = classNames({\n      'd-none': searchPhrase !== ''\n    });\n    return (\n      <Container className={introContainerClasses}>\n        <Row>\n          <Col\n            style={introContainerStyle}\n            xs={12}\n            sm={11}\n            md={9}\n            lg={6}\n            className=\"py-3 px-4\"\n          >\n            <IntroHeading />\n            <DummySearchBox />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  searchPhrase: store.LocationSearchBoxReducer.value\n});\n\nexport default connect(mapStateToProps)(Intro);\n","import React, { Component } from 'react';\n\nimport Map from './Map';\nimport Intro from './Intro';\n\nconst exploreStyle = {\n  flex: '1 1 100%'\n};\n\nclass Explore extends Component {\n  render() {\n    return (\n      <div\n        style={exploreStyle}\n        className=\"d-flex align-items-center position-relative\"\n      >\n        <Map />\n        <Intro />\n      </div>\n    );\n  }\n}\n\nexport default Explore;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Explore from './components/Explore';\n\nimport './App.css';\nimport './styles/Tab.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"d-flex flex-column\">\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={Explore} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/explore/:level/:name/:id\" component={Home} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-typist/dist/Typist.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/RootReducer';\nexport default function configureStore() {\n  return createStore(rootReducer, applyMiddleware(thunk));\n}\n"],"sourceRoot":""}