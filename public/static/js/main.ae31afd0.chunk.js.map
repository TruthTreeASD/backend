{"version":3,"sources":["truthtree-logo.png","constants.js","reducers/LocationSearchBoxReducer.js","reducers/RootReducer.js","reducers/FilterByReducer.js","reducers/AttributeRangeReducer.js","reducers/SelectedAttributeReducer.js","reducers/YearSelectorReducer.js","reducers/NormalizationReducer.js","components/YearSelector.js","components/Explore/Normalization.js","components/DisplayComponent.js","components/LeftSideBar.js","components/AttributeDeselector.js","components/AttributeRange.js","components/Explore/Tab.js","components/Explore/Tabs.js","components/Explore/TimeSeriesChart.js","components/Explore/TimeSeriesView.js","components/Explore/TimeSeriesGrid.js","components/Home.js","actions/LocationSearchBoxActions.js","components/Explore/LocationSearchBox.js","components/Header.js","components/About/index.js","components/Explore/Map.js","components/Explore/DummySearchBox.js","components/Explore/IntroHeading.js","components/Explore/Intro.js","components/Explore/index.js","App.js","serviceWorker.js","index.js","store.js"],"names":["module","exports","__webpack_require__","p","TRUTHTREE_URI","defaultState","value","loading","combineReducers","FilterByReducer","state","arguments","length","undefined","dimension","action","type","Object","objectSpread","AttributeRangeReducer","attributeName","populationRange","SelectedAttributeReducer","sidebarData","selectedAttributes","Array","from","YearSelectorReducer","yearSelected","LocationSearchBoxReducer","payload","NormalizationReducer","selectedNormalizationDisplayName","selectedNormalizationName","Normalization","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dropdownOpen","normalizationValues","normalizationValuesCall","bind","assertThisInitialized","toggle","setSelectedNormalization","setState","prevState","e","dispatch","target","id","_this2","axios","get","concat","then","response","data","catch","error","console","log","_this3","values","map","i","react_default","a","createElement","DropdownItem","key","name","displayValue","onClick","Dropdown","isOpen","DropdownToggle","caret","DropdownMenu","Component","connect","DisplayComponent","currentLevel","locationIds","year","populationRangeCall","nextProps","normalizationKeys","attributes","_","flatMap","elem","row","location_id","attribute_id","per_capita","by_revenue","selectedAttribtes","minPopulation","maxPopulation","population","Math","floor","level","obj","1","push","_this4","Explore_Normalization","Table","hover","column","index","toLocaleString","url","href","rel","LeftSideBar","isAttributeSelected","handleClickCollection","collection","defineProperty","handleChangeSearch","event","searchedString","toLowerCase","renderSearchTerm","search","attr","isLoaded","collapsedLeft","keys","match","params","attribute","newArr","_loop","remove","v","_ret","confirmAlert","title","message","buttons","label","className","collapseLeftBar","data-spy","data-offset-top","onChange","placeholder","style","display","handleClickAttribute","background","withRouter","dropdownMenuStyle","height","overflow","allYears","YearSelector","yearArray","AttributeDeselector","padding","fontSize","deselectAttribute","paddingRight","Range","Slider","marks","_marks","-50","AttributeRange","onSliderChange","locationPopulation","min","max","locationId","locPop","res","err","createSliders","currentAttribute","location","dots","step","Tab","_this$props","_this$props2","activeTab","Tabs","onClickTabItem","tab","children","child","Explore_Tab","TimeSeries","condition","Badge","color","collectionName","LineChart","width","margin","top","right","bottom","left","CartesianGrid","stroke","strokeDasharray","XAxis","dataKey","position","YAxis","angle","Tooltip","Legend","verticalAlign","iconSize","locations","Line","isAnimationActive","TimeSeriesView","locationData","dataReal","lineColors","fetchResponse","formatResponse","initializeYearMap","fetchLocations","selectedNormalization","dataForEachLocation","locationName","attributesForEachLocation","attrValue","val","da","select","random","yearArr","yearEntry","_this5","len","Spinner","size","attrData","TimeSeriesChart","GridTest","handExpandClick","attrId","modal","modalAttrIndex","modalToggle","getAttributeNames","cards","card","Card","sm","CardBody","Explore_TimeSeriesView","Button","Container","Row","Modal","ModalBody","ModalFooter","homeStyle","paddingTop","Home","fluid","components_LeftSideBar","components_AttributeDeselector","Explore_Tabs","components_DisplayComponent","TimeSeriesGrid","CardHeader","Col","components_AttributeRange","xs","components_YearSelector","updateValue","finishLoading","ENDPOINTS","TYPE_CODE","0","2","createFuseOptions","threshold","includeScore","distance","maxPatternLength","minMatchCharLength","renderSuggestionsContainer","_ref","containerProps","assign","getSuggestionLabel","suggestion","item","typeCode","county","stateAbbr","renderSuggestion","type_code","replace","Link","to","LocationSearchBox","_parseData","statesData","countiesData","citiesData","statesDataById","reduce","newStatesData","state_code","counties","forEach","fips_code_state","abbreviation","city","statesFuseOptions","weight","countiesFuseOptions","citiesFuseOptions","Fuse","storeInputRef","searchBox","input","handleInputChange","_ref2","newValue","handleSuggestionsFetchRequested","_ref3","searchPhrase","matchedStates","matchedCounties","matchedCities","temp","sort","b","score","suggestions","slice","renderInputComponent","inputProps","Input","innerRef","inputRef","popoverOpen","debouncedhandleSuggestionsFetchRequested","debounce","reqs","Promise","all","_ref4","_ref5","slicedToArray","statesRes","countiesRes","citiesRes","prevProps","focus","dist_default","ref","theme","container","suggestionsList","alwaysRenderSuggestions","onSuggestionsClearRequested","onSuggestionsFetchRequested","getSuggestionValue","store","navbarStyle","backgroundColor","navBrandStyle","&:hover","textDecoration","logoStyle","Header","collapseOpen","searchBoxContainerClasses","classNames","justify-content-center","d-none","Navbar","expand","NavbarBrand","src","logo","alt","NavbarToggler","Collapse","navbar","md","lg","Explore_LocationSearchBox","Nav","NavItem","NavLink","tag","aboutStyle","About","Jumbotron","mapContainerStyle","Map","center","lat","lng","zoom","handleApiLoaded","maps","setOptions","styles","mapStyles","fullscreenControlOptions","ControlPosition","BOTTOM_RIGHT","google_map_react_lib_default","bootstrapURLKeys","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","DummySearchBox","blur","Label","cursor","for","introHeadingStyle","IntroHeading","Typist_default","avgTypingDelay","hideWhenDone","introContainerStyle","marginBottom","Intro","introContainerClasses","Explore_IntroHeading","Explore_DummySearchBox","exploreStyle","flex","Explore","Explore_Map","Explore_Intro","App","BrowserRouter","components_Header","Switch","Route","exact","path","component","Boolean","window","hostname","ReactDOM","render","es","createStore","rootReducer","applyMiddleware","thunk","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae31afd0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/truthtree-logo.75b56fb9.png\";","const TRUTHTREE_URI = 'https://truthtree.herokuapp.com';\nmodule.exports = {\n  TRUTHTREE_URI\n};\n","const defaultState = {\n  value: '',\n  loading: true\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SEARCHBOX_UPDATE_VALUE':\n      return {\n        ...state,\n        value: action.payload\n      };\n\n    case 'SEARCHBOX_FINISH_LOADING':\n      return {\n        ...state,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport AttributeRangeReducer from './AttributeRangeReducer';\nimport FilterByReducer from './FilterByReducer';\nimport SelectedAttributeReducer from './SelectedAttributeReducer';\nimport YearSelectorReducer from './YearSelectorReducer';\nimport LocationSearchBoxReducer from './LocationSearchBoxReducer';\nimport NormalizationReducer from './NormalizationReducer';\n\nexport default combineReducers({\n  FilterByReducer,\n  AttributeRangeReducer,\n  SelectedAttributeReducer,\n  YearSelectorReducer,\n  LocationSearchBoxReducer,\n  NormalizationReducer\n});\n","export default (state = { dimension: 'State' }, action) => {\n  switch (action.type) {\n    case 'CHANGE_DIMENSION':\n      return {\n        ...state,\n        dimension: action.value\n      };\n    default:\n      return state;\n  }\n};\n","export default (\n  state = {\n    attributeName: ['Population'],\n    populationRange: [-25, 25]\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'RANGE_SELECTION':\n      return {\n        ...state,\n        populationRange: action.populationRange\n      };\n    default:\n      return state;\n  }\n};\n","export default (\n  state = {\n    sidebarData: [],\n    selectedAttributes: []\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'CHANGE_ATTRIBUTE':\n      return {\n        ...state,\n        selectedAttributes: Array.from(action.value)\n      };\n    default:\n      return state;\n  }\n};\n","export default (state = { yearSelected: 2016 }, action) => {\n  switch (action.type) {\n    case 'CHANGE_YEAR':\n      state = {\n        ...state,\n        yearSelected: action.yearSelected\n      };\n      break;\n    default:\n      return state;\n  }\n  return state;\n};\n","export default (\n  state = {\n    selectedNormalizationDisplayName: 'Gross',\n    selectedNormalizationName: 'GROSS'\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'CHANGE_NORMALIZATION':\n      state = {\n        ...state,\n        selectedNormalizationName: action.selectedNormalizationName,\n        selectedNormalizationDisplayName:\n          action.selectedNormalizationDisplayName\n      };\n      break;\n    default:\n      return state;\n  }\n  return state;\n};\n","import React, { Component } from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\nimport { connect } from 'react-redux';\n\nconst dropdownMenuStyle = {\n  height: '200px',\n  overflow: 'auto'\n};\n\nlet allYears = [];\nfor (let i = 1966; i < 2016; i++) {\n  allYears.push(i + 1);\n}\n\nclass YearSelector extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      dropdownOpen: false,\n      yearSelected: '2016'\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  onClick(e) {\n    //this.setState({ yearSelected: e.target.id });\n    console.log(e.target.id);\n    this.props.dispatch({\n      type: 'CHANGE_YEAR',\n      yearSelected: e.target.id\n    });\n  }\n\n  render() {\n    let yearArray = allYears.map((year, i) => (\n      <DropdownItem key={i} id={year} onClick={this.onClick}>\n        {year}\n      </DropdownItem>\n    ));\n\n    return (\n      <div>\n        <p> Select Year of Data to be displayed: </p>\n        <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n          <DropdownToggle caret>{this.props.yearSelected}</DropdownToggle>\n          <DropdownMenu style={dropdownMenuStyle}>{yearArray}</DropdownMenu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    yearSelected: state.YearSelectorReducer.yearSelected\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(YearSelector);\n","import React, { Component } from 'react';\n\nimport '../../styles/Header.css';\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle\n} from 'reactstrap';\nimport axios from 'axios/index';\nimport { connect } from 'react-redux';\n\nimport { TRUTHTREE_URI } from '../../constants';\n\nclass Normalization extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownOpen: false,\n      selectedNormalizationDisplayName: 'Gross',\n      selectedNormalizationName: 'GROSS',\n      normalizationValues: []\n    };\n    this.normalizationValuesCall = this.normalizationValuesCall.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.setSelectedNormalization = this.setSelectedNormalization.bind(this);\n  }\n\n  componentDidMount() {\n    this.normalizationValuesCall();\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  setSelectedNormalization(e) {\n    //console.log(e.target.id);\n    //this.setState({selectedNormalizationDisplayName: e.target.value});\n    //this.setState({selectedNormalizationName: e.target.id});\n    this.props.dispatch({\n      type: 'CHANGE_NORMALIZATION',\n      selectedNormalizationName: e.target.id,\n      selectedNormalizationDisplayName: e.target.value\n    });\n  }\n\n  normalizationValuesCall() {\n    axios\n      .get(`${TRUTHTREE_URI}/api/normalization_types`)\n      .then(response => {\n        this.setState({ normalizationValues: response.data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    let values = this.state.normalizationValues.map((value, i) => (\n      <DropdownItem\n        key={i}\n        id={value.name}\n        value={value.displayValue}\n        onClick={this.setSelectedNormalization}\n      >\n        {value.displayValue}\n      </DropdownItem>\n    ));\n\n    return (\n      <div id=\"normalisation\">\n        Normalization attribute:\n        <Dropdown\n          id=\"dropdown\"\n          isOpen={this.state.dropdownOpen}\n          toggle={this.toggle}\n        >\n          <DropdownToggle caret>\n            {' '}\n            {this.props.selectedNormalizationDisplayName}{' '}\n          </DropdownToggle>\n          <DropdownMenu>{values}</DropdownMenu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    selectedNormalizationName:\n      state.NormalizationReducer.selectedNormalizationName,\n    selectedNormalizationDisplayName:\n      state.NormalizationReducer.selectedNormalizationDisplayName\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Normalization);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios/index';\nimport _ from 'lodash';\nimport '../styles/DisplayComponent.css';\nimport { TRUTHTREE_URI } from '../constants';\nimport { Table } from 'reactstrap';\n\nimport Normalization from './Explore/Normalization';\n\nclass DisplayComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentLevel: null,\n      data: {},\n      locationIds: [],\n      selectedAttributes: [],\n      year: 2016,\n      selectedNormalizationName: 'GROSS',\n      populationRange: [-25, 25]\n    };\n    this.populationRangeCall = this.populationRangeCall.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      selectedAttributes: nextProps.selectedAttributes,\n      year: nextProps.year,\n      selectedNormalizationName: nextProps.selectedNormalizationName,\n      populationRange: nextProps.populationRange,\n      normalizationKeys: nextProps.normalizationKeys\n    });\n    if (this.state.populationRange !== nextProps.populationRange) {\n      this.populationRangeCall();\n    }\n    let attributes = _.flatMap(nextProps.selectedAttributes, elem => {\n      return elem[0];\n    });\n    if (attributes.length > 0) {\n      axios\n        .get(\n          '/api/attributes?locationIds=' +\n            this.state.locationIds +\n            '&attributeIds=' +\n            attributes +\n            '&normalizationType=' +\n            nextProps.selectedNormalizationName +\n            '&yearList=' +\n            nextProps.year\n        )\n        .then(response => {\n          let data = this.state.data;\n          _.map(response.data, row => {\n            _.map(row.attributes, elem => {\n              data[row.location_id][elem.attribute_id] =\n                nextProps.selectedNormalizationName === 'PER_CAPITA'\n                  ? elem.data[0].per_capita\n                  : nextProps.selectedNormalizationName === 'BY_REVENUE'\n                  ? elem.data[0].by_revenue\n                  : elem.data[0].value;\n            });\n          });\n          this.setState({ data: data });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: {},\n      selectedAttribtes: this.props.selectedAttributes,\n      year: this.props.yearSelected,\n      selectedNormalizationName: this.props.selectedNormalizationName\n    });\n    this.populationRangeCall();\n  }\n\n  populationRangeCall() {\n    let minPopulation = 0;\n    let maxPopulation = 0;\n    let data = {};\n    let locationIds = [];\n    let year = this.state.year ? this.state.year : 2016;\n    // Calculate min and max population\n    axios\n      .get(\n        `${TRUTHTREE_URI}/api/population?locationId=` +\n          this.props.id +\n          '&year=' +\n          year\n      )\n      .then(response => {\n        let population = response.data.population;\n        maxPopulation = Math.floor(\n          population + (this.props.populationRange[1] / 100) * population\n        );\n        minPopulation = Math.floor(\n          population + (this.props.populationRange[0] / 100) * population\n        );\n        return axios\n          .get(\n            `${TRUTHTREE_URI}/api/${this.props.level}?populationRange=` +\n              minPopulation +\n              ',' +\n              maxPopulation\n          )\n          .then(response => {\n            _.map(response.data, obj => {\n              data[obj.id] = { name: obj.name, '1': obj.population };\n              locationIds.push(obj.id);\n            });\n            this.setState({ data: data });\n            this.setState({ locationIds: locationIds });\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n      <div id=\"mainDisplay\">\n        <Normalization />\n        <Table hover>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Population</th>\n              {this.state.selectedAttributes.map((column, index) => {\n                return <th key={index}>{column[1]}</th>;\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {_.values(this.state.data).map((row, index) => {\n              return (\n                <tr key={index}>\n                  <td>{row['name']}</td>\n                  <td>{row['1'].toLocaleString()}</td>\n                  {this.state.selectedAttributes.map((column, i) => {\n                    let url =\n                      'https://www.google.com/search?q=' +\n                      row['name'] +\n                      '+' +\n                      this.state.selectedAttributes[i][1];\n                    return (\n                      <td key={i}>\n                        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                          {row[column[0]]}\n                        </a>\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => ({\n  year: state.YearSelectorReducer.yearSelected,\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes,\n  populationRange: state.AttributeRangeReducer.populationRange,\n  selectedNormalizationName:\n    state.NormalizationReducer.selectedNormalizationName\n});\n\nexport default connect(mapState)(DisplayComponent);\n","import React, { Component } from 'react';\nimport '../styles/LeftSideBar.css';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { confirmAlert } from 'react-confirm-alert';\n\nimport { TRUTHTREE_URI } from '../constants';\nimport { withRouter } from 'react-router-dom';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nclass LeftSideBar extends Component {\n  constructor(props) {\n    super(props);\n    //   /api/collections?level=state\n    this.state = {\n      sidebarData: [],\n      isLoaded: false,\n      selectedAttributes: [],\n      collapsedLeft: false,\n      searchedString: ''\n    };\n    // Set initial state of each collection to false\n    Object.keys(this.state.sidebarData).map(key => (this.state[key] = false));\n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        `${TRUTHTREE_URI}/api/collections?locationId=` + //382026003\n          this.props.match.params.id // +&year=2016\n      )\n      .then(response => {\n        //data contains the variables\n        this.setState({\n          sidebarData: response.data,\n          isLoaded: true\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // if (this.state.selectedAttributes != nextProps.selectedAttributes) {\n    // this.setState({ selectedAttributes: nextProps.selectedAttributes });\n    //  }\n    //console.log('got prop');\n  }\n\n  isAttributeSelected = attribute_id => {\n    for (let i = 0; i < this.props.selectedAttributes.length; i++) {\n      if (this.props.selectedAttributes[i][0] === attribute_id) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // Toggle state of each collection on click\n  handleClickCollection = collection => {\n    this.setState({ [collection]: !this.state[collection] });\n  };\n\n  // stores attribute selected\n  handleClickAttribute(collection, attribute) {\n    let newArr = this.props.selectedAttributes;\n    let id = attribute.attribute_id;\n    for (let i = 0; i < newArr.length; i++) {\n      if (newArr[i][0] === id) {\n        _.remove(newArr, elem => {\n          return elem === newArr[i];\n        });\n        this.setState({\n          selectedAttributes: newArr\n        });\n\n        this.props.dispatch({\n          type: 'CHANGE_ATTRIBUTE',\n          value: newArr\n        });\n        return;\n      }\n    }\n\n    // To limit number of selected attributes to 10\n    if (newArr.length < 10) {\n      newArr.push([id, attribute.name, collection]);\n      this.setState({\n        selectedAttributes: newArr\n      });\n      this.props.dispatch({\n        type: 'CHANGE_ATTRIBUTE',\n        value: newArr\n      });\n    } else {\n      confirmAlert({\n        title: 'Error!',\n        message:\n          'Number of selected attributes exceeded limit of 10, please remove attributes to add more.',\n        buttons: [\n          {\n            label: 'OK'\n          }\n        ]\n      });\n    }\n  }\n\n  collapseLeftBar() {\n    this.setState({ collapsedLeft: !this.state.collapsedLeft });\n    this.setState({ searchedString: '' });\n  }\n\n  //updates search bar with text\n  handleChangeSearch = event => {\n    this.setState({ searchedString: event.target.value.toLowerCase() });\n    if (this.state.searchedString === '') {\n    }\n  };\n\n  renderSearchTerm = collection => {\n    if (\n      this.state.searchedString === '' ||\n      this.state.sidebarData[collection].name\n        .toLowerCase()\n        .search(this.state.searchedString) > -1\n    ) {\n      return true;\n    }\n    var attr;\n    for (attr in this.state.sidebarData[collection].attributes) {\n      if (\n        this.state.sidebarData[collection].attributes[attr].name\n          .toLowerCase()\n          .search(this.state.searchedString) > -1\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  render() {\n    var { isLoaded } = this.state;\n    if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      if (this.state.collapsedLeft) {\n        return (\n          <button className={'btn'} onClick={() => this.collapseLeftBar()}>\n            <i\n              className={\n                'col-md-flex d-md-flex ' + !this.state.collapsedLeft\n                  ? 'fa fa-chevron-right'\n                  : 'fa fa-chevron-left'\n              }\n            />\n          </button>\n        );\n      } else {\n        return (\n          <nav className=\"scrollLeftBar col-md-2 d-none d-md-block bg-light sidebar\">\n            <div className=\"row\">\n              <div className=\"col-10\">\n                <input\n                  className=\"form-control leftSearch\"\n                  data-spy=\"affix\"\n                  data-offset-top=\"197\" //trying to make search box stay top\n                  id=\"attribute-search-box\"\n                  onChange={this.handleChangeSearch}\n                  placeholder=\"Property Lookup\"\n                />\n              </div>\n              <button className={'btn'} onClick={() => this.collapseLeftBar()}>\n                <i\n                  className={\n                    'chevron-icon-padding ' + !this.state.collapsedLeft\n                      ? 'fa fa-chevron-left'\n                      : 'fa fa-chevron-right'\n                  }\n                />\n              </button>\n            </div>\n            <div\n              style={{ display: !this.state.collapsedLeft ? 'block' : 'none' }}\n            >\n              {Object.keys(this.state.sidebarData).map((collection, i) => {\n                if (this.renderSearchTerm(collection)) {\n                  return (\n                    <div key={i}>\n                      <button\n                        className=\"accordion\"\n                        onClick={() => this.handleClickCollection(collection)}\n                      >\n                        {this.state.sidebarData[collection].name}\n                      </button>\n                      <div\n                        style={{\n                          display: this.state[collection] ? 'block' : 'none'\n                        }}\n                      >\n                        {Object.keys(\n                          this.state.sidebarData[collection].attributes\n                        ).map((attr, i) => {\n                          return (\n                            <label\n                              onClick={() =>\n                                this.handleClickAttribute(\n                                  this.state.sidebarData[collection].name,\n                                  this.state.sidebarData[collection].attributes[\n                                    attr\n                                  ]\n                                )\n                              }\n                              key={i}\n                              className=\"panel float-right\"\n                              style={{\n                                background: this.isAttributeSelected(\n                                  this.state.sidebarData[collection].attributes[\n                                    attr\n                                  ].attribute_id\n                                )\n                                  ? '#d4f3c7'\n                                  : 'white'\n                              }}\n                            >\n                              <div>\n                                {\n                                  this.state.sidebarData[collection].attributes[\n                                    attr\n                                  ].name\n                                }\n                              </div>\n                            </label>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  );\n                }\n              })}\n            </div>\n          </nav>\n        );\n      }\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes\n});\n\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(LeftSideBar));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nclass AttributeDeselector extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedAttributes: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ selectedAttribtes: this.props.selectedAttributes });\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({ selectedAttributes: nextProps.selectedAttributes });\n  }\n\n  deselectAttribute(attribute) {\n    let newArr = this.state.selectedAttributes;\n    let id = attribute[0];\n    for (let i = 0; i < newArr.length; i++) {\n      if (newArr[i][0] === id) {\n        _.remove(newArr, elem => {\n          return elem === newArr[i];\n        });\n        this.setState({\n          selectedAttributes: newArr\n        });\n        this.props.dispatch({\n          type: 'CHANGE_ATTRIBUTE',\n          value: newArr\n        });\n        return;\n      }\n    }\n  }\n\n  render() {\n    if (this.state.selectedAttributes.length < 1) {\n      return <div />;\n    } else {\n      return (\n        <div className={'row'}>\n          <span\n            className=\"text-info\"\n            style={{ padding: '10px', fontSize: '18px' }}\n          >\n            Selected Filters\n          </span>\n          {Object.keys(this.state.selectedAttributes).map((attributes, i) => {\n            return (\n              <div style={{ padding: '10px' }}>\n                <button\n                  className=\"btn btn-light\"\n                  onClick={() =>\n                    this.deselectAttribute(this.state.selectedAttributes[i])\n                  }\n                >\n                  <i className=\"fa fa-times\" style={{ paddingRight: '10px' }} />\n                  {this.state.selectedAttributes[i][1]}\n                </button>\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n  }\n}\n\nconst mapState = state => ({\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes\n});\n\nexport default connect(mapState)(AttributeDeselector);\n","import React, { Component } from 'react';\nimport Slider from 'rc-slider';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport '../styles/AttributeRange.css';\nimport { TRUTHTREE_URI } from '../constants';\n\nconst Range = Slider.Range;\n\nconst marks = {\n  '-50': '50',\n  '-50': '-50%',\n  '-40': '-40%',\n  '-30': '-30%',\n  '-20': '-20%',\n  '-10': '-10%',\n  '0': '0%',\n  '10': '10%',\n  '20': '+20%',\n  '30': '+30%',\n  '40': '+40%',\n  '50': '+50%'\n};\n\nclass AttributeRange extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locationPopulation: null,\n      value: [-5, 5],\n      min: -50,\n      max: 50\n    };\n  }\n\n  componentDidMount() {\n    let year = this.props.yearSelected ? this.props.yearSelected : 2016;\n    let url =\n      `${TRUTHTREE_URI}/api/population?locationId=` +\n      this.props.locationId +\n      '&year=' +\n      year;\n    console.log(url);\n    let locPop = null;\n\n    axios\n      .get(url)\n      .then(res => {\n        locPop = res.data.population;\n        console.log(res.data.population);\n        this.setState({ locationPopulation: locPop });\n      })\n      .catch(err => console.log(err));\n  }\n\n  onSliderChange = value => {\n    console.log();\n    this.props.dispatch({\n      type: 'RANGE_SELECTION',\n      populationRange: value\n    });\n  };\n\n  render() {\n    const createSliders = this.props.attribute.attributeName.map(\n      (currentAttribute, i) => (\n        <div className=\"outer\" key={i}>\n          <p>\n            {currentAttribute} of {this.props.location} {':  '}{' '}\n            <b>{this.state.locationPopulation}</b>\n          </p>\n          <p>\n            Select range of <b>{currentAttribute}</b> for filtering other{' '}\n            <b>{this.props.level}</b>:\n          </p>\n          <p className=\"Note\">\n            (*range selection available from -50% to +50% wrt to{' '}\n            {this.props.location} {currentAttribute})\n          </p>\n\n          <Range\n            dots\n            step={5}\n            value={this.props.attribute.populationRange}\n            min={this.state.min}\n            max={this.state.max}\n            marks={marks}\n            onChange={this.onSliderChange}\n          />\n\n          <p className=\"selectionText\">\n            Current selection: {this.props.attribute.populationRange[0]}% to{' '}\n            {this.props.attribute.populationRange[1]}% :\n          </p>\n        </div>\n      )\n    );\n\n    return (\n      <div>\n        <div>\n          <div> {createSliders} </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    year: state.YearSelectorReducer.yearSelected,\n    attribute: state.AttributeRangeReducer\n  };\n};\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AttributeRange);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tab extends Component {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  };\n\n  render() {\n    const {\n      onClick,\n      props: { activeTab, label }\n    } = this;\n\n    let className = 'tab-list-item';\n\n    if (activeTab === label) {\n      className += ' tab-list-active';\n    }\n\n    return (\n      <li className={className} onClick={onClick}>\n        {label}\n      </li>\n    );\n  }\n}\n\nexport default Tab;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Tab from './Tab';\nimport '../../styles/Tab.css';\n\nclass Tabs extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Array).isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: this.props.children[0].props.label\n    };\n  }\n\n  onClickTabItem = tab => {\n    this.setState({ activeTab: tab });\n  };\n\n  render() {\n    const {\n      onClickTabItem,\n      props: { children },\n      state: { activeTab }\n    } = this;\n\n    return (\n      <div className=\"tabs\">\n        <ol className=\"tab-list\">\n          {children.map(child => {\n            const { label } = child.props;\n\n            return (\n              <Tab\n                activeTab={activeTab}\n                key={label}\n                label={label}\n                onClick={onClickTabItem}\n              />\n            );\n          })}\n        </ol>\n        <div className=\"tab-content\">\n          {children.map(child => {\n            if (child.props.label !== activeTab) return undefined;\n            return child.props.children;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\n","import React, { Component } from 'react';\nimport { Badge } from 'reactstrap';\n\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend\n} from 'recharts';\nimport '../../styles/TimeSeries.css';\n\nclass TimeSeries extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const attributeName = this.props.attributeName;\n    if (this.props.condition === 'large') {\n      return (\n        <div className=\"chartDiv\">\n          <div style={{ padding: '10px' }}>\n            <Badge color=\"info\" className=\"popupHeader\">\n              {this.props.collectionName} - {this.props.attributeName}\n            </Badge>\n          </div>\n\n          <LineChart\n            width={1050}\n            height={450}\n            data={this.props.data}\n            margin={{ top: 5, right: 5, bottom: 5, left: 5 }}\n          >\n            <CartesianGrid\n              className=\"chartDiv\"\n              stroke=\"#ccc\"\n              strokeDasharray=\"5 5\"\n              padding={{ left: 20, right: 20 }}\n            />\n            <XAxis\n              dataKey=\"year\"\n              label={{\n                value: 'Year',\n                position: 'insideBottom'\n              }}\n            />\n            <YAxis\n              label={{\n                value: attributeName,\n                angle: -90,\n                position: 'insideLeft'\n              }}\n            />\n            <Tooltip />\n            <Legend verticalAlign=\"bottom\" iconSize={10} />\n            {this.props.locations.map((location, i) => (\n              <Line\n                key={location.name}\n                type=\"monotone\"\n                dataKey={location.name}\n                stroke={location.color}\n                isAnimationActive={false}\n              />\n            ))}\n          </LineChart>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"chartDiv\">\n          <div style={{ padding: '10px' }}>\n            <Badge color=\"info\"> {this.props.collectionName} - {this.props.attributeName} </Badge>\n          </div>\n          <LineChart\n            width={495}\n            height={200}\n            data={this.props.data}\n            margin={{ top: 5, right: 5, bottom: 5, left: 5 }}\n          >\n            <CartesianGrid\n              className=\"chartDiv\"\n              stroke=\"#ccc\"\n              strokeDasharray=\"5 5\"\n              padding={{ left: 20, right: 20 }}\n            />\n            <XAxis\n              dataKey=\"year\"\n              label={{\n                value: 'Year',\n                position: 'insideBottom'\n              }}\n            />\n            <YAxis\n              label={{\n                value: attributeName,\n                angle: -90,\n                position: 'insideLeft'\n              }}\n            />\n            <Tooltip />\n            {this.props.locations.map((location, i) => (\n              <Line\n                key={location.name}\n                type=\"monotone\"\n                dataKey={location.name}\n                stroke={location.color}\n                isAnimationActive={false}\n              />\n            ))}\n          </LineChart>\n        </div>\n      );\n    }\n  }\n}\n\nexport default TimeSeries;\n","import React, { Component } from 'react';\nimport { Spinner } from 'reactstrap';\nimport axios from 'axios/index';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport TimeSeriesChart from './TimeSeriesChart';\nimport { TRUTHTREE_URI } from '../../constants';\n\nclass TimeSeriesView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      locations: [],\n      data: [],\n      locationData: [],\n      currentLevel: null,\n      dataReal: [],\n      locationIds: [],\n      lineColors: [\n        'red',\n        'purple',\n        'green',\n        'blue',\n        'deeppink',\n        'orange',\n        'navy',\n        'olive',\n        'lime',\n        'indianred',\n        'dimgrey'\n      ]\n    };\n    this.fetchResponse = this.fetchResponse.bind(this);\n    this.formatResponse = this.formatResponse.bind(this);\n    this.initializeYearMap = this.initializeYearMap.bind(this);\n    this.fetchLocations = this.fetchLocations.bind(this);\n  }\n\n  componentDidMount() {\n    const len = this.props.selectedAttributes.length;\n    if (len !== 0) {\n      this.fetchLocations();\n    }\n  }\n\n  componentWillReceiveProps() {\n    const len = this.props.selectedAttributes.length;\n    if (len !== 0) {\n      this.fetchLocations();\n    }\n  }\n\n  fetchLocations() {\n    let minPopulation = 0;\n    let maxPopulation = 0;\n    let locationIds = [];\n    let year = this.props.yearSelected ? this.props.yearSelected : 2016;\n    let locationData = {};\n    axios\n      .get(\n        `${TRUTHTREE_URI}/api/population?locationId=` +\n          this.props.id +\n          '&year=' +\n          year\n      )\n      .then(response => {\n        let population = response.data.population;\n        maxPopulation = Math.floor(\n          population + (this.props.populationRange[1] / 100) * population\n        );\n        minPopulation = Math.floor(\n          population + (this.props.populationRange[0] / 100) * population\n        );\n        return axios\n          .get(\n            `${TRUTHTREE_URI}/api/states?populationRange=` +\n              minPopulation +\n              ',' +\n              maxPopulation\n          )\n          .then(response => {\n            _.map(response.data, obj => {\n              locationData[obj.id] = { name: obj.name, '1': obj.population };\n              locationIds.push(obj.id);\n            });\n            this.setState({ locationIds: locationIds });\n            this.setState({ locationData: locationData });\n            this.fetchResponse();\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  fetchResponse() {\n    let url =\n      `${TRUTHTREE_URI}/api/attributes?locationIds=` +\n      this.state.locationIds +\n      '&attributeIds=' +\n      this.props.selectedAttributes[this.props.index][0] +\n      '&normalizationType=' +\n      this.props.selectedNormalization;\n    axios\n      .get(url)\n      .then(response => {\n        this.formatResponse(response);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  formatResponse(response) {\n    let data = [];\n    let locations = [];\n    let map = {};\n\n    response.data.map(dataForEachLocation => {\n      let location = {};\n      let lData = this.state.locationData[dataForEachLocation.location_id];\n      let locationName = lData['name'];\n      dataForEachLocation.attributes.map(attributesForEachLocation => {\n        attributesForEachLocation.data.map(attrValue => {\n          let val = map[attributesForEachLocation.attribute_id];\n          if (val === undefined) {\n            val = this.initializeYearMap();\n          }\n          let da = val[attrValue.year - 1967];\n          if (\n            da[dataForEachLocation.location_id] === 0 ||\n            da[dataForEachLocation.location_id] === undefined\n          ) {\n            if (this.props.selectedNormalization === 'GROSS') {\n              val[attrValue.year - 1967][locationName] = attrValue.value;\n            } else if (this.props.selectedNormalization === 'PER_CAPITA') {\n              val[attrValue.year - 1967][locationName] = attrValue.per_capita;\n            } else if (this.props.selectedNormalization === 'BY_REVENUE') {\n              val[attrValue.year - 1967][locationName] = attrValue.by_revenue;\n            }\n          }\n          map[attributesForEachLocation.attribute_id] = val;\n          return null;\n        });\n        location['id'] = dataForEachLocation.location_id;\n        let select = this.state.lineColors[Math.floor(Math.random() * 11)];\n        location['color'] = select;\n        location['name'] = locationName;\n        locations.push(location);\n        return null;\n      });\n      return null;\n    });\n    data.push(map);\n    this.setState({ data: data, locations: locations, loading: false });\n  }\n\n  initializeYearMap() {\n    let yearArr = [];\n    for (let i = 1967; i < 2017; i++) {\n      let yearEntry = { year: i };\n      yearArr.push(yearEntry);\n    }\n    return yearArr;\n  }\n\n  render() {\n    const len = this.props.selectedAttributes.length;\n\n    const { loading } = this.state;\n\n    if (len === 0) {\n      return <div>Select an attribute</div>;\n    } else {\n      if (loading) {\n        return (\n          <div className=\"d-flex justify-content-center\">\n            <Spinner\n              className=\"align-self-center\"\n              color=\"secondary\"\n              size=\"sm\"\n            />\n          </div>\n        );\n      } else {\n        return this.state.data.map((attrData, i) => {\n          return (\n            <TimeSeriesChart\n              data={\n                attrData[this.props.selectedAttributes[this.props.index][i]]\n              }\n              attributeName={this.props.selectedAttributes[this.props.index][1]}\n              collectionName={\n                this.props.selectedAttributes[this.props.index][2]\n              }\n              locations={this.state.locations}\n              condition={this.props.condition}\n            />\n          );\n        });\n      }\n    }\n  }\n}\n\nconst mapState = state => ({\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes,\n  year: state.YearSelectorReducer.yearSelected,\n  populationRange: state.AttributeRangeReducer.populationRange,\n  selectedNormalization: state.NormalizationReducer.selectedNormalizationName\n});\nexport default connect(mapState)(TimeSeriesView);\n","import React, { Component } from 'react';\nimport {\n  Container,\n  Row,\n  Card,\n  CardBody,\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  Badge\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport TimeSeriesView from './TimeSeriesView';\nimport Normalization from './Normalization';\n\nimport '../../styles/TimeSeries.css';\n\nclass GridTest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n\n    this.modalToggle = this.modalToggle.bind(this);\n  }\n\n  modalToggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  getAttributeNames(type) {\n    return _.flatMap(this.props.selectedAttributes, elem => {\n      return type === 'name' ? elem[1] : elem[0];\n    });\n  }\n\n  handExpandClick = attrId =>\n    this.setState({\n      modal: true,\n      modalAttrIndex: attrId\n    });\n\n  render() {\n    let attributes = this.getAttributeNames('name');\n    let len = attributes.length;\n\n    let cards = attributes.map((card, index) => {\n      return (\n        <div>\n          <Card key={index} sm=\"8\">\n            <CardBody>\n              <TimeSeriesView\n                index={index}\n                condition=\"tiny\"\n                id={this.props.id}\n              />\n              <Button\n                className=\"button\"\n                color=\"secondary\"\n                onClick={() => this.handExpandClick(index)}\n              >\n                <Badge>Expand</Badge>\n              </Button>\n            </CardBody>\n          </Card>\n        </div>\n      );\n    });\n\n    if (len === 0) {\n      return (\n        <Container className=\"alert\">\n          {' '}\n          Please select minimum of one attribute{' '}\n        </Container>\n      );\n    } else {\n      return (\n        <Container className=\"GridContainer\">\n          <Normalization />\n          <Row>\n            {cards}\n            <Modal\n              isOpen={this.state.modal}\n              toggle={this.modalToggle}\n              className=\"GridModal\"\n            >\n              <ModalBody>\n                <TimeSeriesView\n                  index={this.state.modalAttrIndex}\n                  condition=\"large\"\n                  id={this.props.id}\n                />\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"secondary\" onClick={this.modalToggle}>\n                  Cancel\n                </Button>\n              </ModalFooter>\n            </Modal>\n          </Row>\n        </Container>\n      );\n    }\n  }\n}\nconst mapState = state => ({\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes\n});\nexport default connect(mapState)(GridTest);\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport '../styles/Home.css';\nimport { Card, CardBody, CardHeader } from 'reactstrap';\n\nimport DisplayComponent from './DisplayComponent';\nimport LeftSideBar from './LeftSideBar';\nimport YearSelector from './YearSelector';\nimport AttributeDeselector from './AttributeDeselector';\nimport Filters from './AttributeRange';\nimport Tabs from './Explore/Tabs';\nimport TimeSeriesGrid from './Explore/TimeSeriesGrid';\n\nconst homeStyle = {\n  paddingTop: 90\n};\n\nclass Home extends Component {\n  render() {\n    return (\n      <Container fluid style={homeStyle}>\n        <Row>\n          <LeftSideBar />\n\n          <div className=\"col-12 col-md-10 align-items-center\">\n            <Card>\n              <div className={'attribute-selector-padding'}>\n                <AttributeDeselector />\n              </div>\n              <Tabs>\n                <div label=\"Table View\">\n                  <DisplayComponent\n                    level={this.props.match.params.level}\n                    id={this.props.match.params.id}\n                  />\n                </div>\n\n                <div label=\"Time Series View\">\n                  <TimeSeriesGrid id={this.props.match.params.id} />\n                </div>\n              </Tabs>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <div>\n                  Selected Location: <b>{this.props.match.params.name}</b>\n                </div>\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col className=\"border-right\">\n                    <Filters\n                      level={this.props.match.params.level}\n                      location={this.props.match.params.name}\n                      locationId={this.props.match.params.id}\n                    />\n                  </Col>\n                  <Col sm=\"2\" xs=\"2\">\n                    <YearSelector />\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </div>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Home;\n","export const updateValue = value => {\n  return {\n    type: 'SEARCHBOX_UPDATE_VALUE',\n    payload: value\n  };\n};\n\nexport const finishLoading = () => {\n  return {\n    type: 'SEARCHBOX_FINISH_LOADING'\n  };\n};\n","import React, { Component } from 'react';\nimport { Container, Row, Col, Spinner, Input } from 'reactstrap';\nimport { get } from 'axios';\nimport Fuse from 'fuse.js';\nimport Autosuggest from 'react-autosuggest';\nimport { Link, withRouter } from 'react-router-dom';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\n\nimport {\n  updateValue,\n  finishLoading\n} from '../../actions/LocationSearchBoxActions';\n\n// TruthTree API endpoints\nconst ENDPOINTS = {\n  STATES: `/api/states`,\n  COUNTIES: `/api/counties`,\n  CITIES: `/api/cities`\n};\n\nconst TYPE_CODE = {\n  0: 'states',\n  1: 'counties',\n  2: 'cities'\n};\n\nconst createFuseOptions = keys => {\n  return {\n    threshold: 0.6,\n    includeScore: true,\n    location: 0,\n    distance: 100,\n    maxPatternLength: 32,\n    minMatchCharLength: 2,\n    keys: keys\n  };\n};\n\nconst renderSuggestionsContainer = ({ containerProps, children }) => {\n  const style = {\n    height: '5em'\n  };\n  return (\n    <div style={style} {...containerProps}>\n      {children}\n    </div>\n  );\n};\n\nconst getSuggestionLabel = suggestion => {\n  let item = suggestion.item;\n  let label = item.name;\n  if (item.typeCode !== 1) {\n    label += item.county ? `, ${item.county}` : '';\n  }\n  label += item.stateAbbr ? `, ${item.stateAbbr}` : '';\n  return label;\n};\n\nconst renderSuggestion = suggestion => {\n  let item = suggestion.item;\n  const url = `/explore/${\n    TYPE_CODE[item.type_code]\n  }/${item.name.toLowerCase().replace(' ', '-')}/${item.id}`;\n  return <Link to={url}>{getSuggestionLabel(suggestion)}</Link>;\n};\n\nclass LocationSearchBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      popoverOpen: false,\n      statesData: undefined,\n      countiesData: undefined,\n      citiesData: undefined,\n      matchedStates: [],\n      matchedCounties: [],\n      matchedCities: [],\n      suggestions: []\n    };\n    this.debouncedhandleSuggestionsFetchRequested = _.debounce(\n      this.handleSuggestionsFetchRequested,\n      250\n    );\n  }\n\n  componentDidMount() {\n    const reqs = [\n      get(ENDPOINTS.STATES),\n      get(ENDPOINTS.COUNTIES),\n      get(ENDPOINTS.CITIES)\n    ];\n\n    Promise.all(reqs)\n      .then(([statesRes, countiesRes, citiesRes]) => {\n        this._parseData(statesRes.data, countiesRes.data, citiesRes.data);\n      })\n      .catch(err => console.log(err));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.value !== prevProps.value) {\n      this.inputRef.focus();\n    }\n  }\n\n  _parseData = (statesData, countiesData, citiesData) => {\n    const statesDataById = statesData.reduce((newStatesData, state) => {\n      newStatesData[state.state_code] = state;\n      state.counties = {};\n      state.type_code = 0;\n      return newStatesData;\n    }, {});\n\n    countiesData.forEach(county => {\n      const state = statesDataById[county.fips_code_state];\n      county.state = state.name;\n      county.stateAbbr = state.abbreviation;\n      state.counties[county.county] = county;\n    });\n\n    citiesData.forEach(city => {\n      const state = statesDataById[city.fips_code_state];\n      const county = state.counties[city.county];\n\n      if (state) {\n        city.state = state.name;\n        city.stateAbbr = state.abbreviation;\n      } else {\n        city.state = null;\n        city.stateAbbr = null;\n      }\n      city.county = county ? county.name : null;\n    });\n\n    const statesFuseOptions = createFuseOptions([\n      { name: 'abbreviation', weight: 0.3 },\n      { name: 'name', weight: 0.7 }\n    ]);\n\n    const countiesFuseOptions = createFuseOptions([\n      { name: 'name', weight: 0.6 },\n      { name: 'state', weight: 0.3 },\n      { name: 'stateAbbr', weight: 0.1 }\n    ]);\n\n    const citiesFuseOptions = createFuseOptions([\n      { name: 'name', weight: 0.7 },\n      { name: 'state', weight: 0.2 },\n      { name: 'stateAbbr', weight: 0.05 },\n      { name: 'county', weight: 0.05 }\n    ]);\n\n    this.setState(\n      {\n        statesData: new Fuse(statesData, statesFuseOptions),\n        countiesData: new Fuse(countiesData, countiesFuseOptions),\n        citiesData: new Fuse(citiesData, citiesFuseOptions)\n      },\n      () => {\n        this.props.dispatch(finishLoading());\n      }\n    );\n  };\n\n  storeInputRef = searchBox => {\n    if (searchBox !== null) {\n      this.input = searchBox.input;\n    }\n  };\n\n  handleInputChange = (_, { newValue }) => {\n    this.props.dispatch(updateValue(newValue));\n  };\n\n  handleSuggestionsFetchRequested = ({ value }) => {\n    const searchPhrase = value;\n    const matchedStates = this.state.statesData.search(searchPhrase);\n    const matchedCounties = this.state.countiesData.search(searchPhrase);\n    const matchedCities = this.state.citiesData.search(searchPhrase);\n    const temp = [].concat(matchedStates, matchedCounties, matchedCities);\n    temp.sort((a, b) => a.score - b.score);\n    this.setState({\n      suggestions: temp.slice(0, 10)\n    });\n  };\n  renderInputComponent = inputProps => (\n    <div>\n      <Input\n        {...inputProps}\n        id=\"location-search-box\"\n        name=\"location-search-box\"\n        placeholder=\"Try something like Seattle or Boston\"\n        innerRef={input => {\n          this.inputRef = input;\n        }}\n      />\n    </div>\n  );\n\n  render() {\n    const { loading, value } = this.props;\n\n    const inputProps = {\n      value,\n      onChange: this.handleInputChange\n    };\n\n    return (\n      <Container>\n        <Row>\n          {loading ? (\n            <Col className=\"d-flex justify-content-center\">\n              <Spinner className=\"align-self-center\" color=\"primary\" />\n            </Col>\n          ) : (\n            <Col>\n              <Autosuggest\n                ref={this.storeInputRef}\n                theme={{\n                  container: 'position-relative',\n                  suggestionsList:\n                    'list-group position-absolute w-100 overflow-y',\n                  suggestion: 'list-group-item'\n                }}\n                suggestions={this.state.suggestions}\n                alwaysRenderSuggestions\n                onSuggestionsClearRequested={() =>\n                  this.setState({ suggestions: [] })\n                }\n                onSuggestionsFetchRequested={\n                  this.debouncedhandleSuggestionsFetchRequested\n                }\n                getSuggestionValue={getSuggestionLabel}\n                renderInputComponent={this.renderInputComponent}\n                renderSuggestionsContainer={renderSuggestionsContainer}\n                renderSuggestion={renderSuggestion}\n                inputProps={inputProps}\n              />\n            </Col>\n          )}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  value: store.LocationSearchBoxReducer.value,\n  loading: store.LocationSearchBoxReducer.loading\n});\n\nexport default connect(mapStateToProps)(withRouter(LocationSearchBox));\n","import React, { Component } from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Collapse,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavItem,\n  NavLink,\n  NavbarToggler\n} from 'reactstrap';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport LocationSearchBox from './Explore/LocationSearchBox';\n\nimport '../styles/Header.css';\nimport logo from '../truthtree-logo.png';\n\nconst navbarStyle = {\n  backgroundColor: 'rgba(13, 22, 38, 0.8)'\n};\n\nconst navBrandStyle = {\n  '&:hover': {\n    textDecoration: 'none'\n  }\n};\n\nconst logoStyle = {\n  width: 50\n};\n\nclass Header extends Component {\n  state = {\n    collapseOpen: false\n  };\n\n  render() {\n    const { searchPhrase } = this.props;\n    const searchBoxContainerClasses = classNames({\n      'justify-content-center': true,\n      'd-none': searchPhrase === ''\n    });\n    return (\n      <Navbar style={navbarStyle} expand=\"md\" className=\"fixed-top\">\n        <NavbarBrand className=\"text-primary\" style={navBrandStyle}>\n          <Link to=\"/\">\n            <img\n              src={logo}\n              style={logoStyle}\n              className=\"d-inline-block\"\n              alt=\"TruthTree logo\"\n            />\n          </Link>\n          &nbsp;TruthTree\n        </NavbarBrand>\n        <NavbarToggler\n          onClick={() =>\n            this.setState({ collapseOpen: !this.state.collapseOpen })\n          }\n        />\n        <Collapse isOpen={this.state.collapseOpen} navbar>\n          <Container>\n            <Row className={searchBoxContainerClasses}>\n              <Col md={10} lg={7}>\n                <LocationSearchBox />\n              </Col>\n            </Row>\n          </Container>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink tag={Link} to=\"/\">\n                Explore\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to=\"/about\">\n                About\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  searchPhrase: store.LocationSearchBoxReducer.value\n});\n\nexport default withRouter(connect(mapStateToProps)(Header));\n","import React, { Component } from 'react';\nimport { Container, Jumbotron } from 'reactstrap';\nimport '../../styles/About.css';\n\nconst aboutStyle = {\n  paddingTop: 70\n};\n\nclass About extends Component {\n  render() {\n    return (\n      <Container fluid style={aboutStyle} className=\"about\">\n        <Jumbotron className=\"float-center\">\n          <h1 className=\"text-primary\">TruthTree</h1>\n          <p>A Public Data Vizipedia/Wiki-Laboratory</p>\n          <hr className=\"my-2\" />\n          <p className=\"lead\">\n            TruthTree seeks to unite all the public data in the world into a\n            data-visualization tool and reference platform that can facilitate\n            data-driven understanding and consensus regarding geography,\n            politics, and culture for geographical entities at all scales.\n          </p>\n          <p className=\"lead\" />\n        </Jumbotron>\n      </Container>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n\nimport mapStyles from './mapStyles.json';\n\nconst mapContainerStyle = {\n  height: '100%',\n  width: '100%'\n};\n\nclass Map extends Component {\n  state = {\n    center: {\n      lat: 37.09024,\n      lng: -95.712891\n    },\n    zoom: 5\n  };\n\n  handleApiLoaded = (map, maps) => {\n    map.setOptions({\n      styles: mapStyles,\n      fullscreenControlOptions: {\n        position: maps.ControlPosition.BOTTOM_RIGHT\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div style={mapContainerStyle} className=\"position-absolute\">\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: 'AIzaSyD6S0fXIE22l64bV3nhv-EB-7K1gh39nqs' }}\n          defaultCenter={this.state.center}\n          defaultZoom={this.state.zoom}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({ map, maps }) => this.handleApiLoaded(map, maps)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Map;\n","import React, { Component } from 'react';\nimport { Container, Row, Col, Label, Input, Spinner } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { updateValue } from '../../actions/LocationSearchBoxActions';\n\nclass DummySearchBox extends Component {\n  handleInputChange = event => {\n    event.target.blur();\n    this.props.dispatch(updateValue(event.target.value));\n  };\n\n  render() {\n    const { value, loading } = this.props;\n    return (\n      <Container>\n        <Row className=\"py-3\">\n          {loading ? (\n            <Col className=\"d-flex justify-content-center\">\n              <Spinner className=\"align-self-center\" color=\"primary\" />\n            </Col>\n          ) : (\n            <Col>\n              <Label\n                style={{ cursor: 'pointer', color: 'white' }}\n                for=\"dummy-search-box\"\n              >\n                Search for a U.S location:\n              </Label>\n              <Input\n                id=\"dummy-search-box\"\n                value={value}\n                onChange={this.handleInputChange}\n                placeholder=\"Try something like Seattle or Boston\"\n              />\n            </Col>\n          )}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  value: store.LocationSearchBoxReducer.value,\n  loading: store.LocationSearchBoxReducer.loading\n});\n\nexport default connect(mapStateToProps)(DummySearchBox);\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport Typist from 'react-typist';\nimport { Link } from 'react-router-dom';\n\nconst introHeadingStyle = {\n  color: 'white'\n};\n\nclass IntroHeading extends Component {\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col style={introHeadingStyle}>\n            <h1 className=\"text-primary\">Welcome to TruthTree</h1>\n            <Typist avgTypingDelay={20} cursor={{ hideWhenDone: true }}>\n              We're an open source data visualization project that focuses on\n              U.S government financial spending. &nbsp;\n              <Link to=\"/about\">Find out more</Link>\n            </Typist>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default IntroHeading;\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport DummySearchBox from './DummySearchBox';\nimport IntroHeading from './IntroHeading';\n\nconst introContainerStyle = {\n  marginBottom: '12em',\n  backgroundColor: 'rgba(13, 22, 38, 0.7)'\n};\n\nclass Intro extends Component {\n  render() {\n    const { searchPhrase } = this.props;\n    const introContainerClasses = classNames({\n      'd-none': searchPhrase !== ''\n    });\n    return (\n      <Container className={introContainerClasses}>\n        <Row>\n          <Col\n            style={introContainerStyle}\n            xs={12}\n            sm={11}\n            md={9}\n            lg={6}\n            className=\"py-3 px-4\"\n          >\n            <IntroHeading />\n            <DummySearchBox />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  searchPhrase: store.LocationSearchBoxReducer.value\n});\n\nexport default connect(mapStateToProps)(Intro);\n","import React, { Component } from 'react';\n\nimport Map from './Map';\nimport Intro from './Intro';\n\nconst exploreStyle = {\n  flex: '1 1 100%'\n};\n\nclass Explore extends Component {\n  render() {\n    return (\n      <div\n        style={exploreStyle}\n        className=\"d-flex align-items-center position-relative\"\n      >\n        <Map />\n        <Intro />\n      </div>\n    );\n  }\n}\n\nexport default Explore;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Explore from './components/Explore';\n\nimport './App.css';\nimport './styles/Tab.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"d-flex flex-column\">\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={Explore} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/explore/:level/:name/:id\" component={Home} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-typist/dist/Typist.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/RootReducer';\nexport default function configureStore() {\n  return createStore(rootReducer, applyMiddleware(thunk));\n}\n"],"sourceRoot":""}