{"version":3,"sources":["constants.js","truthtree-logo.png","reducers/LocationSearchBoxReducer.js","reducers/TrendingStoriesReducer.js","reducers/AdminStoriesReducer.js","reducers/SimilarLocationsReducer.js","reducers/RootReducer.js","reducers/FilterByReducer.js","reducers/AttributeRangeReducer.js","reducers/SelectedAttributeReducer.js","reducers/YearSelectorReducer.js","reducers/NormalizationReducer.js","reducers/CommonAttributesReducer.js","reducers/SideMenuReducer.js","components/YearSelector.js","components/Explore/Normalization.js","components/DisplayComponent.js","components/LeftSideBar.js","components/Advance/SimilarPlacesSearch.js","components/AttributeDeselector.js","components/AttributeRange.js","components/Explore/Tab.js","components/Explore/Tabs.js","components/Explore/TimeSeriesChart.js","components/Explore/TimeSeriesView.js","components/Explore/TimeSeriesGrid.js","components/Home.js","actions/LocationSearchBoxActions.js","components/Explore/common.js","components/Explore/LocationSearchBox.js","actions/SideMenuActions.js","components/Header.js","components/About/index.js","components/Explore/Map.js","components/Explore/DummySearchBox.js","components/Explore/IntroHeading.js","components/Explore/Intro.js","components/Explore/index.js","components/Stories/TrendingStoryDetail.js","components/Stories/TrendingStories.js","components/Stories/index.js","components/Admin/PendingApprovalStories.js","components/Admin/StoryDetails.js","components/Admin/AdminHome.js","components/Admin/index.js","components/Stories/StoryCreationForm/TagInput.js","components/Stories/StoryCreationForm/index.js","components/SideMenu.js","components/Advance/CommonAttributes.js","components/Advance/USAMap.js","components/Advance/SimilarPlacesResponse.js","actions/SimilarLocationsActions.js","actions/CommonAttributesActions.js","components/Advance/index.js","App.js","serviceWorker.js","index.js","store.js"],"names":["module","exports","TRUTHTREE_URI","__webpack_require__","p","defaultState","value","loading","suggestions","selected","approvedStories","approvedStoriesLength","color","userSelectedStory","adminStories","adminStoriesLength","bgColor","adminSelectedStory","locations","combineReducers","FilterByReducer","state","arguments","length","undefined","dimension","action","type","Object","objectSpread","AttributeRangeReducer","attributeName","populationRange","SelectedAttributeReducer","sidebarData","selectedAttributes","Array","from","YearSelectorReducer","yearSelected","LocationSearchBoxReducer","payload","NormalizationReducer","selectedNormalizationDisplayName","selectedNormalizationName","TrendingStoriesReducer","CommonAttributesReducer","newAttributes","selectedAttribute","AdminStoriesReducer","SideMenuReducer","isOpen","SimilarLocationsReducer","Normalization","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dropdownOpen","normalizationValues","normalizationValuesCall","bind","assertThisInitialized","toggle","setSelectedNormalization","setState","prevState","e","dispatch","target","id","_this2","axios","get","concat","then","response","data","catch","error","console","log","_this3","values","map","i","react_default","a","createElement","DropdownItem","key","name","displayValue","onClick","Dropdown","DropdownToggle","caret","DropdownMenu","Component","connect","DisplayComponent","currentPopulation","currentLevel","selectedData","locationIds","year","populationRangeCall","getFormattedName","attributeCall","colFormatter","nextProps","normalizationKeys","currentRows","_","pickBy","keys","attributes","flatMap","elem","row","location_id","attribute_id","per_capita","by_revenue","cell","toLowerCase","location","replace","capitalize","_this4","minPopulation","maxPopulation","population","confirmAlert","title","message","buttons","label","Math","floor","level","obj","1","link","href","rel","toLocaleString","_this5","columns","dataField","text","hidden","formatter","sort","column","index","push","toString","currentRow","currentValue","ExportCSVButton","CSVExport","Explore_Normalization","react_bootstrap_table2_toolkit_lib_default","keyField","exportCSV","assign","className","csvProps","lib_default","hover","striped","baseProps","LeftSideBar","isAttributeSelected","handleClickCollection","collection","defineProperty","handleChangeSearch","event","searchString","searchedString","renderSearchTerm","search","attr","isLoaded","collapsedLeft","match","params","attribute","newArr","_loop","remove","v","_ret","window","innerWidth","collapseLeftBar","style","data-spy","data-offset-top","onChange","placeholder","display","handleClickAttribute","background","withRouter","dropdownMenuStyle","height","overflow","allYears","YearSelector","yearArray","AttributeDeselector","selectedAttribtes","Row","Col","xs","deselectAttribute","paddingRight","Range","Slider","marks","-50","-40","-30","-20","-10","0","10","20","30","40","50","AttributeRange","onSliderChange","locationPopulation","min","max","url","locationId","locPop","res","err","createSliders","currentAttribute","dots","step","Tab","_this$props","_this$props2","activeTab","Tabs","onClickTabItem","tab","children","child","Explore_Tab","TimeSeries","condition","padding","Badge","collectionName","LineChart","width","margin","top","right","bottom","left","CartesianGrid","stroke","strokeDasharray","XAxis","dataKey","position","YAxis","angle","Tooltip","Legend","verticalAlign","iconSize","Line","isAnimationActive","TimeSeriesView","locationData","dataReal","lineColors","fetchResponse","formatResponse","initializeYearMap","fetchLocations","toInteger","updateLocation","selectedNormalization","dataForEachLocation","locationName","attributesForEachLocation","attrValue","val","da","userSelectedLocations","includes","select","yearArr","yearEntry","len","Spinner","size","attrData","TimeSeriesChart","GridTest","ImageCapture","newRef","refs","image","fileName","attrId","domtoimage","toJpeg","quality","dataUrl","document","download","click","downloadAsZip","imageCount","zip","JSZip","imageRefs","refslist","imgfold","folder","eachUrl","split","file","base64","generateAsync","content","URL","createObjectURL","handExpandClick","modal","modalAttrIndex","imageUrls","modalToggle","renderLocationList","selectLocations","defaultLocations","slice","clickedLocation","parseInt","filter","locationlist","sm","checked","htmlFor","getAttributeNames","cards","card","ref","Card","CardBody","Explore_TimeSeriesView","generateUrl","Button","Container","Modal","ModalBody","ModalFooter","homeStyle","paddingTop","Home","openStory","fluid","components_LeftSideBar","components_AttributeDeselector","Explore_Tabs","components_DisplayComponent","TimeSeriesGrid","CardHeader","components_AttributeRange","components_YearSelector","updateValue","updateSuggestions","selectSuggestion","suggestion","TYPE_CODE","2","getSuggestionLabel","parent","getSuggestionUrl","typeCode","ENDPOINT","searchBoxStyle","zIndex","renderSuggestion","clickable","Link","to","LocationSearchBox","handleInputChange","_ref","newValue","handleSuggestionSelected","_ref2","displayTextValue","handleSuggestionsFetchRequested","_ref3","post","renderInputComponent","inputProps","InputGroup","Input","innerRef","input","inputRef","InputGroupAddon","addonType","debouncedhandleSuggestionsFetchRequested","debounce","selectedLocation","prevProps","focus","dist_default","theme","container","suggestionsList","onSuggestionsFetchRequested","onSuggestionSelected","onSuggestionsClearRequested","getSuggestionValue","store","closeSideMenu","navbarStyle","backgroundColor","navBrandStyle","&:hover","textDecoration","logoStyle","searchBoxContainerStyle","maxWidth","Header","collapseOpen","shouldShowSearchBox","searchPhrase","pathname","searchBoxContainerClasses","classNames","flex-grow-1","d-none","Navbar","expand","NavbarBrand","src","logo","alt","NavbarToggler","Collapse","navbar","Explore_LocationSearchBox","Nav","NavItem","NavLink","tag","block","aboutStyle","About","Jumbotron","mapContainerStyle","Map","center","lat","lng","zoom","markers","renderMarkers","maps","setMarkersMap","marker","Marker","latitude","longitude","animation","Animation","DROP","infowindow","InfoWindow","open","addListener","history","forEach","setMap","handleApiLoaded","setOptions","styles","mapStyles","fullscreenControlOptions","ControlPosition","BOTTOM_RIGHT","isEqual","google_map_react_lib_default","bootstrapURLKeys","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","DummySearchBox","blur","Label","cursor","for","introHeadingStyle","IntroHeading","Typist_default","avgTypingDelay","hideWhenDone","introContainerStyle","marginBottom","Intro","introContainerClasses","md","lg","Explore_IntroHeading","Explore_DummySearchBox","exploreStyle","flex","Explore","Explore_Map","Explore_Intro","TrendingStoryDetail","handleUpVoteClick","handleDownVoteClick","ReactHtmlParser","story","checkCondition","localStorage","getItem","JSON","stringify","method","headers","Content-Type","arr","indexOfId","findIndex","splice","keyDown","setItem","Alert","Media","body","heading","marginTop","tags","contentHtml","author","upvote","downvote","TrendingStories","searchBoxText","submitSearch","getStoryDetails","selectStory","searchedTags","InitialData","sortBy","o","reverse","truncate","admin","Stories","Stories_TrendingStories","Stories_TrendingStoryDetail","PendingApprovalStories","StoryDetails","handleApprove","handleDecline","idNow","put","result","status","delete","handleDelete","AdminHome","Admin_PendingApprovalStories","Admin_StoryDetails","Approve","validatePassword","password","React","createRef","isFirstLoad","isAuthenticated","self","current","FormGroup","paddingLeft","Admin_AdminHome","TagInput","inputValue","tagsWithLabels","onInputChange","onKeyDown","Creatable_default","components","DropdownIndicator","isClearable","isMulti","menuIsOpen","initialState","featureEnabled","isSubmitting","isHuman","shouldShowCaptchaError","shouldShowAuthorFieldError","authorFieldValue","titleFieldValue","shouldShowTitleFieldError","tagFieldValue","bodyFieldValue","bodyFieldTextOnly","shouldShowBodyFieldError","createOption","StoryCreationForm","modules","toolbar","header","list","indent","handleChangeAuthor","handleChangeTitle","handleTagFieldInputChange","handleTagsChange","handleTagFieldKeyDown","_this$state","some","newTagsWithLabels","toConsumableArray","preventDefault","handleChangeStory","delta","source","editor","getText","handleDiscard","recaptchaInstance","reset","submitForm","_this$state2","field","rawContent","_this$state3","invalid","FormFeedback","StoryCreationForm_TagInput","react_quill_lib_default","react_recaptcha_default","sitekey","render","verifyCallback","SideMenu","windowWidth","updateWindowWidth","handleStateChange","addEventListener","removeEventListener","BurgerMenu","customBurgerIcon","onStateChange","Stories_StoryCreationForm","CommonAttributes","handleChangeAttribute","allValues","getAttributes","addAttributes","displayName","display_name","valuesSorted","react_select_esm","options","USAMap","markerClicked","SimilarLocationsList","ListGroup","idx","ListGroupItem","SimilarPlacesResponse","Advance_USAMap","SimilarPlacesResponse_SimilarLocationsList","normalizationList","colors","initialValues","numberOfLocations","normalization","yearSelectedMin","yearSelectedMax","similarLocations","shouldShowLocationError","shouldShowNormalizationError","shouldShowSelectedAttributesError","shouldShowYearMinError","shouldShowYearMaxError","shouldShowYearRangeError","SimilarPlacesSearch","handleChangeNumber","handleChangeNormalization","handleChangeYearMin","handleChangeYearMax","findSimilarLocations","validateInputs","place_type","normalizationType","resp","Form","Advance_CommonAttributes","renderYearInput","Advance_SimilarPlacesResponse","Advance","Advance_SimilarPlacesSearch","App","BrowserRouter","components_Header","components_SideMenu","Switch","Route","exact","path","component","Admin","Boolean","hostname","ReactDOM","es","createStore","rootReducer","applyMiddleware","thunk","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.10788799.chunk.js","sourcesContent":["const TRUTHTREE_URI = 'https://truthtree.herokuapp.com';\nmodule.exports = {\n  TRUTHTREE_URI\n};\n","module.exports = __webpack_public_path__ + \"static/media/truthtree-logo.75b56fb9.png\";","const defaultState = {\n  value: '',\n  loading: false,\n  suggestions: [],\n  selected: null\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SEARCHBOX_UPDATE_VALUE':\n      return {\n        ...state,\n        value: action.payload,\n        suggestions: action.payload === '' ? [] : state.suggestions\n      };\n\n    case 'SEARCHBOX_UPDATE_SUGGESTIONS':\n      return {\n        ...state,\n        suggestions: state.value === '' ? [] : action.payload\n      };\n\n    case 'SEARCHBOX_SELECT_SUGGESTION':\n      return {\n        ...state,\n        selected: action.payload\n      };\n\n    case 'SEARCHBOX_FINISH_LOADING':\n      return {\n        ...state,\n        loading: false\n      };\n\n    case 'EMPTY_LOCATIONS':\n      return {\n        value: '',\n        loading: false,\n        suggestions: [],\n        selected: null\n      };\n\n    default:\n      return state;\n  }\n};\n","const defaultState = {\n  approvedStories: [],\n  approvedStoriesLength: 0,\n  color: [],\n  loading: true,\n  userSelectedStory: 'none'\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case 'APPROVED_STORIES_LIST':\n      state = {\n        ...state,\n        approvedStories: action.approvedStories,\n        approvedStoriesLength: action.approvedStoriesLength,\n        color: action.color,\n        userSelectedStory: action.userSelectedStory,\n        loading: action.loading\n      };\n      break;\n    case 'USER_SELECTED_STORY':\n      state = {\n        ...state,\n        approvedStories: action.approvedStories,\n        approvedStoriesLength: action.approvedStoriesLength,\n        color: action.color,\n        userSelectedStory: action.userSelectedStory,\n        loading: action.loading\n      };\n      break;\n    default:\n      return state;\n  }\n\n  return state;\n};\n","const defaultState = {\n  adminStories: [],\n  adminStoriesLength: 0,\n  bgColor: [],\n  loading: true,\n  adminSelectedStory: 'none'\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case 'STORIES_LIST':\n      state = {\n        ...state,\n        adminStories: action.adminStories,\n        adminStoriesLength: action.adminStoriesLength,\n        bgColor: action.bgColor,\n        adminSelectedStory: action.adminSelectedStory,\n        loading: action.loading\n      };\n      break;\n    case 'ADMIN_SELECTED_STORY':\n      state = {\n        ...state,\n        adminStories: action.adminStories,\n        adminStoriesLength: action.adminStoriesLength,\n        bgColor: action.bgColor,\n        adminSelectedStory: action.adminSelectedStory,\n        loading: action.loading\n      };\n      break;\n    default:\n      return state;\n  }\n\n  return state;\n};\n","const defaultState = {\n  locations: []\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case 'UPDATE_SIMILAR_LOCATIONS':\n      return {\n        ...state,\n        locations: action.locations\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport AttributeRangeReducer from './AttributeRangeReducer';\nimport FilterByReducer from './FilterByReducer';\nimport SelectedAttributeReducer from './SelectedAttributeReducer';\nimport YearSelectorReducer from './YearSelectorReducer';\nimport LocationSearchBoxReducer from './LocationSearchBoxReducer';\nimport NormalizationReducer from './NormalizationReducer';\nimport TrendingStoriesReducer from './TrendingStoriesReducer';\nimport CommonAttributesReducer from './CommonAttributesReducer';\nimport AdminStoriesReducer from './AdminStoriesReducer';\nimport SideMenuReducer from './SideMenuReducer';\nimport SimilarLocationsReducer from './SimilarLocationsReducer';\n\nexport default combineReducers({\n  FilterByReducer,\n  AttributeRangeReducer,\n  SelectedAttributeReducer,\n  YearSelectorReducer,\n  LocationSearchBoxReducer,\n  NormalizationReducer,\n  TrendingStoriesReducer,\n  CommonAttributesReducer,\n  AdminStoriesReducer,\n  SideMenuReducer,\n  SimilarLocationsReducer\n});\n","export default (state = { dimension: 'State' }, action) => {\n  switch (action.type) {\n    case 'CHANGE_DIMENSION':\n      return {\n        ...state,\n        dimension: action.value\n      };\n    default:\n      return state;\n  }\n};\n","export default (\n  state = {\n    attributeName: ['Population'],\n    populationRange: [-25, 25]\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'RANGE_SELECTION':\n      return {\n        ...state,\n        populationRange: action.populationRange\n      };\n    default:\n      return state;\n  }\n};\n","export default (\n  state = {\n    sidebarData: [],\n    selectedAttributes: []\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'CHANGE_ATTRIBUTE':\n      return {\n        ...state,\n        selectedAttributes: Array.from(action.value)\n      };\n    default:\n      return state;\n  }\n};\n","export default (state = { yearSelected: 2016 }, action) => {\n  switch (action.type) {\n    case 'CHANGE_YEAR':\n      state = {\n        ...state,\n        yearSelected: action.yearSelected\n      };\n      break;\n    default:\n      return state;\n  }\n  return state;\n};\n","export default (\n  state = {\n    selectedNormalizationDisplayName: 'Gross',\n    selectedNormalizationName: 'GROSS'\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'CHANGE_NORMALIZATION':\n      state = {\n        ...state,\n        selectedNormalizationName: action.selectedNormalizationName,\n        selectedNormalizationDisplayName:\n          action.selectedNormalizationDisplayName\n      };\n      break;\n    default:\n      return state;\n  }\n  return state;\n};\n","export default (\n  state = {\n    selectedAttributes: []\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'ADD_ATTRIBUTES':\n      let newAttributes = state.selectedAttributes;\n      newAttributes = action.selectedAttribute;\n      state = {\n        ...state,\n        selectedAttributes: newAttributes\n      };\n      break;\n    case 'EMPTY_ATTRIBUTES_LIST':\n      state = {\n        selectedAttributes: []\n      };\n      break;\n    default:\n      return state;\n  }\n  return state;\n};\n","export default (state = { isOpen: false }, action) => {\n  switch (action.type) {\n    case 'SIDEMENU_OPEN':\n      return {\n        isOpen: true\n      };\n\n    case 'SIDEMENU_CLOSE':\n      return {\n        isOpen: false\n      };\n\n    case 'SIDEMENU_TOGGLE':\n      return {\n        isOpen: !state.isOpen\n      };\n\n    case 'SIDEMENU_SET_STATE':\n      return {\n        isOpen: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n","import React, { Component } from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\nimport { connect } from 'react-redux';\n\nconst dropdownMenuStyle = {\n  height: '200px',\n  overflow: 'auto'\n};\nconst mobileStyle = 800;\n\nlet allYears = [];\nfor (let i = 1966; i < 2016; i++) {\n  allYears.push(i + 1);\n}\n\nclass YearSelector extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      dropdownOpen: false,\n      yearSelected: '2016'\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  onClick(e) {\n    //this.setState({ yearSelected: e.target.id });\n    this.props.dispatch({\n      type: 'CHANGE_YEAR',\n      yearSelected: e.target.id\n    });\n  }\n\n  render() {\n    let yearArray = allYears.map((year, i) => (\n      <DropdownItem key={i} id={year} onClick={this.onClick}>\n        {year}\n      </DropdownItem>\n    ));\n\n    return (\n      <div>\n        {window.innerWidth > mobileStyle && (\n          <p>Select year of data to be displayed:</p>\n        )}\n\n        <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n          <DropdownToggle caret>{this.props.yearSelected}</DropdownToggle>\n          <DropdownMenu style={dropdownMenuStyle}>{yearArray}</DropdownMenu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    yearSelected: state.YearSelectorReducer.yearSelected\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(YearSelector);\n","import React, { Component } from 'react';\n\nimport '../../styles/Header.css';\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle\n} from 'reactstrap';\nimport axios from 'axios/index';\nimport { connect } from 'react-redux';\n\nimport { TRUTHTREE_URI } from '../../constants';\n\nclass Normalization extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownOpen: false,\n      selectedNormalizationDisplayName: 'Gross',\n      selectedNormalizationName: 'GROSS',\n      normalizationValues: []\n    };\n    this.normalizationValuesCall = this.normalizationValuesCall.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.setSelectedNormalization = this.setSelectedNormalization.bind(this);\n  }\n\n  componentDidMount() {\n    this.normalizationValuesCall();\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  setSelectedNormalization(e) {\n    //console.log(e.target.id);\n    //this.setState({selectedNormalizationDisplayName: e.target.value});\n    //this.setState({selectedNormalizationName: e.target.id});\n    this.props.dispatch({\n      type: 'CHANGE_NORMALIZATION',\n      selectedNormalizationName: e.target.id,\n      selectedNormalizationDisplayName: e.target.value\n    });\n  }\n\n  normalizationValuesCall() {\n    axios\n      .get(`${TRUTHTREE_URI}/api/normalization_types`)\n      .then(response => {\n        this.setState({ normalizationValues: response.data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    let values = this.state.normalizationValues.map((value, i) => (\n      <DropdownItem\n        key={i}\n        id={value.name}\n        value={value.displayValue}\n        onClick={this.setSelectedNormalization}\n      >\n        {value.displayValue}\n      </DropdownItem>\n    ));\n\n    return (\n      <div id=\"normalisation\">\n        Normalization attribute:\n        <Dropdown\n          id=\"dropdown\"\n          isOpen={this.state.dropdownOpen}\n          toggle={this.toggle}\n        >\n          <DropdownToggle caret>\n            {' '}\n            {this.props.selectedNormalizationDisplayName}{' '}\n          </DropdownToggle>\n          <DropdownMenu>{values}</DropdownMenu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    selectedNormalizationName:\n      state.NormalizationReducer.selectedNormalizationName,\n    selectedNormalizationDisplayName:\n      state.NormalizationReducer.selectedNormalizationDisplayName\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Normalization);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios/index';\nimport _ from 'lodash';\nimport '../styles/DisplayComponent.css';\nimport { TRUTHTREE_URI } from '../constants';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\n\nimport Normalization from './Explore/Normalization';\nimport { confirmAlert } from 'react-confirm-alert';\n\nclass DisplayComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPopulation: 0,\n      currentLevel: null,\n      data: {},\n      selectedData: {},\n      locationIds: [],\n      selectedAttributes: [],\n      year: 2016,\n      selectedNormalizationName: 'GROSS',\n      populationRange: [-25, 25]\n    };\n    this.populationRangeCall = this.populationRangeCall.bind(this);\n    this.getFormattedName = this.getFormattedName.bind(this);\n    this.attributeCall = this.attributeCall.bind(this);\n    this.colFormatter = this.colFormatter.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      selectedAttributes: nextProps.selectedAttributes,\n      year: nextProps.year,\n      selectedNormalizationName: nextProps.selectedNormalizationName,\n      populationRange: nextProps.populationRange,\n      normalizationKeys: nextProps.normalizationKeys\n    });\n    let currentRows = _.pickBy(this.state.data, e => {\n      return (\n        e['1'] <=\n          this.state.currentPopulation +\n            (nextProps.populationRange[1] / 100) *\n              this.state.currentPopulation &&\n        e['1'] >=\n          this.state.currentPopulation +\n            (nextProps.populationRange[0] / 100) * this.state.currentPopulation\n      );\n    });\n    this.setState({\n      selectedData: currentRows,\n      locationIds: _.keys(currentRows)\n    });\n    // this.setState({ locationIds: _.keys(currentRows) });\n    let attributes = _.flatMap(nextProps.selectedAttributes, elem => {\n      return elem[0];\n    });\n    if (attributes.length > 0) {\n      this.attributeCall(_.keys(currentRows), attributes, nextProps);\n    }\n  }\n\n  attributeCall(locationIds, attributes, nextProps) {\n    let year = nextProps.year ? nextProps.year : 2016;\n    axios\n      .get(\n        '/api/attributes?locationIds=' +\n          locationIds +\n          '&attributeIds=' +\n          attributes +\n          '&normalizationType=' +\n          nextProps.selectedNormalizationName +\n          '&yearList=' +\n          year\n      )\n      .then(response => {\n        let data = this.state.selectedData;\n        _.map(response.data, row => {\n          _.map(row.attributes, elem => {\n            data[row.location_id][elem.attribute_id] =\n              nextProps.selectedNormalizationName === 'PER_CAPITA'\n                ? elem.data[0].per_capita\n                : nextProps.selectedNormalizationName === 'BY_REVENUE'\n                ? elem.data[0].by_revenue\n                : elem.data[0].value;\n          });\n        });\n        this.setState({ selectedData: data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: {},\n      selectedAttributes: this.props.selectedAttributes,\n      year: this.props.yearSelected,\n      selectedNormalizationName: this.props.selectedNormalizationName,\n      populationRange: this.props.populationRange\n    });\n    this.populationRangeCall();\n  }\n\n  getFormattedName(cell) {\n    if (cell.toLowerCase() === this.props.location.replace(/-/g, ' ')) {\n      return <b>{_.capitalize(cell)}</b>;\n    } else {\n      return _.capitalize(cell);\n    }\n  }\n\n  populationRangeCall() {\n    let minPopulation = 0;\n    let maxPopulation = 0;\n    let data = {};\n    let population = 0;\n    let year = this.state.year ? this.state.year : 2016;\n    // Calculate min and max population\n    axios\n      .get(\n        `${TRUTHTREE_URI}/api/population?locationId=` +\n          this.props.id +\n          '&year=' +\n          year\n      )\n      .then(response => {\n        population = response.data.population;\n        if (!population) {\n          confirmAlert({\n            title: 'Oops!',\n            message:\n              'The location you have selected does not seem to have data. Please go back and chose another location.',\n            buttons: [\n              {\n                label: 'OK'\n              }\n            ]\n          });\n        }\n        this.setState({ currentPopulation: population });\n        maxPopulation = Math.floor(population + 0.5 * population);\n        minPopulation = Math.floor(population - 0.5 * population);\n        return axios\n          .get(\n            `${TRUTHTREE_URI}/api/${this.props.level}?populationRange=` +\n              minPopulation +\n              ',' +\n              maxPopulation\n          )\n          .then(response => {\n            _.map(response.data, obj => {\n              data[obj.id] = { name: obj.name, '1': obj.population };\n            });\n            this.setState({ data: data });\n            let currentRows = _.pickBy(this.state.data, e => {\n              return (\n                e['1'] <=\n                  population +\n                    (this.state.populationRange[1] / 100) * population &&\n                e['1'] >=\n                  population +\n                    (this.state.populationRange[0] / 100) * population\n              );\n            });\n            this.setState({ selectedData: currentRows });\n            this.setState({\n              locationIds: _.keys(currentRows)\n            });\n            if (this.props.selectedAttributes) {\n              let attributes = _.flatMap(\n                this.props.selectedAttributes,\n                elem => {\n                  return elem[0];\n                }\n              );\n              this.attributeCall(_.keys(currentRows), attributes, this.state);\n            }\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  colFormatter(cell, row) {\n    let link =\n      'https://www.google.com/search?q=' +\n      row[0] +\n      '+' +\n      this.state.selectedAttributes[0][2] +\n      ' ' +\n      this.state.selectedAttributes[0][1];\n    return (\n      <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n        {cell.toLocaleString()}\n      </a>\n    );\n  }\n\n  render() {\n    var columns = [\n      {\n        dataField: 'id',\n        text: 'Id',\n        hidden: true\n      },\n      {\n        dataField: '0',\n        text: 'Name',\n        formatter: this.getFormattedName\n      },\n      {\n        dataField: '1',\n        text: 'Population',\n        sort: true\n      }\n    ];\n    this.state.selectedAttributes.map((column, index) => {\n      columns.push({\n        dataField: (index + 2).toString(),\n        text: column[1],\n        sort: true,\n        formatter: this.colFormatter\n      });\n    });\n    var data = [];\n    _.values(this.state.selectedData).map((row, i) => {\n      var currentRow = {};\n      currentRow['id'] = this.state.locationIds[i];\n      currentRow['0'] = _.capitalize(row['name']);\n      currentRow['1'] = row['1'].toLocaleString();\n      this.state.selectedAttributes.map((column, i) => {\n        var currentValue = row[column[0]] ? row[column[0]] : '-';\n        currentRow[(i + 2).toString()] = currentValue;\n      });\n      data.push(currentRow);\n    });\n    const { ExportCSVButton } = CSVExport;\n    return (\n      <div id=\"mainDisplay\">\n        <Normalization />\n        <ToolkitProvider keyField=\"id\" data={data} columns={columns} exportCSV>\n          {props => (\n            <div>\n              <ExportCSVButton\n                className=\"btn btn-secondary\"\n                {...props.csvProps}\n              >\n                Export as Csv\n              </ExportCSVButton>\n              <hr />\n              <BootstrapTable hover striped {...props.baseProps} />\n            </div>\n          )}\n        </ToolkitProvider>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => ({\n  year: state.YearSelectorReducer.yearSelected,\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes,\n  populationRange: state.AttributeRangeReducer.populationRange,\n  selectedNormalizationName:\n    state.NormalizationReducer.selectedNormalizationName\n});\n\nexport default connect(mapState)(DisplayComponent);\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { confirmAlert } from 'react-confirm-alert';\n\nimport { TRUTHTREE_URI } from '../constants';\nimport { withRouter } from 'react-router-dom';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport '../styles/LeftSideBar.scss';\n\nconst mobileStyle = 800;\n\nclass LeftSideBar extends Component {\n  constructor(props) {\n    super(props);\n    //   /api/collections?level=state\n    this.state = {\n      sidebarData: [],\n      isLoaded: false,\n      selectedAttributes: [],\n      collapsedLeft: false,\n      searchedString: ''\n    };\n    // Set initial state of each collection to false\n    Object.keys(this.state.sidebarData).map(key => (this.state[key] = false));\n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        `${TRUTHTREE_URI}/api/collections?locationId=` + //382026003\n          this.props.match.params.id // +&year=2016\n      )\n      .then(response => {\n        //data contains the variables\n        this.setState({\n          sidebarData: response.data,\n          isLoaded: true\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // if (this.state.selectedAttributes != nextProps.selectedAttributes) {\n    // this.setState({ selectedAttributes: nextProps.selectedAttributes });\n    //  }\n    //console.log('got prop');\n  }\n\n  isAttributeSelected = attribute_id => {\n    for (let i = 0; i < this.props.selectedAttributes.length; i++) {\n      if (this.props.selectedAttributes[i][0] === attribute_id) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // Toggle state of each collection on click\n  handleClickCollection = collection => {\n    this.setState({ [collection]: !this.state[collection] });\n  };\n\n  // stores attribute selected\n  handleClickAttribute(collection, attribute) {\n    let newArr = this.props.selectedAttributes;\n    let id = attribute.attribute_id;\n    for (let i = 0; i < newArr.length; i++) {\n      if (newArr[i][0] === id) {\n        _.remove(newArr, elem => {\n          return elem === newArr[i];\n        });\n        this.setState({\n          selectedAttributes: newArr\n        });\n\n        this.props.dispatch({\n          type: 'CHANGE_ATTRIBUTE',\n          value: newArr\n        });\n        return;\n      }\n    }\n\n    // To limit number of selected attributes to 10\n    if (newArr.length < 10) {\n      newArr.push([id, attribute.name, collection]);\n      this.setState({\n        selectedAttributes: newArr\n      });\n      this.props.dispatch({\n        type: 'CHANGE_ATTRIBUTE',\n        value: newArr\n      });\n    } else {\n      confirmAlert({\n        title: 'Error!',\n        message:\n          'Number of selected attributes exceeded limit of 10, please remove attributes to add more.',\n        buttons: [\n          {\n            label: 'OK'\n          }\n        ]\n      });\n    }\n  }\n\n  collapseLeftBar() {\n    this.setState({ collapsedLeft: !this.state.collapsedLeft });\n    this.setState({ searchedString: '' });\n  }\n\n  //updates search bar with text\n  handleChangeSearch = event => {\n    let searchString = event.target.value.toLowerCase();\n    searchString = searchString.replace('\\\\', '');\n    searchString = searchString.replace('/', '');\n    searchString = searchString.replace('*', '');\n\n    this.setState({ searchedString: searchString });\n  };\n\n  renderSearchTerm = collection => {\n    if (\n      this.state.searchedString === '' ||\n      this.state.sidebarData[collection].name\n        .toLowerCase()\n        .search(this.state.searchedString) > -1\n    ) {\n      return true;\n    }\n    var attr;\n    for (attr in this.state.sidebarData[collection].attributes) {\n      if (\n        this.state.sidebarData[collection].attributes[attr].name\n          .toLowerCase()\n          .search(this.state.searchedString) > -1\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  render() {\n    var { isLoaded } = this.state;\n    if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      if (this.state.collapsedLeft) {\n        return (\n          <button\n            className={\n              window.innerWidth > mobileStyle\n                ? 'left-sidebar-button'\n                : 'top-sidebar-button'\n            }\n            onClick={() => this.collapseLeftBar()}\n          >\n            <i\n              style={{ color: 'white' }}\n              className={\n                'col-md-flex d-md-flex ' + !this.state.collapsedLeft\n                  ? 'fa fa-chevron-right'\n                  : 'fa fa-chevron-left'\n              }\n            />\n          </button>\n        );\n      } else {\n        return (\n          <nav className=\"scrollLeftBar col-md-2 d-md-block bg-dark sidebar \">\n            <div className=\"row\">\n              <div className=\"col-10\">\n                <input\n                  className=\"form-control leftSearch\"\n                  data-spy=\"affix\"\n                  data-offset-top=\"197\" //trying to make search box stay top\n                  id=\"attribute-search-box\"\n                  onChange={this.handleChangeSearch}\n                  placeholder=\"Search Attributes\"\n                />\n              </div>\n              <button className=\"btn\" onClick={() => this.collapseLeftBar()}>\n                <i\n                  className={\n                    'chevron-icon-padding ' + !this.state.collapsedLeft\n                      ? 'fa fa-chevron-left'\n                      : 'fa fa-chevron-right'\n                  }\n                />\n              </button>\n            </div>\n            <div\n              style={{ display: !this.state.collapsedLeft ? 'block' : 'none' }}\n            >\n              {Object.keys(this.state.sidebarData).map((collection, i) => {\n                if (this.renderSearchTerm(collection)) {\n                  return (\n                    <div key={i}>\n                      <button\n                        className=\"accordion\"\n                        onClick={() => this.handleClickCollection(collection)}\n                      >\n                        {this.state.sidebarData[collection].name}\n                      </button>\n                      <div\n                        style={{\n                          display: this.state[collection] ? 'block' : 'none'\n                        }}\n                      >\n                        {Object.keys(\n                          this.state.sidebarData[collection].attributes\n                        ).map((attr, i) => {\n                          return (\n                            <label\n                              onClick={() =>\n                                this.handleClickAttribute(\n                                  this.state.sidebarData[collection].name,\n                                  this.state.sidebarData[collection].attributes[\n                                    attr\n                                  ]\n                                )\n                              }\n                              key={i}\n                              className=\"panel float-right attributes\"\n                              style={{\n                                background: this.isAttributeSelected(\n                                  this.state.sidebarData[collection].attributes[\n                                    attr\n                                  ].attribute_id\n                                )\n                                  ? '#bfd9d5'\n                                  : 'white'\n                              }}\n                            >\n                              <div>\n                                {\n                                  this.state.sidebarData[collection].attributes[\n                                    attr\n                                  ].name\n                                }\n                              </div>\n                            </label>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  );\n                }\n              })}\n            </div>\n          </nav>\n        );\n      }\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes\n});\n\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(LeftSideBar));\n","import React, { Component } from 'react';\nimport {\n  FormGroup,\n  Form,\n  Label,\n  Card,\n  Row,\n  Col,\n  CardBody,\n  CardHeader,\n  Button\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { connect } from 'react-redux';\nimport LocationSearchBox from '../Explore/LocationSearchBox';\nimport CommonAttributes from './CommonAttributes';\nimport SimilarPlacesResponse from './SimilarPlacesResponse';\nimport axios from 'axios/index';\nimport { TRUTHTREE_URI } from '../../constants';\nimport { updateLocations } from '../../actions/SimilarLocationsActions';\nimport { emptyAttributesList } from '../../actions/CommonAttributesActions';\nimport { emptyLocationsList } from '../../actions/LocationSearchBoxActions';\nimport '../../styles/SimilarPlacesSearch.css';\n\nlet allYears = [];\nfor (let i = 2016; i > 1966; i--) {\n  allYears.push({\n    value: i,\n    label: i\n  });\n}\n\nconst normalizationList = [\n  { value: 'PER_CAPITA', label: 'By Population' },\n  { value: 'BY_REVENUE', label: 'By Revenue' }\n];\n\nconst colors = [\n  'red',\n  'purple',\n  'green',\n  'blue',\n  'deeppink',\n  'orange',\n  'navy',\n  'slategray',\n  'indianred',\n  'dimgrey'\n];\n\nconst initialValues = {\n  selectedAttributes: null,\n  numberOfLocations: { value: '1', label: '1' },\n  normalization: { value: null, label: 'Please Select' },\n  yearSelectedMin: { value: null, label: 'Start Year' },\n  yearSelectedMax: { value: null, label: 'End Year' },\n  similarLocations: [],\n  shouldShowLocationError: false,\n  shouldShowNormalizationError: false,\n  shouldShowSelectedAttributesError: false,\n  shouldShowYearMinError: false,\n  shouldShowYearMaxError: false,\n  shouldShowYearRangeError: false\n};\n\nclass SimilarPlacesSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialValues;\n    this.handleChangeAttribute = this.handleChangeAttribute.bind(this);\n    this.handleChangeNumber = this.handleChangeNumber.bind(this);\n    this.handleChangeYearMin = this.handleChangeYearMin.bind(this);\n    this.handleChangeYearMax = this.handleChangeYearMax.bind(this);\n    this.findSimilarLocations = this.findSimilarLocations.bind(this);\n    this.validateInputs = this.validateInputs.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  handleChangeAttribute = selectedAttributes => {\n    this.setState({ selectedAttributes });\n  };\n\n  handleChangeNumber = numberOfLocations => {\n    this.setState({ numberOfLocations });\n  };\n\n  handleChangeNormalization = normalization => {\n    this.setState({ normalization });\n  };\n\n  handleChangeYearMin = yearSelectedMin => {\n    this.setState({ yearSelectedMin });\n  };\n  handleChangeYearMax = yearSelectedMax => {\n    this.setState({ yearSelectedMax });\n  };\n\n  findSimilarLocations() {\n    if (!this.validateInputs()) {\n      return;\n    }\n    let locationId = this.props.selected.id;\n    let place_type = this.props.selected.typeCode;\n    let normalizationType = this.state.normalization.value;\n    let attributes = this.props.selectedAttributes[0].value;\n    let year = this.state.yearSelectedMin.value;\n    if (this.props.selectedAttributes.length > 1) {\n      for (let i = 1; i < this.props.selectedAttributes.length; i++) {\n        attributes = attributes + ',' + this.props.selectedAttributes[i].value;\n      }\n    } else {\n      year = year + ',' + this.state.yearSelectedMax.value;\n    }\n    axios\n      .get(\n        `${TRUTHTREE_URI}/api/similarlocations?` +\n          `locationId=` +\n          locationId +\n          `&place_type=` +\n          place_type +\n          `&attribute=` +\n          attributes +\n          `&year=` +\n          year +\n          `&normalize_by=` +\n          normalizationType\n      )\n      .then(response => {\n        let similarLocations = response.data;\n        similarLocations.map((resp, i) => {\n          similarLocations[i].color = colors[i];\n        });\n        this.setState({ similarLocations: similarLocations });\n        this.props.dispatch(updateLocations(similarLocations));\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  validateInputs() {\n    if (this.props.selectedAttributes.length > 1) {\n      if (\n        this.state.normalization.value === null ||\n        this.props.selectedAttributes.length === 0 ||\n        this.state.yearSelectedMin.value === null ||\n        this.props.selected === null\n      ) {\n        this.setState({\n          shouldShowNormalizationError: true,\n          shouldShowSelectedAttributesError: true,\n          shouldShowYearMinError: true,\n          shouldShowLocationError: true\n        });\n\n        return false;\n      }\n    } else {\n      if (\n        this.state.normalization.value === null ||\n        this.props.selectedAttributes.length === 0 ||\n        this.state.yearSelectedMin.value === null ||\n        this.state.yearSelectedMax.value === null ||\n        this.props.selected === null\n      ) {\n        this.setState({\n          shouldShowNormalizationError: true,\n          shouldShowSelectedAttributesError: true,\n          shouldShowYearMinError: true,\n          shouldShowYearMaxError: true,\n          shouldShowLocationError: true\n        });\n\n        return false;\n      }\n    }\n\n    if (\n      this.state.yearSelectedMin.value !== null &&\n      this.state.yearSelectedMax.value !== null\n    ) {\n      if (this.state.yearSelectedMin.value > this.state.yearSelectedMax.value) {\n        this.setState({ shouldShowYearRangeError: true });\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  reset() {\n    this.setState(initialValues);\n    this.props.dispatch(emptyAttributesList());\n    this.props.dispatch(emptyLocationsList());\n  }\n\n  componentDidMount() {}\n\n  renderYearInput() {\n    if (this.props.selectedAttributes.length < 2) {\n      return (\n        <Row>\n          <Col>\n            <Select\n              value={this.state.yearSelectedMin}\n              onChange={this.handleChangeYearMin}\n              options={allYears}\n            />\n            <small\n              className={`${\n                this.state.yearSelectedMin.value === null &&\n                this.state.shouldShowYearMinError\n                  ? ''\n                  : 'd-none'\n              } text-danger`}\n            >\n              Year can't be blank\n            </small>\n            <small\n              className={`${\n                this.state.yearSelectedMin.value !== null &&\n                this.state.shouldShowYearRangeError &&\n                this.state.yearSelectedMax.value !== null\n                  ? ''\n                  : 'd-none'\n              } text-danger`}\n            >\n              Start year greater than end year\n            </small>\n          </Col>\n\n          {' - '}\n          <Col>\n            <Select\n              value={this.state.yearSelectedMax}\n              onChange={this.handleChangeYearMax}\n              options={allYears}\n            />\n\n            <small\n              className={`${\n                this.state.yearSelectedMax.value === null &&\n                this.state.shouldShowYearMaxError\n                  ? ''\n                  : 'd-none'\n              } text-danger`}\n            >\n              Year can't be blank\n            </small>\n          </Col>\n        </Row>\n      );\n    } else {\n      return (\n        <div>\n          <Select\n            value={this.state.yearSelectedMin}\n            onChange={this.handleChangeYearMin}\n            options={allYears}\n          />\n          <small\n            className={`${\n              this.state.yearSelectedMin.value === null &&\n              this.state.shouldShowYearMinError\n                ? ''\n                : 'd-none'\n            } text-danger`}\n          >\n            Year can't be blank\n          </small>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <Card>\n          <CardHeader className=\"similar-places-card-header\">\n            <h5 className=\"similar-places-label\">Similar Places Search</h5>\n          </CardHeader>\n          <CardBody>\n            <Form>\n              <FormGroup row>\n                <Col lg=\"2\" sm=\"12\" md=\"2\">\n                  <Label for=\"locationOfInterest\">\n                    <strong>Location of Interest</strong>\n                  </Label>\n                </Col>\n                <Col lg=\"4\" sm=\"12\" md=\"4\">\n                  <LocationSearchBox clickable={false} />\n                  <small\n                    className={`${\n                      this.props.selected === null &&\n                      this.state.shouldShowLocationError\n                        ? ''\n                        : 'd-none'\n                    } text-danger`}\n                  >\n                    Location can't be blank\n                  </small>\n                </Col>\n                <Col lg=\"2\" sm=\"12\" md=\"2\">\n                  <Label for=\"normalizationType\">\n                    <strong>Normalization</strong>\n                  </Label>\n                </Col>\n                <Col lg=\"4\" sm=\"12\" md=\"4\">\n                  <Select\n                    value={this.state.normalization}\n                    onChange={this.handleChangeNormalization}\n                    options={normalizationList}\n                    invalid={\n                      this.state.shouldShowNormalizationError &&\n                      !this.state.normalization\n                    }\n                  />\n\n                  <small\n                    className={`${\n                      !this.state.normalization.value &&\n                      this.state.shouldShowNormalizationError\n                        ? ''\n                        : 'd-none'\n                    } text-danger`}\n                  >\n                    Normalization can't be blank\n                  </small>\n                </Col>\n              </FormGroup>\n\n              <FormGroup row>\n                <Col lg=\"2\" sm=\"12\" md=\"2\">\n                  <Label for=\"selectedAttribues\">\n                    <strong>Selected attributes</strong>\n                  </Label>\n                </Col>\n                <Col lg=\"4\" sm=\"12\" md=\"4\">\n                  <CommonAttributes />\n                  <small\n                    className={`${\n                      this.props.selectedAttributes.length === 0 &&\n                      this.state.shouldShowSelectedAttributesError\n                        ? ''\n                        : 'd-none'\n                    } text-danger`}\n                  >\n                    Attributes can't be blank\n                  </small>\n                </Col>\n                <Col lg=\"2\" sm=\"12\" md=\"2\">\n                  <Label for=\"year\">\n                    <strong>Year</strong>\n                  </Label>\n                </Col>\n                <Col lg=\"4\" sm=\"12\" md=\"4\">\n                  {this.renderYearInput()}\n                </Col>\n              </FormGroup>\n\n              <div style={{ paddingTop: '10px' }}>\n                <Row className=\"float-right\">\n                  <Button\n                    className=\"float-right\"\n                    onClick={this.findSimilarLocations}\n                  >\n                    <i className=\"fa fa-search\" style={{ padding: '5px' }} />\n                    Search\n                  </Button>\n                  <div style={{ padding: '5px' }} />\n\n                  <Button className=\"float-right\" onClick={this.reset}>\n                    <i className=\"fa fa-refresh\" style={{ padding: '5px' }} />\n                    Reset\n                  </Button>\n                </Row>\n              </div>\n            </Form>\n            <br />\n            <SimilarPlacesResponse />\n            <br />\n          </CardBody>\n        </Card>\n        <br />\n\n        <br />\n        <br />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedAttributes: state.CommonAttributesReducer.selectedAttributes,\n    selected: state.LocationSearchBoxReducer.selected\n  };\n};\n\nexport default connect(mapStateToProps)(SimilarPlacesSearch);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Col, Row } from 'reactstrap';\n\nimport '../styles/AttributeDeselector.css';\n\nclass AttributeDeselector extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedAttributes: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ selectedAttribtes: this.props.selectedAttributes });\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({ selectedAttributes: nextProps.selectedAttributes });\n  }\n\n  deselectAttribute(attribute) {\n    let newArr = this.state.selectedAttributes;\n    let id = attribute[0];\n    for (let i = 0; i < newArr.length; i++) {\n      if (newArr[i][0] === id) {\n        _.remove(newArr, elem => {\n          return elem === newArr[i];\n        });\n        this.setState({\n          selectedAttributes: newArr\n        });\n        this.props.dispatch({\n          type: 'CHANGE_ATTRIBUTE',\n          value: newArr\n        });\n        return;\n      }\n    }\n  }\n\n  render() {\n    if (this.state.selectedAttributes.length < 1) {\n      return (\n        <Row>\n          <Col xs=\"auto\" className=\"filters\">\n            Selected Attributes: None\n          </Col>\n        </Row>\n      );\n    } else {\n      return (\n        <Row>\n          <Col xs=\"auto\" className=\"filters\">\n            Selected Attributes:\n          </Col>\n          <Col>\n            {Object.keys(this.state.selectedAttributes).map((attributes, i) => {\n              return (\n                <button\n                  className=\"btn btn-light selected-attribute-button\"\n                  onClick={() =>\n                    this.deselectAttribute(this.state.selectedAttributes[i])\n                  }\n                >\n                  <i className=\"fa fa-times\" style={{ paddingRight: '10px' }} />\n                  {this.state.selectedAttributes[i][2]}-\n                  {this.state.selectedAttributes[i][1]}\n                </button>\n              );\n            })}\n          </Col>\n        </Row>\n      );\n    }\n  }\n}\n\nconst mapState = state => ({\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes\n});\n\nexport default connect(mapState)(AttributeDeselector);\n","import React, { Component } from 'react';\nimport Slider from 'rc-slider';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport '../styles/AttributeRange.css';\nimport { TRUTHTREE_URI } from '../constants';\n\nconst Range = Slider.Range;\n\nconst marks = {\n  '-50': '-50%',\n  '-40': '-40%',\n  '-30': '-30%',\n  '-20': '-20%',\n  '-10': '-10%',\n  '0': '0%',\n  '10': '10%',\n  '20': '+20%',\n  '30': '+30%',\n  '40': '+40%',\n  '50': '+50%'\n};\nconst mobileStyle = 800;\n\nclass AttributeRange extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locationPopulation: null,\n      value: [-5, 5],\n      min: -50,\n      max: 50\n    };\n  }\n\n  componentDidMount() {\n    let year = this.props.yearSelected ? this.props.yearSelected : 2016;\n    let url =\n      `${TRUTHTREE_URI}/api/population?locationId=` +\n      this.props.locationId +\n      '&year=' +\n      year;\n    let locPop = null;\n\n    axios\n      .get(url)\n      .then(res => {\n        locPop = res.data.population;\n        this.setState({ locationPopulation: locPop });\n      })\n      .catch(err => console.log(err));\n  }\n\n  onSliderChange = value => {\n    console.log();\n    this.props.dispatch({\n      type: 'RANGE_SELECTION',\n      populationRange: value\n    });\n  };\n\n  render() {\n    const createSliders = this.props.attribute.attributeName.map(\n      (currentAttribute, i) => (\n        <div className=\"outer\" key={i}>\n          <p className=\"no-margin\">\n            {window.innerWidth > mobileStyle ? (\n              <div>\n                Select range of {currentAttribute} for filtering other{' '}\n                {this.props.level}:{' '}\n              </div>\n            ) : (\n              <div>Filter {this.props.level}: </div>\n            )}\n            <b>\n              {this.props.attribute.populationRange[0]}% to{' '}\n              {this.props.attribute.populationRange[1]}%\n            </b>\n          </p>\n          <br />\n\n          <Range\n            dots\n            step={5}\n            value={this.props.attribute.populationRange}\n            min={this.state.min}\n            max={this.state.max}\n            marks={marks}\n            onChange={this.onSliderChange}\n          />\n        </div>\n      )\n    );\n\n    return (\n      <div>\n        <div>\n          <div> {createSliders} </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    year: state.YearSelectorReducer.yearSelected,\n    attribute: state.AttributeRangeReducer\n  };\n};\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AttributeRange);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tab extends Component {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  };\n\n  render() {\n    const {\n      onClick,\n      props: { activeTab, label }\n    } = this;\n\n    let className = 'tab-list-item';\n\n    if (activeTab === label) {\n      className += ' tab-list-active';\n    }\n\n    return (\n      <li className={className} onClick={onClick}>\n        {label}\n      </li>\n    );\n  }\n}\n\nexport default Tab;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Tab from './Tab';\nimport '../../styles/Tab.css';\n\nclass Tabs extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Array).isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: this.props.children[0].props.label\n    };\n  }\n\n  onClickTabItem = tab => {\n    this.setState({ activeTab: tab });\n  };\n\n  render() {\n    const {\n      onClickTabItem,\n      props: { children },\n      state: { activeTab }\n    } = this;\n\n    return (\n      <div className=\"tabs\">\n        <ol className=\"tab-list\">\n          {children.map(child => {\n            const { label } = child.props;\n\n            return (\n              <Tab\n                activeTab={activeTab}\n                key={label}\n                label={label}\n                onClick={onClickTabItem}\n              />\n            );\n          })}\n        </ol>\n        <div className=\"tab-content\">\n          {children.map(child => {\n            if (child.props.label !== activeTab) return undefined;\n            return child.props.children;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\n","import React, { Component } from 'react';\nimport { Badge } from 'reactstrap';\n\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend\n} from 'recharts';\nimport '../../styles/TimeSeries.css';\n\nclass TimeSeries extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const attributeName = this.props.attributeName;\n    if (this.props.condition === 'large') {\n      return (\n        <div className=\"chartDiv\">\n          <div style={{ padding: '10px' }}>\n            <Badge color=\"info\" className=\"popupHeader\">\n              {this.props.collectionName} - {this.props.attributeName}\n            </Badge>\n          </div>\n\n          <LineChart\n            width={1050}\n            height={450}\n            data={this.props.data}\n            margin={{ top: 5, right: 5, bottom: 5, left: 5 }}\n          >\n            <CartesianGrid\n              className=\"chartDiv\"\n              stroke=\"#ccc\"\n              strokeDasharray=\"5 5\"\n              padding={{ left: 20, right: 20 }}\n            />\n            <XAxis\n              dataKey=\"year\"\n              label={{\n                value: 'Year',\n                position: 'insideBottom'\n              }}\n            />\n            <YAxis\n              label={{\n                value: attributeName,\n                angle: -90,\n                position: 'insideLeft'\n              }}\n            />\n            <Tooltip />\n            <Legend verticalAlign=\"bottom\" iconSize={10} />\n            {this.props.locations.map((location, i) => (\n              <Line\n                key={location.name}\n                type=\"monotone\"\n                dataKey={location.name}\n                stroke={location.color}\n                isAnimationActive={false}\n              />\n            ))}\n          </LineChart>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"chartDiv\">\n          <div style={{ padding: '10px' }}>\n            <Badge color=\"info\"> {this.props.collectionName} - {this.props.attributeName} </Badge>\n          </div>\n          <LineChart\n            width={495}\n            height={200}\n            data={this.props.data}\n            margin={{ top: 5, right: 5, bottom: 5, left: 5 }}\n          >\n            <CartesianGrid\n              className=\"chartDiv\"\n              stroke=\"#ccc\"\n              strokeDasharray=\"5 5\"\n              padding={{ left: 20, right: 20 }}\n            />\n            <XAxis\n              dataKey=\"year\"\n              label={{\n                value: 'Year',\n                position: 'insideBottom'\n              }}\n            />\n            <YAxis\n              label={{\n                value: attributeName,\n                angle: -90,\n                position: 'insideLeft'\n              }}\n            />\n            <Tooltip />\n            {this.props.locations.map((location, i) => (\n              <Line\n                key={location.name}\n                type=\"monotone\"\n                dataKey={location.name}\n                stroke={location.color}\n                isAnimationActive={false}\n              />\n            ))}\n          </LineChart>\n        </div>\n      );\n    }\n  }\n}\n\nexport default TimeSeries;\n","import React, { Component } from 'react';\nimport { Spinner } from 'reactstrap';\nimport axios from 'axios/index';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport TimeSeriesChart from './TimeSeriesChart';\nimport { TRUTHTREE_URI } from '../../constants';\n\nclass TimeSeriesView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      locations: [],\n      data: [],\n      locationData: [],\n      currentLevel: null,\n      dataReal: [],\n      locationIds: [],\n      lineColors: [\n        'red',\n        'purple',\n        'green',\n        'blue',\n        'deeppink',\n        'orange',\n        'navy',\n        'slategray',\n        'lime',\n        'indianred',\n        'dimgrey'\n      ],\n      populationRange: [-25, 25]\n    };\n    this.fetchResponse = this.fetchResponse.bind(this);\n    this.formatResponse = this.formatResponse.bind(this);\n    this.initializeYearMap = this.initializeYearMap.bind(this);\n    this.fetchLocations = this.fetchLocations.bind(this);\n  }\n\n  componentDidMount() {\n    const len = this.props.selectedAttributes.length;\n    if (len !== 0) {\n      this.fetchLocations();\n    }\n    // this.props.generateUrl();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      selectedAttributes: nextProps.selectedAttributes\n    });\n    const len = this.props.selectedAttributes.length;\n    if (len !== 0) {\n      this.fetchLocations();\n    }\n    // this.props.generateUrl();\n  }\n\n  fetchLocations() {\n    let minPopulation = 0;\n    let maxPopulation = 0;\n    let year = this.props.yearSelected ? this.props.yearSelected : 2016;\n    let data = {};\n    let population = 0;\n    // Calculate min and max population\n    axios\n      .get(\n        `${TRUTHTREE_URI}/api/population?locationId=` +\n          this.props.id +\n          '&year=' +\n          year\n      )\n      .then(response => {\n        population = response.data.population;\n        this.setState({ currentPopulation: population });\n        maxPopulation = Math.floor(population + 0.5 * population);\n        minPopulation = Math.floor(population - 0.5 * population);\n        return axios\n          .get(\n            `${TRUTHTREE_URI}/api/${this.props.level}?populationRange=` +\n              minPopulation +\n              ',' +\n              maxPopulation\n          )\n          .then(response => {\n            _.map(response.data, obj => {\n              data[obj.id] = { name: obj.name, '1': obj.population };\n            });\n            this.setState({ locationData: data });\n            let currentRows = _.pickBy(data, e => {\n              return (\n                e['1'] <=\n                  population +\n                    (this.props.populationRange[1] / 100) * population &&\n                e['1'] >=\n                  population +\n                    (this.props.populationRange[0] / 100) * population\n              );\n            });\n            this.setState({\n              locationIds: _.map(_.keys(currentRows), _.toInteger)\n            });\n            this.setState({ locationData: data });\n            this.props.updateLocation(data, this.state.locationIds);\n            this.fetchResponse();\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  fetchResponse() {\n    let url =\n      `${TRUTHTREE_URI}/api/attributes?locationIds=` +\n      this.state.locationIds +\n      '&attributeIds=' +\n      this.props.selectedAttributes[this.props.index][0] +\n      '&normalizationType=' +\n      this.props.selectedNormalization;\n    axios\n      .get(url)\n      .then(response => {\n        console.log(response);\n        this.formatResponse(response);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  formatResponse(response) {\n    let data = [];\n    let locations = [];\n    let map = {};\n\n    response.data.map(dataForEachLocation => {\n      let location = {};\n      let lData = this.state.locationData[dataForEachLocation.location_id];\n      let locationName = lData['name'];\n      dataForEachLocation.attributes.map(attributesForEachLocation => {\n        attributesForEachLocation.data.map(attrValue => {\n          let val = map[attributesForEachLocation.attribute_id];\n          if (val === undefined) {\n            val = this.initializeYearMap();\n          }\n          let da = val[attrValue.year - 1967];\n          if (\n            da[dataForEachLocation.location_id] === 0 ||\n            da[dataForEachLocation.location_id] === undefined\n          ) {\n            if (this.props.selectedNormalization === 'GROSS') {\n              val[attrValue.year - 1967][locationName] = attrValue.value;\n            } else if (this.props.selectedNormalization === 'PER_CAPITA') {\n              val[attrValue.year - 1967][locationName] = attrValue.per_capita;\n            } else if (this.props.selectedNormalization === 'BY_REVENUE') {\n              val[attrValue.year - 1967][locationName] = attrValue.by_revenue;\n            }\n          }\n          map[attributesForEachLocation.attribute_id] = val;\n          return null;\n        });\n        if (\n          this.props.userSelectedLocations.includes(\n            dataForEachLocation.location_id\n          )\n        ) {\n          location['id'] = dataForEachLocation.location_id;\n          // let select = this.state.lineColors[Math.floor(Math.random() * 11)];\n          let select = this.state.lineColors[locations.length - 1];\n          location['color'] = select;\n          location['name'] = locationName;\n          locations.push(location);\n        }\n        return null;\n      });\n      return null;\n    });\n    data.push(map);\n    this.setState({ data: data, locations: locations, loading: false });\n  }\n\n  initializeYearMap() {\n    let yearArr = [];\n    for (let i = 1967; i < 2017; i++) {\n      let yearEntry = { year: i };\n      yearArr.push(yearEntry);\n    }\n    return yearArr;\n  }\n\n  render() {\n    const len = this.props.selectedAttributes.length;\n\n    const { loading } = this.state;\n\n    if (len === 0) {\n      return <div>Select an attribute</div>;\n    } else {\n      if (loading) {\n        return (\n          <div className=\"d-flex justify-content-center\">\n            <Spinner\n              className=\"align-self-center\"\n              color=\"secondary\"\n              size=\"sm\"\n            />\n          </div>\n        );\n      } else {\n        return this.state.data.map((attrData, i) => {\n          return (\n            <TimeSeriesChart\n              data={\n                attrData[this.props.selectedAttributes[this.props.index][i]]\n              }\n              attributeName={this.props.selectedAttributes[this.props.index][1]}\n              collectionName={\n                this.props.selectedAttributes[this.props.index][2]\n              }\n              locations={this.state.locations}\n              condition={this.props.condition}\n            />\n          );\n        });\n      }\n    }\n  }\n}\n\nconst mapState = state => ({\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes,\n  year: state.YearSelectorReducer.yearSelected,\n  populationRange: state.AttributeRangeReducer.populationRange,\n  selectedNormalization: state.NormalizationReducer.selectedNormalizationName\n});\nexport default connect(mapState)(TimeSeriesView);\n","import React, { Component } from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  Badge\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { confirmAlert } from 'react-confirm-alert';\nimport domtoimage from 'dom-to-image';\nimport JSZip from 'jszip';\nimport TimeSeriesView from './TimeSeriesView';\nimport Normalization from './Normalization';\n\nimport '../../styles/TimeSeries.css';\n\nclass GridTest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      locations: {},\n      locationIds: [],\n      userSelectedLocations: [],\n      imageUrls: [],\n      imageRefs: {}\n    };\n\n    this.modalToggle = this.modalToggle.bind(this);\n    this.updateLocation = this.updateLocation.bind(this);\n    this.renderLocationList = this.renderLocationList.bind(this);\n    this.selectLocations = this.selectLocations.bind(this);\n    this.ImageCapture = this.ImageCapture.bind(this);\n    this.downloadAsZip = this.downloadAsZip.bind(this);\n  }\n\n  ImageCapture = () => {\n    var newRef = this.refs.image;\n    const fileName = this.attrId;\n    console.log(fileName);\n    domtoimage\n      .toJpeg(newRef, { quality: 1 })\n      .then(function(dataUrl) {\n        var link = document.createElement('a');\n        link.download = 'TruthTree.jpeg';\n        link.href = dataUrl;\n        link.click();\n      })\n      .catch(function(error) {\n        console.error('oops, something went wrong!', error);\n      });\n  };\n\n  modalToggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  downloadAsZip = () => {\n    let imageCount = 0;\n    let zip = new JSZip();\n    let refs = this.state.imageRefs;\n    let refslist = Object.values(refs);\n    Object.keys(refs).map(key => {\n      let value = refs[key];\n      domtoimage\n        .toJpeg(value, { quality: 1 })\n        .then(dataUrl => {\n          let imgfold = zip.folder('images');\n          let eachUrl = dataUrl.split(',')[1];\n          imgfold.file(key + '.jpeg', eachUrl, { base64: true });\n          imageCount++;\n          if (imageCount === refslist.length) {\n            zip.generateAsync({ type: 'blob' }).then(content => {\n              let link = document.createElement('a');\n              link.download = 'TruthTree.zip';\n              link.href = URL.createObjectURL(content);\n              link.click();\n            });\n          }\n        })\n        .catch(function(error) {\n          console.error('Error downloading zip', error);\n        });\n    });\n  };\n\n  getAttributeNames(type) {\n    return _.flatMap(this.props.selectedAttributes, elem => {\n      return type === 'name' ? elem[1] : elem[0];\n    });\n  }\n\n  updateLocation(locations, locationIds) {\n    let defaultLocations = this.state.userSelectedLocations;\n    if (defaultLocations.length === 0) {\n      if (locationIds.length > 10) {\n        defaultLocations = locationIds.slice(0, 10);\n      } else {\n        defaultLocations = locationIds;\n      }\n    }\n    this.setState({\n      locations,\n      locationIds,\n      userSelectedLocations: defaultLocations\n    });\n  }\n\n  selectLocations(event) {\n    let selected = Object.assign([], this.state.userSelectedLocations);\n    let clickedLocation = parseInt(event.target.value);\n    if (selected.includes(clickedLocation)) {\n      selected = selected.filter(val => {\n        return val !== clickedLocation;\n      });\n      this.setState({ userSelectedLocations: selected });\n    } else if (selected.length < 10) {\n      selected.push(clickedLocation);\n      this.setState({ userSelectedLocations: selected });\n    } else {\n      confirmAlert({\n        title: 'Error!',\n        message:\n          'Number of selected locations exceeded limit of 10, please remove existing location to add more.',\n        buttons: [\n          {\n            label: 'OK'\n          }\n        ]\n      });\n    }\n  }\n\n  renderLocationList() {\n    let locationlist = this.state.locationIds.map(location => {\n      return (\n        <Col\n          sm=\"3\"\n          className=\"form-check checkbox checkbox-circle checkbox-yellow\"\n        >\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            value={location}\n            id=\"checkbox-input\"\n            checked={this.state.userSelectedLocations.includes(location)}\n            onClick={this.selectLocations}\n          />\n          <label className=\"form-check-label\" htmlFor=\"checkbox-input\">\n            {this.state.locations[location].name}\n          </label>\n        </Col>\n      );\n    });\n    return <Row className=\"location-list-padding\">{locationlist}</Row>;\n  }\n\n  handExpandClick = attrId =>\n    this.setState({\n      modal: true,\n      modalAttrIndex: attrId\n    });\n\n  render() {\n    let attributes = this.getAttributeNames('name');\n    let len = attributes.length;\n    let cards = attributes.map((card, index) => {\n      return (\n        <div\n          ref={index => {\n            if (this.state.imageRefs[card] === undefined) {\n              this.state.imageRefs[card] = index;\n            }\n          }}\n        >\n          <Card key={index} id=\"cards\">\n            <CardBody className=\"time-series-card\">\n              <TimeSeriesView\n                index={index}\n                condition=\"tiny\"\n                id={this.props.id}\n                level={this.props.level}\n                updateLocation={this.updateLocation}\n                userSelectedLocations={this.state.userSelectedLocations}\n                generateUrl={this.generateUrl}\n              />\n              <Button\n                className=\"button\"\n                color=\"secondary\"\n                onClick={() => this.handExpandClick(index)}\n              >\n                <Badge>Expand</Badge>\n              </Button>\n            </CardBody>\n          </Card>\n        </div>\n      );\n    });\n\n    if (len === 0) {\n      return (\n        <Container className=\"alert\">\n          {' '}\n          Please select minimum of one attribute{' '}\n        </Container>\n      );\n    } else {\n      return (\n        <Container className=\"GridContainer\">\n          <Row>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Normalization />\n                </Row>\n                <hr />\n                <Row className=\"SelectedLocations\">\n                  <i>\n                    Select locations from the selected range to be plotted in\n                    the graph:{' '}\n                  </i>\n                  {this.renderLocationList()}\n                </Row>\n              </CardBody>\n            </Card>\n          </Row>\n          <Row>\n            {' '}\n            <div className=\"Space\" />\n          </Row>\n          <Row>\n            <Button color=\"secondary\" onClick={this.downloadAsZip}>\n              <i className=\"fa fa-download icon-padding\" />\n              Download All\n            </Button>\n          </Row>\n          <Row>\n            {' '}\n            <div className=\"Space\" />\n          </Row>\n          <Row>\n            {cards}\n            <Modal\n              isOpen={this.state.modal}\n              toggle={this.modalToggle}\n              className=\"GridModal\"\n            >\n              <div ref=\"image\">\n                <ModalBody className=\"backgroundWhite\">\n                  <TimeSeriesView\n                    index={this.state.modalAttrIndex}\n                    condition=\"large\"\n                    id={this.props.id}\n                    updateLocation={this.updateLocation}\n                    userSelectedLocations={this.state.userSelectedLocations}\n                    level={this.props.level}\n                  />\n                </ModalBody>\n              </div>\n              <ModalFooter>\n                <Button color=\"secondary\" onClick={this.ImageCapture}>\n                  Download\n                </Button>\n                <Button color=\"secondary\" onClick={this.modalToggle}>\n                  Cancel\n                </Button>\n              </ModalFooter>\n            </Modal>\n          </Row>\n        </Container>\n      );\n    }\n  }\n}\n\nconst mapState = state => ({\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes\n});\nexport default connect(mapState)(GridTest);\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport '../styles/Home.css';\nimport { Card, CardBody, CardHeader } from 'reactstrap';\n\nimport DisplayComponent from './DisplayComponent';\nimport LeftSideBar from './LeftSideBar';\nimport YearSelector from './YearSelector';\nimport AttributeDeselector from './AttributeDeselector';\nimport AttributeRange from './AttributeRange';\nimport Tabs from './Explore/Tabs';\nimport TimeSeriesGrid from './Explore/TimeSeriesGrid';\nimport { TRUTHTREE_URI } from '../constants';\nimport axios from 'axios';\n\nimport { connect } from 'react-redux';\n\nconst homeStyle = {\n  paddingTop: 75\n};\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openStory: false,\n      locationPopulation: null\n    };\n\n    this.modalToggle = this.modalToggle.bind(this);\n  }\n\n  modalToggle() {\n    this.setState({\n      openStory: !this.state.openStory\n    });\n  }\n  componentDidMount() {\n    // reset year\n    this.props.dispatch({\n      type: 'CHANGE_YEAR',\n      yearSelected: 2016\n    });\n    // reset normalization\n    this.props.dispatch({\n      type: 'CHANGE_NORMALIZATION',\n      selectedNormalizationName: 'GROSS',\n      selectedNormalizationDisplayName: 'Gross'\n    });\n    // reset selected attributes\n    this.props.dispatch({\n      type: 'CHANGE_ATTRIBUTE',\n      value: []\n    });\n    // reset range\n    this.props.dispatch({\n      type: 'RANGE_SELECTION',\n      populationRange: [-25, 25]\n    });\n\n    //console.log(this.props)\n    //let year = this.props.yearSelected ? this.props.yearSelected : 2016;\n\n    axios\n      .get(\n        `${TRUTHTREE_URI}/api/population?locationId=` +\n          this.props.match.params.id +\n          '&year=' +\n          2016\n      )\n      .then(res => {\n        this.setState({ locationPopulation: res.data.population });\n      })\n      .catch(err => console.log(err + 'ugh somethong'));\n  }\n\n  render() {\n    return (\n      <Container fluid style={homeStyle} className=\"home\">\n        <Row>\n          <LeftSideBar />\n          <div className=\"col-12 col-md-10 align-items-center padding\">\n            <Card className=\"selected-attributes padding\">\n              <AttributeDeselector />\n            </Card>\n\n            <Card className=\"right-panel\">\n              <Tabs>\n                <div label=\"Table View\">\n                  <DisplayComponent\n                    level={this.props.match.params.level}\n                    id={this.props.match.params.id}\n                    location={this.props.match.params.name}\n                  />\n                </div>\n\n                <div label=\"Time Series View\">\n                  <TimeSeriesGrid\n                    id={this.props.match.params.id}\n                    level={this.props.match.params.level}\n                  />\n                </div>\n              </Tabs>\n            </Card>\n\n            <Card className=\"bottom-panel\">\n              <CardHeader className=\"bottom-panel-header\">\n                <div>\n                  Selected Location: <b>{this.props.match.params.name}</b>\n                  &nbsp;&nbsp;&nbsp;&nbsp; Population :\n                  <b>{this.state.locationPopulation}</b>\n                </div>\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col className=\"border-right\">\n                    <AttributeRange\n                      level={this.props.match.params.level}\n                      location={this.props.match.params.name}\n                      locationId={this.props.match.params.id}\n                    />\n                  </Col>\n                  <Col sm=\"2\" xs=\"2\">\n                    <YearSelector />\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </div>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(mapDispatchToProps)(Home);\n","export const updateValue = value => {\n  return {\n    type: 'SEARCHBOX_UPDATE_VALUE',\n    payload: value\n  };\n};\n\nexport const updateSuggestions = suggestions => {\n  return {\n    type: 'SEARCHBOX_UPDATE_SUGGESTIONS',\n    payload: suggestions\n  };\n};\n\nexport const selectSuggestion = suggestion => {\n  return {\n    type: 'SEARCHBOX_SELECT_SUGGESTION',\n    payload: suggestion\n  };\n};\n\nexport const finishLoading = () => {\n  return {\n    type: 'SEARCHBOX_FINISH_LOADING'\n  };\n};\nexport const emptyLocationsList = () => {\n  return {\n    type: 'EMPTY_LOCATIONS'\n  };\n};\n","export const TYPE_CODE = {\n  0: 'states',\n  1: 'counties',\n  2: 'cities'\n};\n\nexport const getSuggestionLabel = suggestion => {\n  let label = suggestion.name;\n  const parent = suggestion.parent;\n  label += !parent\n    ? ''\n    : !parent.parent\n    ? `, ${parent.name}`\n    : `, ${parent.name}, ${parent.parent.name}`;\n  return label;\n};\n\nexport const getSuggestionUrl = suggestion => {\n  const url = `/explore/${\n    TYPE_CODE[suggestion.typeCode]\n  }/${suggestion.name.toLowerCase().replace(' ', '-')}/${suggestion.id}`;\n  return url;\n};\n","import React, { Component } from 'react';\nimport {\n  Input,\n  DropdownItem,\n  DropdownMenu,\n  Dropdown,\n  DropdownToggle,\n  InputGroup,\n  InputGroupAddon\n} from 'reactstrap';\nimport { post } from 'axios';\nimport Autosuggest from 'react-autosuggest';\nimport { Link, withRouter } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport { connect } from 'react-redux';\n\nimport {\n  updateValue,\n  updateSuggestions,\n  selectSuggestion\n} from '../../actions/LocationSearchBoxActions';\nimport { getSuggestionLabel, getSuggestionUrl } from './common';\nimport '../../styles/LocationSearchBox.css';\n\nconst ENDPOINT = '/api/search';\nconst searchBoxStyle = {\n  zIndex: 1,\n  position: 'relative'\n};\n\nconst renderSuggestion = (suggestion, clickable) => {\n  if (clickable === false) {\n    return (\n      <DropdownItem className=\"text-secondary\">\n        {getSuggestionLabel(suggestion)}\n      </DropdownItem>\n    );\n  } else {\n    return (\n      <Link className=\"text-secondary\" to={getSuggestionUrl(suggestion)}>\n        {getSuggestionLabel(suggestion)}\n      </Link>\n    );\n  }\n};\n\nclass LocationSearchBox extends Component {\n  constructor(props) {\n    super(props);\n    this.debouncedhandleSuggestionsFetchRequested = debounce(\n      this.handleSuggestionsFetchRequested,\n      250\n    );\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      dropdownOpen: false,\n      selectedLocation: null,\n      displayTextValue: 'Select a location'\n    };\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.value !== prevProps.value) {\n      this.inputRef.focus();\n    }\n  }\n\n  handleInputChange = (_, { newValue }) => {\n    this.props.dispatch(updateValue(newValue));\n  };\n\n  handleSuggestionSelected = (_, { suggestion }) => {\n    const { dispatch, clickable, value } = this.props;\n    if (clickable === false) {\n      let label = suggestion.name;\n      const parent = suggestion.parent;\n      label += !parent\n        ? ''\n        : !parent.parent\n        ? `, ${parent.name}`\n        : `, ${parent.name}, ${parent.parent.name}`;\n\n      this.setState({ displayTextValue: label });\n      dispatch(selectSuggestion(suggestion));\n    } else {\n      dispatch(updateValue(value));\n    }\n  };\n\n  handleSuggestionsFetchRequested = ({ value }) => {\n    post(ENDPOINT, {\n      text: value\n    })\n      .then(response => this.props.dispatch(updateSuggestions(response.data)))\n      .catch(err => console.log(err));\n  };\n\n  renderInputComponent = inputProps => (\n    <div>\n      <InputGroup>\n        <Input\n          {...inputProps}\n          id=\"location-search-box\"\n          name=\"location-search-box\"\n          placeholder=\"Try something like Seattle or Boston\"\n          innerRef={input => {\n            this.inputRef = input;\n          }}\n        />\n        <InputGroupAddon addonType=\"append\">\n          <label className=\"btn btn-light mb-0\">\n            <i className=\"fa fa-chevron-up\" />\n          </label>\n        </InputGroupAddon>\n      </InputGroup>\n    </div>\n  );\n\n  render() {\n    const { value, suggestions, dispatch, clickable, selected } = this.props;\n    const inputProps = {\n      value,\n      onChange: this.handleInputChange\n    };\n\n    if (clickable === false) {\n      return (\n        <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n          <DropdownToggle caret>{this.state.displayTextValue}</DropdownToggle>\n          <DropdownMenu className=\"dropdown-width-advance\">\n            <Autosuggest\n              theme={{\n                container: searchBoxStyle,\n                suggestionsList:\n                  'list-group position-absolute w-100 overflow-y',\n                suggestion: 'list-group-item'\n              }}\n              suggestions={suggestions}\n              onSuggestionsFetchRequested={\n                this.debouncedhandleSuggestionsFetchRequested\n              }\n              onSuggestionSelected={this.handleSuggestionSelected}\n              onSuggestionsClearRequested={() => null}\n              getSuggestionValue={getSuggestionLabel}\n              renderInputComponent={this.renderInputComponent}\n              renderSuggestion={suggestion =>\n                renderSuggestion(suggestion, clickable)\n              }\n              inputProps={inputProps}\n            />\n          </DropdownMenu>\n        </Dropdown>\n      );\n    } else {\n      return (\n        <Autosuggest\n          theme={{\n            container: searchBoxStyle,\n            suggestionsList: 'list-group position-absolute w-100 overflow-y',\n            suggestion: 'list-group-item'\n          }}\n          suggestions={suggestions}\n          onSuggestionsFetchRequested={\n            this.debouncedhandleSuggestionsFetchRequested\n          }\n          onSuggestionSelected={this.handleSuggestionSelected}\n          onSuggestionsClearRequested={() => null}\n          getSuggestionValue={getSuggestionLabel}\n          renderInputComponent={this.renderInputComponent}\n          renderSuggestion={suggestion =>\n            renderSuggestion(suggestion, clickable)\n          }\n          inputProps={inputProps}\n        />\n      );\n    }\n  }\n}\n\nconst mapStateToProps = store => ({\n  value: store.LocationSearchBoxReducer.value,\n  suggestions: store.LocationSearchBoxReducer.suggestions,\n  loading: store.LocationSearchBoxReducer.loading,\n  selected: store.LocationSearchBoxReducer.selected\n});\n\nexport default connect(mapStateToProps)(withRouter(LocationSearchBox));\n","export const setSideMenuState = state => {\n  return {\n    type: 'SIDEMENU_SET_STATE',\n    payload: state\n  };\n};\n\nexport const openSideMenu = () => {\n  return {\n    type: 'SIDEMENU_OPEN'\n  };\n};\n\nexport const closeSideMenu = () => {\n  return {\n    type: 'SIDEMENU_CLOSE'\n  };\n};\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Collapse,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavItem,\n  NavLink,\n  NavbarToggler\n} from 'reactstrap';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport LocationSearchBox from './Explore/LocationSearchBox';\nimport { openSideMenu } from '../actions/SideMenuActions';\n\nimport '../styles/Header.css';\nimport logo from '../truthtree-logo.png';\n\nconst navbarStyle = {\n  backgroundColor: 'rgba(13, 22, 38, 0.8)'\n};\n\nconst navBrandStyle = {\n  '&:hover': {\n    textDecoration: 'none'\n  }\n};\n\nconst logoStyle = {\n  width: 50\n};\n\nconst searchBoxContainerStyle = {\n  maxWidth: 800\n};\n\nclass Header extends Component {\n  state = {\n    collapseOpen: false\n  };\n\n  shouldShowSearchBox = () => {\n    const { searchPhrase, location } = this.props;\n    return location.pathname === '/' && searchPhrase !== '';\n  };\n\n  render() {\n    const searchBoxContainerClasses = classNames({\n      'flex-grow-1': true,\n      'd-none': !this.shouldShowSearchBox()\n    });\n    const { collapseOpen } = this.state;\n    return (\n      <Navbar\n        style={navbarStyle}\n        expand=\"md\"\n        className=\"fixed-top space-between\"\n      >\n        <NavbarBrand className=\"text-primary\" style={navBrandStyle}>\n          <Link to=\"/\">\n            <img\n              src={logo}\n              style={logoStyle}\n              className=\"d-inline-block\"\n              alt=\"TruthTree logo\"\n            />\n            <span>&nbsp;TruthTree</span>\n          </Link>\n        </NavbarBrand>\n        <NavbarToggler\n          className=\"navbar-dark\"\n          onClick={() => this.setState({ collapseOpen: !collapseOpen })}\n        />\n        <Collapse isOpen navbar>\n          <div className=\"d-flex flex-grow-1 justify-content-center\">\n            <div\n              style={searchBoxContainerStyle}\n              className={searchBoxContainerClasses}\n            >\n              <LocationSearchBox />\n            </div>\n          </div>\n        </Collapse>\n        <Collapse isOpen={collapseOpen} navbar className=\"flex-grow-0\">\n          <Nav\n            className=\"ml-auto px-md-3\"\n            navbar\n            onClick={() => this.setState({ collapseOpen: false })}\n          >\n            <NavItem>\n              <NavLink\n                className=\"d-flex justify-content-center\"\n                tag={Link}\n                to=\"/\"\n              >\n                Explore\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className=\"d-flex justify-content-center\"\n                tag={Link}\n                to=\"/stories\"\n              >\n                Stories\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to=\"/advance\">\n                Advance\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className=\"d-flex justify-content-center\"\n                tag={Link}\n                to=\"/about\"\n              >\n                About\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <div>\n            <Button\n              color=\"outline-primary\"\n              block\n              onClick={() => {\n                this.setState({ collapseOpen: false });\n                this.props.dispatch(openSideMenu());\n              }}\n            >\n              Create a story\n            </Button>\n          </div>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  searchPhrase: store.LocationSearchBoxReducer.value\n});\n\nexport default withRouter(connect(mapStateToProps)(Header));\n","import React, { Component } from 'react';\nimport { Container, Jumbotron } from 'reactstrap';\nimport '../../styles/About.css';\n\nconst aboutStyle = {\n  paddingTop: 70\n};\n\nclass About extends Component {\n  render() {\n    return (\n      <Container fluid style={aboutStyle} className=\"about\">\n        <Jumbotron className=\"float-center\">\n          <h1 className=\"text-primary\">TruthTree</h1>\n          <p>A Public Data Vizipedia/Wiki-Laboratory</p>\n          <hr className=\"my-2\" />\n          <p className=\"lead\">\n            TruthTree seeks to unite all the public data in the world into a\n            data-visualization tool and reference platform that can facilitate\n            data-driven understanding and consensus regarding geography,\n            politics, and culture for geographical entities at all scales.\n          </p>\n          <p className=\"lead\" />\n        </Jumbotron>\n      </Container>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport isEqual from 'lodash/isEqual';\n\nimport { getSuggestionLabel, getSuggestionUrl } from './common';\n\nimport mapStyles from './mapStyles.json';\n\nconst mapContainerStyle = {\n  height: '100%',\n  width: '100%'\n};\n\nclass Map extends Component {\n  state = {\n    center: {\n      lat: 37.09024,\n      lng: -95.712891\n    },\n    zoom: 5,\n    markers: []\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (!isEqual(this.props.suggestions, nextProps.suggestions)) {\n      this.renderMarkers(nextProps.suggestions);\n    }\n  }\n\n  renderMarkers = suggestions => {\n    if (this.map && this.maps) {\n      this.setMarkersMap(this.state.markers, null);\n      const markers = suggestions.map(suggestion => {\n        const marker = new this.maps.Marker({\n          position: {\n            lat: suggestion.latitude,\n            lng: suggestion.longitude\n          },\n          map: this.map,\n          animation: this.maps.Animation.DROP\n        });\n        const infowindow = new this.maps.InfoWindow({\n          content: `\n            <div>\n              ${getSuggestionLabel(suggestion)}\n            </div>\n          `,\n          maxWidth: 200\n        });\n        infowindow.open(this.map, marker);\n        marker.addListener('click', () => {\n          infowindow.open(this.map, marker);\n          this.props.history.push(getSuggestionUrl(suggestion));\n        });\n        marker.addListener('mouseover', () => {\n          infowindow.open(this.map, marker);\n        });\n        return marker;\n      });\n      this.setState({ markers });\n    }\n  };\n\n  setMarkersMap = (markers, map) => {\n    markers.forEach(marker => marker.setMap(map));\n  };\n\n  handleApiLoaded = (map, maps) => {\n    this.maps = maps;\n    this.map = map;\n    map.setOptions({\n      styles: mapStyles,\n      fullscreenControlOptions: {\n        position: maps.ControlPosition.BOTTOM_RIGHT\n      }\n    });\n    this.renderMarkers(this.props.suggestions);\n  };\n\n  render() {\n    return (\n      <div style={mapContainerStyle} className=\"position-absolute\">\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: 'AIzaSyD6S0fXIE22l64bV3nhv-EB-7K1gh39nqs' }}\n          defaultCenter={this.state.center}\n          defaultZoom={this.state.zoom}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({ map, maps }) => this.handleApiLoaded(map, maps)}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  suggestions: store.LocationSearchBoxReducer.suggestions\n});\n\nexport default withRouter(connect(mapStateToProps)(Map));\n","import React, { Component } from 'react';\nimport { Container, Row, Col, Label, Input, Spinner } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { updateValue } from '../../actions/LocationSearchBoxActions';\n\nclass DummySearchBox extends Component {\n  componentDidUpdate() {\n    if (this.props.value === '') {\n      this.inputRef.focus();\n    }\n  }\n  handleInputChange = event => {\n    event.target.blur();\n    this.props.dispatch(updateValue(event.target.value));\n  };\n\n  render() {\n    const { value, loading } = this.props;\n    return (\n      <Container>\n        <Row className=\"py-3\">\n          {loading ? (\n            <Col className=\"d-flex justify-content-center\">\n              <Spinner className=\"align-self-center\" color=\"primary\" />\n            </Col>\n          ) : (\n            <Col>\n              <Label\n                style={{ cursor: 'pointer', color: 'white' }}\n                for=\"dummy-search-box\"\n              >\n                Search for a U.S location:\n              </Label>\n              <Input\n                innerRef={input => {\n                  this.inputRef = input;\n                }}\n                id=\"dummy-search-box\"\n                value={value}\n                onChange={this.handleInputChange}\n                placeholder=\"Try something like Seattle or Boston\"\n              />\n            </Col>\n          )}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  value: store.LocationSearchBoxReducer.value,\n  loading: store.LocationSearchBoxReducer.loading\n});\n\nexport default connect(mapStateToProps)(DummySearchBox);\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport Typist from 'react-typist';\nimport { Link } from 'react-router-dom';\n\nconst introHeadingStyle = {\n  color: 'white'\n};\n\nclass IntroHeading extends Component {\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col style={introHeadingStyle}>\n            <h1 className=\"text-primary\">Welcome to TruthTree</h1>\n            <Typist avgTypingDelay={20} cursor={{ hideWhenDone: true }}>\n              We're an open source data visualization project that focuses on\n              U.S government financial spending. &nbsp;\n              <Link to=\"/about\">Find out more</Link>\n            </Typist>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default IntroHeading;\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport DummySearchBox from './DummySearchBox';\nimport IntroHeading from './IntroHeading';\n\nconst introContainerStyle = {\n  marginBottom: '12em',\n  backgroundColor: 'rgba(13, 22, 38, 0.7)'\n};\n\nclass Intro extends Component {\n  render() {\n    const { searchPhrase } = this.props;\n    const introContainerClasses = classNames({\n      'd-none': searchPhrase !== ''\n    });\n    return (\n      <Container className={introContainerClasses}>\n        <Row>\n          <Col\n            style={introContainerStyle}\n            xs={12}\n            sm={11}\n            md={9}\n            lg={6}\n            className=\"py-3 px-4\"\n          >\n            <IntroHeading />\n            <DummySearchBox />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  searchPhrase: store.LocationSearchBoxReducer.value\n});\n\nexport default connect(mapStateToProps)(Intro);\n","import React, { Component } from 'react';\n\nimport Map from './Map';\nimport Intro from './Intro';\n\nconst exploreStyle = {\n  flex: '1 1 100%'\n};\n\nclass Explore extends Component {\n  render() {\n    return (\n      <div\n        style={exploreStyle}\n        className=\"d-flex align-items-center position-relative\"\n      >\n        <Map />\n        <Intro />\n      </div>\n    );\n  }\n}\n\nexport default Explore;\n","import React, { Component } from 'react';\nimport {\n  Media,\n  Row,\n  Badge,\n  Alert,\n  Card,\n  Col,\n  CardHeader,\n  Button\n} from 'reactstrap';\nimport '../../styles/ViewStories.css';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport ReactHtmlParser from 'react-html-parser';\nimport { TRUTHTREE_URI } from '../../constants';\nimport axios from 'axios/index';\nimport { confirmAlert } from 'react-confirm-alert';\n\nclass TrendingStoryDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.handleUpVoteClick = this.handleUpVoteClick.bind(this);\n    this.handleDownVoteClick = this.handleDownVoteClick.bind(this);\n  }\n\n  contentHtml(data) {\n    return ReactHtmlParser(data);\n  }\n\n  handleUpVoteClick(story) {\n    let checkCondition = story.id + 'up';\n    if (!localStorage.getItem(checkCondition)) {\n      console.log(JSON.stringify(story));\n      axios({\n        method: 'put',\n        url: `${TRUTHTREE_URI}/api/stories?type=UPVOTE`,\n        data: JSON.stringify(story),\n        headers: { 'Content-Type': 'application/json' }\n      })\n        .then(response => {\n          var arr = this.props.TrendingStoriesReducer.approvedStories;\n          var indexOfId = _.findIndex(arr, { id: story.id });\n          arr.splice(indexOfId, 1, response.data);\n\n          let keyDown = story.id + 'up';\n          localStorage.setItem(keyDown, 'true');\n\n          this.props.dispatch({\n            type: 'USER_SELECTED_STORY',\n            approvedStories: arr,\n            approvedStoriesLength: arr.length,\n            color: this.props.TrendingStoriesReducer.color,\n            userSelectedStory: response.data,\n            loading: false\n          });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    } else {\n      confirmAlert({\n        title: 'Thank You!',\n        message: 'You have upvoted the story previously.',\n        buttons: [\n          {\n            label: 'OK'\n          }\n        ]\n      });\n    }\n  }\n\n  handleDownVoteClick(story) {\n    let checkCondition = story.id + 'down';\n    if (!localStorage.getItem(checkCondition)) {\n      console.log(JSON.stringify(story));\n      axios({\n        method: 'put',\n        url: `${TRUTHTREE_URI}/api/stories?type=DOWNVOTE`,\n        data: JSON.stringify(story),\n        headers: { 'Content-Type': 'application/json' }\n      })\n        .then(response => {\n          var arr = this.props.TrendingStoriesReducer.approvedStories;\n          var indexOfId = _.findIndex(arr, { id: story.id });\n          arr.splice(indexOfId, 1, response.data);\n\n          let keyDown = story.id + 'down';\n          localStorage.setItem(keyDown, 'true');\n\n          this.props.dispatch({\n            type: 'USER_SELECTED_STORY',\n            approvedStories: arr,\n            approvedStoriesLength: arr.length,\n            color: this.props.TrendingStoriesReducer.color,\n            userSelectedStory: response.data,\n            loading: false\n          });\n          //console.log(response);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    } else {\n      confirmAlert({\n        title: 'Thank You!',\n        message: 'You have downvoted the story previously.',\n        buttons: [\n          {\n            label: 'OK'\n          }\n        ]\n      });\n    }\n  }\n\n  render() {\n    if (this.props.TrendingStoriesReducer.userSelectedStory === 'none') {\n      return (\n        <div>\n          <Alert color=\"primary\">\n            Please select a story to view its details!\n          </Alert>\n        </div>\n      );\n    } else {\n      return (\n        <Card className=\"view-story\">\n          <Media>\n            <Media body>\n              <Media heading>\n                <CardHeader>\n                  {this.props.TrendingStoriesReducer.userSelectedStory.title}\n                </CardHeader>\n              </Media>\n\n              <Row className=\"view\">\n                <Col xs=\"auto\" style={{ marginTop: '5px' }}>\n                  <i> Tags: </i>\n                </Col>\n                <Col>\n                  {_.map(\n                    this.props.TrendingStoriesReducer.userSelectedStory.tags,\n                    tag => {\n                      return (\n                        <Badge className=\"tag view\" color=\"secondary\">\n                          {tag}\n                        </Badge>\n                      );\n                    }\n                  )}\n                </Col>\n              </Row>\n\n              <Row className=\"view\">\n                <Col xs=\"auto\">\n                  <i>Description:</i>\n                </Col>\n                <Col>\n                  {this.contentHtml(\n                    this.props.TrendingStoriesReducer.userSelectedStory.content\n                  )}\n                </Col>\n              </Row>\n\n              <Row className=\"view\">\n                <Col xs=\"auto\">\n                  {' '}\n                  <i>Author:</i>\n                </Col>\n                <Col>\n                  <b>\n                    {this.props.TrendingStoriesReducer.userSelectedStory.author}\n                  </b>\n                </Col>\n              </Row>\n\n              <Row className=\"view float-right\">\n                <Col xs=\"auto\">\n                  <Button\n                    className=\"fa fa-thumbs-o-up thumb view-story\"\n                    color=\"primary\"\n                    onClick={() =>\n                      this.handleUpVoteClick(\n                        this.props.TrendingStoriesReducer.userSelectedStory\n                      )\n                    }\n                  >\n                    &nbsp;\n                    {this.props.TrendingStoriesReducer.userSelectedStory.upvote}\n                  </Button>\n                </Col>\n                <Col xs=\"auto\">\n                  <Button\n                    className=\"fa fa-thumbs-o-down thumb view-story\"\n                    color=\"primary\"\n                    onClick={() =>\n                      this.handleDownVoteClick(\n                        this.props.TrendingStoriesReducer.userSelectedStory\n                      )\n                    }\n                  >\n                    &nbsp;\n                    {\n                      this.props.TrendingStoriesReducer.userSelectedStory\n                        .downvote\n                    }\n                  </Button>\n                </Col>\n              </Row>\n            </Media>\n          </Media>\n        </Card>\n      );\n    }\n  }\n}\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nconst mapStateToProps = state => {\n  return {\n    TrendingStoriesReducer: state.TrendingStoriesReducer\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TrendingStoryDetail);\n","import React, { Component } from 'react';\nimport { Spinner, Card, Media, Badge, Row } from 'reactstrap';\nimport _ from 'lodash';\nimport '../../styles/TrendingStories.css';\n\nimport axios from 'axios/index';\nimport { TRUTHTREE_URI } from '../../constants';\nimport { connect } from 'react-redux';\nimport ReactHtmlParser from 'react-html-parser';\n\nclass TrendingStories extends Component {\n  constructor(props) {\n    super(props);\n    this.getStoryDetails = this.getStoryDetails.bind(this);\n    this.selectStory = this.selectStory.bind(this);\n    this.state = {\n      data: [],\n      length: 0,\n      bgColor: [],\n      searchBoxText: '',\n      searchedTags: [],\n      loading: true,\n      InitialData: []\n    };\n  }\n\n  contentHtml(data) {\n    return ReactHtmlParser(data);\n  }\n\n  componentDidMount() {\n    //List of approved stories if not admin\n    axios\n      .get(`${TRUTHTREE_URI}/api/stories?storyStatus=APPROVED`)\n      .then(response => {\n        let color = [];\n        for (var i = 0; i < response.data.length; i++) {\n          color.push('white');\n        }\n        this.props.dispatch({\n          type: 'APPROVED_STORIES_LIST',\n          approvedStories: response.data,\n          approvedStoriesLength: response.data.length,\n          color: color,\n          userSelectedStory: 'none',\n          loading: false\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  //Highlighting the selected story panel & storing its details in redux\n  selectStory(data, index) {\n    let bgColor = [];\n    for (\n      var i = 0;\n      i < this.props.TrendingStoriesReducer.approvedStoriesLength;\n      i++\n    ) {\n      if (i === index) {\n        bgColor.push('#f2f2f2');\n      } else {\n        bgColor.push('white');\n      }\n    }\n\n    this.setState({ bgColor: bgColor });\n    this.props.dispatch({\n      type: 'USER_SELECTED_STORY',\n      approvedStories: this.props.TrendingStoriesReducer.approvedStories,\n      approvedStoriesLength: this.props.TrendingStoriesReducer\n        .approvedStoriesLength,\n      color: bgColor,\n      userSelectedStory: data,\n      loading: false\n    });\n    this.setState({ bgColor: this.props.TrendingStoriesReducer.color });\n  }\n\n  //Displaying each story\n  getStoryDetails() {\n    return (\n      <Media body>\n        {_.map(\n          _.sortBy(this.props.TrendingStoriesReducer.approvedStories, [\n            function(o) {\n              return o.upvote - o.downvote;\n            }\n          ]).reverse(),\n          (data, index) => {\n            return (\n              <Card\n                className=\"pointer\"\n                onClick={() => this.selectStory(data, index)}\n                style={{\n                  backgroundColor: this.props.TrendingStoriesReducer.color[\n                    index\n                  ]\n                }}\n              >\n                <Media heading className=\"trending\">\n                  {data.title}\n                </Media>\n\n                <Row className=\"trending\">\n                  {_.map(data.tags, tag => {\n                    return (\n                      <Badge className=\"tag\" color=\"secondary\">\n                        {tag}\n                      </Badge>\n                    );\n                  })}\n                </Row>\n                <Row className=\"trending\">\n                  <div style={{ padding: '10px' }}>\n                    {this.contentHtml(_.truncate(data.content, { length: 50 }))}\n                  </div>\n                </Row>\n                {!this.props.admin && (\n                  <Row className=\"trending\">\n                    <i className=\"fa fa-thumbs-o-up thumb\"> {data.upvote} </i>\n                    <i className=\"fa fa-thumbs-o-down thumb\">\n                      {' '}\n                      {data.downvote}{' '}\n                    </i>\n                  </Row>\n                )}\n              </Card>\n            );\n          }\n        )}\n      </Media>\n    );\n  }\n\n  handleChangeSearch = event => {\n    let search = event.target.value.toLowerCase();\n    search = search.replace('\\\\', '');\n    search = search.replace('*', '');\n    this.setState({\n      searchBoxText: search //,\n      //searchedTags: _.split(search, ' ', 9999)\n    });\n    console.log(search);\n    if (search == '') {\n      axios\n        .get(`${TRUTHTREE_URI}/api/stories?storyStatus=APPROVED`)\n        .then(response => {\n          let color = [];\n          for (var i = 0; i < response.data.length; i++) {\n            color.push('white');\n          }\n          this.props.dispatch({\n            type: 'APPROVED_STORIES_LIST',\n            approvedStories: response.data,\n            approvedStoriesLength: response.data.length,\n            color: color,\n            userSelectedStory: 'none',\n            loading: false\n          });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    } else {\n      this.submitSearch(search);\n    }\n  };\n\n  submitSearch = search => {\n    //api call for tags filterred by searchedTags here\n\n    axios //api/stories/search?keyword=colorado&pageSize=10&pageNumber=1\n      .get(\n        `${TRUTHTREE_URI}/api/stories/search?keyword=` +\n          search +\n          '&pageSize=' +\n          999 +\n          '&pageNumber=' +\n          1\n      )\n      .then(response => {\n        let color = [];\n        for (var i = 0; i < response.data.length; i++) {\n          color.push('white');\n        }\n        this.props.dispatch({\n          type: 'APPROVED_STORIES_LIST', //could change, but works well now.\n          approvedStories: response.data,\n          approvedStoriesLength: response.data.length,\n          color: color,\n          userSelectedStory: 'none',\n          loading: false\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    //Displaying spinner untill API fetches the data\n    if (this.props.TrendingStoriesReducer.loading) {\n      return (\n        <div className=\"d-flex justify-content-center\">\n          <Spinner className=\"align-self-center\" color=\"secondary\" size=\"sm\" />\n        </div>\n      );\n    }\n    //Dislaying list of stories + search box\n    else {\n      return (\n        <div>\n          <input\n            className=\"form-control searchBar\"\n            data-spy=\"affix\"\n            onChange={this.handleChangeSearch}\n            // onKeyPress={this.handleKeyPressSearch}\n            placeholder=\"Search stories by title or tag name\"\n          />\n          {/* this is a working button in case we want a search button. I removed the css though\n          but i can add it back pretty quickly if we wanted it.\n               <Button\n            className=\"search-button\"\n            color=\"primary\"\n            onClick={this.submitSearch}\n          >\n            Search\n          </Button>\n          <br />\n          <br />*/}\n          <div>\n            <Media className=\"trending-height\">{this.getStoryDetails()}</Media>\n          </div>\n        </div>\n      );\n    }\n  }\n}\nconst mapDispatchToProps = dispatch => ({ dispatch });\nconst mapStateToProps = state => {\n  return {\n    TrendingStoriesReducer: state.TrendingStoriesReducer\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TrendingStories);\n","import React, { Component } from 'react';\nimport { Container, Card, Row, Col, CardBody, CardHeader } from 'reactstrap';\n\nimport '../../styles/StoriesIndex.css';\nimport ViewStories from './TrendingStoryDetail';\nimport TrendingStories from './TrendingStories';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nclass Stories extends Component {\n  render() {\n    return (\n      <Container className=\"stories-page\">\n        <Card>\n          <CardHeader className=\"trending-card\">\n            <Row>\n              <Col className=\"trending-label\">Trending Stories </Col>\n            </Row>\n          </CardHeader>\n          <CardBody>\n            <Row>\n              <Col className=\"border-right\">\n                <TrendingStories />\n              </Col>\n              <Col className=\"trending-stories-overflow\">\n                <ViewStories />\n              </Col>\n            </Row>\n          </CardBody>\n        </Card>\n      </Container>\n    );\n  }\n}\n\nexport default Stories;\n","import React, { Component } from 'react';\nimport { Spinner, Card, Media, Badge, Row } from 'reactstrap';\nimport _ from 'lodash';\nimport '../../styles/TrendingStories.css';\nimport axios from 'axios/index';\nimport { TRUTHTREE_URI } from '../../constants';\nimport { connect } from 'react-redux';\nimport ReactHtmlParser from 'react-html-parser';\n\nclass PendingApprovalStories extends Component {\n  constructor(props) {\n    super(props);\n    this.getStoryDetails = this.getStoryDetails.bind(this);\n    this.selectStory = this.selectStory.bind(this);\n    this.state = {\n      InitialData: [],\n      bgColor: []\n    };\n  }\n\n  contentHtml(data) {\n    return ReactHtmlParser(data);\n  }\n\n  componentDidMount() {\n    //List of stories to be approved if admin\n    axios\n      .get(`${TRUTHTREE_URI}/api/stories?storyStatus=PENDING`)\n      //Change the api call to unapproved stories\n      .then(response => {\n        let color = [];\n        for (var i = 0; i < response.data.length; i++) {\n          color.push('white');\n        }\n        this.props.dispatch({\n          type: 'STORIES_LIST',\n          adminStories: response.data,\n          adminStoriesLength: response.data.length,\n          bgColor: color,\n          adminSelectedStory: 'none',\n          loading: false\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  //Highlighting the selected story panel & storing its details in redux\n  selectStory(data, index) {\n    let color = [];\n    for (\n      var i = 0;\n      i < this.props.AdminStoriesReducer.adminStoriesLength;\n      i++\n    ) {\n      if (i === index) {\n        color.push('#f2f2f2');\n      } else {\n        color.push('white');\n      }\n    }\n\n    this.setState({ bgColor: color });\n    this.props.dispatch({\n      type: 'ADMIN_SELECTED_STORY',\n      adminStories: this.props.AdminStoriesReducer.adminStories,\n      adminStoriesLength: this.props.AdminStoriesReducer.adminStoriesLength,\n      bgColor: color,\n      adminSelectedStory: data,\n      loading: false\n    });\n    this.setState({ bgColor: this.props.AdminStoriesReducer.bgColor });\n  }\n\n  //Displaying each story\n  getStoryDetails() {\n    return (\n      <Media body>\n        {_.map(\n          _.sortBy(this.props.AdminStoriesReducer.adminStories, [\n            function(o) {\n              return o.upvote - o.downvote;\n            }\n          ]).reverse(),\n          (data, index) => {\n            return (\n              <Card\n                className=\"pointer\"\n                onClick={() => this.selectStory(data, index)}\n                style={{\n                  backgroundColor: this.props.AdminStoriesReducer.bgColor[index]\n                }}\n              >\n                <Media heading className=\"trending\">\n                  {data.title}\n                </Media>\n                <Row className=\"trending\">\n                  {_.map(data.tags, tag => {\n                    return (\n                      <Badge className=\"tag\" color=\"secondary\">\n                        {tag}\n                      </Badge>\n                    );\n                  })}\n                </Row>\n                <Row className=\"trending\">\n                  <div style={{ padding: '10px' }}>\n                    {this.contentHtml(_.truncate(data.content, { length: 50 }))}\n                  </div>\n                </Row>\n              </Card>\n            );\n          }\n        )}\n      </Media>\n    );\n  }\n\n  render() {\n    //Displaying spinner untill API fetches the data\n    if (this.props.AdminStoriesReducer.loading) {\n      return (\n        <div className=\"d-flex justify-content-center\">\n          <Spinner className=\"align-self-center\" color=\"secondary\" size=\"sm\" />\n        </div>\n      );\n    }\n    //Dislaying list of stories\n    else {\n      return (\n        <div>\n          <input\n            className=\"form-control searchBar\"\n            data-spy=\"affix\"\n            // onChange={this.handleChangeSearch}\n            placeholder=\"Search stories by title or tag name\"\n          />\n          <div>\n            <Media className=\"trending-height\">{this.getStoryDetails()}</Media>\n          </div>\n        </div>\n      );\n    }\n  }\n}\nconst mapDispatchToProps = dispatch => ({ dispatch });\nconst mapStateToProps = state => {\n  return {\n    AdminStoriesReducer: state.AdminStoriesReducer\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PendingApprovalStories);\n","import React, { Component } from 'react';\nimport {\n  Media,\n  Row,\n  Badge,\n  Alert,\n  Card,\n  Col,\n  CardHeader,\n  Button\n} from 'reactstrap';\nimport '../../styles/ViewStories.css';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport ReactHtmlParser from 'react-html-parser';\nimport { TRUTHTREE_URI } from '../../constants';\nimport axios from 'axios/index';\nimport { confirmAlert } from 'react-confirm-alert';\n\nclass StoryDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.handleApprove = this.handleApprove.bind(this);\n    this.handleDecline = this.handleDecline.bind(this);\n  }\n\n  contentHtml(data) {\n    return ReactHtmlParser(data);\n  }\n\n  handleApprove(idNow) {\n    axios\n      .put(`${TRUTHTREE_URI}/api/stories/story/APPROVED/` + idNow)\n      .then(response => {\n        let result = [];\n        if (response.status === 200) {\n          result = _.filter(this.props.adminStories, function(story) {\n            return story.id !== idNow;\n          });\n\n          let color = [];\n          for (var i = 0; i < result.length; i++) {\n            color.push('white');\n          }\n\n          this.props.dispatch({\n            type: 'STORIES_LIST',\n            adminStories: result,\n            adminStoriesLength: result.length,\n            bgColor: color,\n            adminSelectedStory: 'none',\n            loading: false\n          });\n          confirmAlert({\n            title: 'Approved!',\n            message: 'The story has been approved',\n            buttons: [\n              {\n                label: 'OK'\n              }\n            ]\n          });\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  handleDecline(idNow) {\n    axios\n      .put(`${TRUTHTREE_URI}/api/stories/story/DISAPPROVED/` + idNow)\n      .then(response => {\n        let result = [];\n        if (response.status === 200) {\n          result = _.filter(this.props.adminStories, function(story) {\n            return story.id !== idNow;\n          });\n\n          let color = [];\n          for (var i = 0; i < result.length; i++) {\n            color.push('white');\n          }\n\n          this.props.dispatch({\n            type: 'STORIES_LIST',\n            adminStories: result,\n            adminStoriesLength: result.length,\n            bgColor: color,\n            adminSelectedStory: 'none',\n            loading: false\n          });\n          confirmAlert({\n            title: 'Declined!',\n            message: 'The story has been declined',\n            buttons: [\n              {\n                label: 'OK'\n              }\n            ]\n          });\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  handleDelete(idNow) {\n    axios\n      .delete(`${TRUTHTREE_URI}/api/stories/` + idNow)\n      .then(response => {\n        let result = [];\n        if (response.status === 200) {\n          result = _.filter(this.props.adminStories, function(story) {\n            return story.id !== idNow;\n          });\n\n          let color = [];\n          for (var i = 0; i < result.length; i++) {\n            color.push('white');\n          }\n\n          this.props.dispatch({\n            type: 'STORIES_LIST',\n            adminStories: result,\n            adminStoriesLength: result.length,\n            bgColor: color,\n            adminSelectedStory: 'none',\n            loading: false\n          });\n          confirmAlert({\n            title: 'Deleted!',\n            message: 'The story has been deleted',\n            buttons: [\n              {\n                label: 'OK'\n              }\n            ]\n          });\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    if (this.props.adminSelectedStory === 'none') {\n      return (\n        <div>\n          <Alert color=\"primary\">\n            Please select a story to view its details!\n          </Alert>\n        </div>\n      );\n    } else {\n      return (\n        <Card className=\"view-story\">\n          <Media>\n            <Media body>\n              <Media heading>\n                <CardHeader>{this.props.adminSelectedStory.title}</CardHeader>\n              </Media>\n\n              <Row className=\"view\">\n                <Col xs=\"auto\" style={{ marginTop: '5px' }}>\n                  <i> Tags: </i>\n                </Col>\n                <Col>\n                  {_.map(this.props.adminSelectedStory.tags, tag => {\n                    return (\n                      <Badge className=\"tag view\" color=\"secondary\">\n                        {tag}\n                      </Badge>\n                    );\n                  })}\n                </Col>\n              </Row>\n\n              <Row className=\"view\">\n                <Col xs=\"auto\">\n                  <i>Description:</i>\n                </Col>\n                <Col>\n                  {this.contentHtml(this.props.adminSelectedStory.content)}\n                </Col>\n              </Row>\n\n              <Row className=\"view\">\n                <Col xs=\"auto\">\n                  {' '}\n                  <i>Author:</i>\n                </Col>\n                <Col>\n                  <b>{this.props.adminSelectedStory.author}</b>\n                </Col>\n              </Row>\n\n              <Row className=\"view\">\n                <Col xs=\"auto\">\n                  <Button\n                    className=\"myButton\"\n                    color=\"primary\"\n                    size=\"sm\"\n                    onClick={() =>\n                      this.handleApprove(this.props.adminSelectedStory.id)\n                    }\n                  >\n                    Approve\n                  </Button>\n                </Col>\n                <Col xs=\"auto\">\n                  <Button\n                    className=\"myButton\"\n                    color=\"primary\"\n                    size=\"sm\"\n                    onClick={() =>\n                      this.handleDecline(this.props.adminSelectedStory.id)\n                    }\n                  >\n                    Decline\n                  </Button>\n                </Col>\n                <Col xs=\"auto\">\n                  <Button\n                    className=\"myButton\"\n                    color=\"danger\"\n                    size=\"sm\"\n                    onClick={() =>\n                      this.handleDelete(this.props.adminSelectedStory.id)\n                    }\n                  >\n                    Delete\n                  </Button>\n                </Col>\n              </Row>\n            </Media>\n          </Media>\n        </Card>\n      );\n    }\n  }\n}\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nconst mapStateToProps = state => {\n  return {\n    adminSelectedStory: state.AdminStoriesReducer.adminSelectedStory,\n    adminStories: state.AdminStoriesReducer.adminStories\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StoryDetails);\n","import React, { Component } from 'react';\nimport StoriesList from './PendingApprovalStories';\nimport ViewAndApproveStory from './StoryDetails';\nimport { Card, Row, CardHeader, CardBody, Col } from 'reactstrap';\n\nimport '../../styles/ApproveIndex.css';\n\nclass AdminHome extends Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader className=\"admin-panel-header\">\n          <Col>Stories To Be Approved </Col>\n        </CardHeader>\n        <CardBody>\n          <Row>\n            <Col className=\"border-right\">\n              <StoriesList />\n            </Col>\n            <Col className=\"border-right overflow\">\n              <ViewAndApproveStory />\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default AdminHome;\n","import React, { Component } from 'react';\nimport {\n  Container,\n  FormGroup,\n  Label,\n  Alert,\n  Button,\n  Jumbotron,\n  Row,\n  Input\n} from 'reactstrap';\nimport axios from 'axios/index';\nimport { TRUTHTREE_URI } from '../../constants';\n\nimport '../../styles/ApproveIndex.css';\nimport AdminHome from './AdminHome';\n\nclass Approve extends Component {\n  constructor(props) {\n    super(props);\n    this.validatePassword = this.validatePassword.bind(this);\n    this.password = React.createRef();\n    this.state = {\n      isFirstLoad: true,\n      isAuthenticated: false\n    };\n  }\n\n  validatePassword() {\n    this.setState({ isFirstLoad: false });\n    var self = this;\n\n    axios({\n      method: 'post',\n      url: `${TRUTHTREE_URI}/api/login`,\n      headers: { 'Content-Type': 'text/plain' },\n      data: this.password.current.value\n    })\n      .then(function(response) {\n        if (response.data === true) {\n          self.setState({ isAuthenticated: true });\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n      <Container className=\"stories-page\">\n        {!this.state.isAuthenticated && (\n          <Jumbotron className=\"float-center\">\n            <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0 \">\n              {!this.state.isFirstLoad && !this.state.isAuthenticated && (\n                <Alert color=\"danger\">\n                  Incorrect Password! Please enter correct password to login\n                </Alert>\n              )}\n              <br />\n              {!this.state.isAuthenticated && (\n                <div>\n                  <h1 className=\"text-primary\">\n                    Welcome to TruthTree Admin login!\n                  </h1>\n                  <Row style={{ paddingLeft: '25px' }}>\n                    <Label for=\"adminPassword\" className=\"mr-sm-2\">\n                      Please enter admin password for authentication\n                    </Label>\n                  </Row>\n                  <Row style={{ paddingLeft: '25px' }}>\n                    <Input\n                      innerRef={this.password}\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"adminPassword\"\n                      placeholder=\"password\"\n                    />\n                  </Row>\n                  <br />\n                  <Row style={{ paddingLeft: '25px' }}>\n                    <Button onClick={this.validatePassword}>Submit</Button>\n                  </Row>\n                </div>\n              )}\n            </FormGroup>\n          </Jumbotron>\n        )}\n        {this.state.isAuthenticated && <AdminHome />}\n      </Container>\n    );\n  }\n}\n\nexport default Approve;\n","import React from 'react';\nimport CreatableSelect from 'react-select/lib/Creatable';\n\nconst TagInput = ({\n  inputValue,\n  tagsWithLabels,\n  onChange,\n  onInputChange,\n  onKeyDown\n}) => (\n  <CreatableSelect\n    components={{ DropdownIndicator: null }}\n    inputValue={inputValue}\n    isClearable\n    isMulti\n    menuIsOpen={false}\n    onChange={onChange}\n    onInputChange={onInputChange}\n    onKeyDown={onKeyDown}\n    placeholder=\"Tags\"\n    value={tagsWithLabels}\n  />\n);\n\nexport default TagInput;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { confirmAlert } from 'react-confirm-alert';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Input, FormGroup, FormFeedback, Spinner } from 'reactstrap';\nimport ReactQuill from 'react-quill';\nimport Recaptcha from 'react-recaptcha';\n\nimport 'react-quill/dist/quill.snow.css'; // ES6\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nimport { closeSideMenu } from '../../../actions/SideMenuActions';\nimport { TRUTHTREE_URI } from '../../../constants';\nimport TagInput from './TagInput';\nimport '../../../styles/StoryCreationForm.scss';\n\nconst initialState = {\n  featureEnabled: true,\n  isSubmitting: false,\n  isHuman: false,\n  shouldShowCaptchaError: false,\n  shouldShowAuthorFieldError: false,\n  authorFieldValue: '',\n  titleFieldValue: '',\n  shouldShowTitleFieldError: false,\n  tagsWithLabels: [],\n  tagFieldValue: '',\n  bodyFieldValue: '',\n  bodyFieldTextOnly: '',\n  shouldShowBodyFieldError: false\n};\n\nconst createOption = label => ({\n  label,\n  value: label\n});\n\nclass StoryCreationForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.recaptchaInstance = null;\n  }\n\n  modules = {\n    toolbar: [\n      [{ header: [1, 2, false] }],\n      ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n      [\n        { list: 'ordered' },\n        { list: 'bullet' },\n        { indent: '-1' },\n        { indent: '+1' }\n      ],\n      ['link', 'image'],\n      ['clean']\n    ]\n  };\n\n  componentDidMount() {\n    this.setState({ featureEnabled: true });\n  }\n\n  handleChangeAuthor = event => {\n    this.setState({\n      authorFieldValue: event.target.value,\n      shouldShowAuthorFieldError: true\n    });\n  };\n\n  handleChangeTitle = event => {\n    this.setState({\n      titleFieldValue: event.target.value,\n      shouldShowTitleFieldError: true\n    });\n  };\n\n  handleTagFieldInputChange = tagFieldValue => {\n    this.setState({ tagFieldValue });\n  };\n\n  handleTagsChange = tagsWithLabels => {\n    this.setState({\n      tagsWithLabels\n    });\n  };\n\n  handleTagFieldKeyDown = event => {\n    const { tagFieldValue, tagsWithLabels } = this.state;\n    if (!tagFieldValue) return;\n    switch (event.key) {\n      case 'Enter':\n      case 'Tab':\n        if (!tagsWithLabels.some(tag => tag.value === tagFieldValue)) {\n          const newTagsWithLabels = [\n            ...tagsWithLabels,\n            createOption(tagFieldValue)\n          ];\n          this.setState({\n            tagFieldValue: '',\n            tagsWithLabels: newTagsWithLabels\n          });\n        } else {\n          this.setState({ tagFieldValue: '' });\n        }\n        event.preventDefault();\n        break;\n      default:\n    }\n  };\n\n  handleChangeStory = (content, delta, source, editor) => {\n    const text = editor.getText();\n    this.setState({\n      bodyFieldValue: content,\n      bodyFieldTextOnly: text.slice(0, text.length - 1),\n      shouldShowBodyFieldError: true\n    });\n  };\n\n  handleDiscard = () => {\n    this.recaptchaInstance.reset();\n    this.setState(initialState, () =>\n      this.setState({ shouldShowBodyFieldError: false })\n    );\n    this.props.dispatch(closeSideMenu());\n  };\n\n  submitForm = () => {\n    const {\n      isHuman,\n      authorFieldValue,\n      titleFieldValue,\n      tagsWithLabels,\n      bodyFieldValue,\n      bodyFieldTextOnly\n    } = this.state;\n    this.setState({ isSubmitting: true }, () => {\n      if (\n        [isHuman, authorFieldValue, titleFieldValue, bodyFieldTextOnly].some(\n          field => !field\n        )\n      ) {\n        this.setState({\n          isSubmitting: false,\n          shouldShowAuthorFieldError: true,\n          shouldShowTitleFieldError: true,\n          shouldShowBodyFieldError: true,\n          shouldShowCaptchaError: true\n        });\n      } else {\n        axios\n          .post(`${TRUTHTREE_URI}/api/stories`, {\n            author: authorFieldValue,\n            title: titleFieldValue,\n            tags: tagsWithLabels.map(tag => tag.value),\n            content: bodyFieldValue,\n            rawContent: bodyFieldTextOnly\n          })\n          .then(() => {\n            this.handleDiscard();\n            confirmAlert({\n              title: 'Story submitted!',\n              message: 'Story is now pending review.',\n              buttons: [\n                {\n                  label: 'Continue.'\n                }\n              ]\n            });\n          })\n          .catch(console.log);\n      }\n    });\n  };\n\n  render() {\n    const {\n      isSubmitting,\n      isHuman,\n      shouldShowCaptchaError,\n      authorFieldValue,\n      shouldShowAuthorFieldError,\n      titleFieldValue,\n      shouldShowTitleFieldError,\n      tagFieldValue,\n      tagsWithLabels,\n      bodyFieldValue,\n      bodyFieldTextOnly,\n      shouldShowBodyFieldError\n    } = this.state;\n    if (this.state.featureEnabled) {\n      return (\n        <div className=\"story-creation-form\">\n          <h2>Create a story</h2>\n          <FormGroup>\n            <Input\n              invalid={shouldShowAuthorFieldError && !authorFieldValue}\n              onChange={this.handleChangeAuthor}\n              value={authorFieldValue}\n              placeholder=\"Author Name *\"\n            />\n            <FormFeedback>Author can't be blank</FormFeedback>\n          </FormGroup>\n          <FormGroup>\n            <Input\n              invalid={shouldShowTitleFieldError && !titleFieldValue}\n              onChange={this.handleChangeTitle}\n              value={titleFieldValue}\n              placeholder=\"Story Title *\"\n            />\n            <FormFeedback>Title can't be blank</FormFeedback>\n          </FormGroup>\n          <FormGroup className=\"position-relative\">\n            <TagInput\n              inputValue={tagFieldValue}\n              tagsWithLabels={tagsWithLabels}\n              onChange={this.handleTagsChange}\n              onInputChange={this.handleTagFieldInputChange}\n              onKeyDown={this.handleTagFieldKeyDown}\n            />\n          </FormGroup>\n          <FormGroup>\n            <ReactQuill //value={this.state.storyTextOnly}\n              onChange={this.handleChangeStory}\n              modules={this.modules}\n              value={bodyFieldValue}\n              placeholder=\"Tell us what you found\"\n            />\n            <small\n              className={`${\n                shouldShowBodyFieldError && !bodyFieldTextOnly ? '' : 'd-none'\n              } text-danger`}\n            >\n              Body can't be blank\n            </small>\n          </FormGroup>\n          <FormGroup>\n            <Recaptcha\n              ref={e => (this.recaptchaInstance = e)}\n              sitekey=\"6Ldb85sUAAAAAKe6zdfI6jMm2SBDTzvmJ8iOP9kV\"\n              render=\"explicit\"\n              theme=\"dark\"\n              verifyCallback={() => this.setState({ isHuman: true })}\n            />\n            <small\n              className={`${\n                !isHuman && shouldShowCaptchaError ? '' : 'd-none'\n              } text-danger`}\n            >\n              Hello fellow bot\n            </small>\n          </FormGroup>\n          {isSubmitting ? (\n            <div className=\"d-flex justify-content-center\">\n              <Spinner />\n            </div>\n          ) : (\n            <div>\n              <Button color=\"primary\" onClick={this.submitForm} block>\n                Submit\n              </Button>\n              <Button color=\"secondary\" onClick={this.handleDiscard} block>\n                Discard\n              </Button>\n            </div>\n          )}\n        </div>\n      );\n    } else {\n      return <div>THIS SECTION HAS BEEN DISABLED</div>;\n    }\n  }\n}\n\nexport default withRouter(connect(null)(StoryCreationForm));\n","import React, { Component } from 'react';\nimport { slide as Menu } from 'react-burger-menu';\nimport { connect } from 'react-redux';\n\nimport StoryCreationForm from './Stories/StoryCreationForm';\n\nimport '../styles/SideMenu.scss';\n\nclass SideMenu extends Component {\n  state = {\n    size: 50,\n    windowWidth: 0\n  };\n\n  componentDidMount() {\n    this.updateWindowWidth();\n    window.addEventListener('resize', this.updateWindowWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowWidth);\n  }\n\n  updateWindowWidth = () => {\n    this.setState({ windowWidth: window.innerWidth });\n  };\n\n  handleStateChange = state => {\n    this.setState({ size: this.state.size + 5 });\n    this.props.dispatch({\n      type: 'SIDEMENU_SET_STATE',\n      payload: state.isOpen\n    });\n  };\n\n  render() {\n    const { windowWidth } = this.state;\n    const width = windowWidth > 675 ? '60%' : '90%';\n    return (\n      <Menu\n        isOpen={this.props.isOpen}\n        customBurgerIcon={false}\n        right\n        onStateChange={state => this.handleStateChange(state)}\n        width={width}\n      >\n        <StoryCreationForm />\n      </Menu>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  isOpen: store.SideMenuReducer.isOpen\n});\n\nexport default connect(mapStateToProps)(SideMenu);\n","import React, { Component } from 'react';\n\nimport '../../styles/Header.css';\nimport axios from 'axios/index';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\n\nimport { TRUTHTREE_URI } from '../../constants';\n\nclass CommonAttributes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownOpen: false,\n      selectedAttributes: [],\n      allValues: [],\n      values: []\n    };\n    this.getAttributes = this.getAttributes.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.addAttributes = this.addAttributes.bind(this);\n    this.handleChangeAttribute = this.handleChangeAttribute.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAttributes();\n  }\n\n  componentWillReceiveProps() {\n    this.getAttributes();\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  addAttributes(e) {\n    let selectedAttribute = {\n      name: e.target.id,\n      displayName: e.target.value\n    };\n    this.props.dispatch({\n      type: 'ADD_ATTRIBUTES',\n      selectedAttribute: selectedAttribute\n    });\n  }\n\n  handleChangeAttribute = selectedAttributes => {\n    this.props.dispatch({\n      type: 'ADD_ATTRIBUTES',\n      selectedAttribute: selectedAttributes\n    });\n  };\n\n  getAttributes() {\n    axios\n      .get(`${TRUTHTREE_URI}/api/similarlocations/attributes`)\n      .then(response => {\n        this.setState({ allValues: response.data });\n        let values = this.state.allValues.map((value, i) => ({\n          value: value.id,\n          label: value.display_name\n        }));\n        var valuesSorted = _.sortBy(values, ['label']);\n        this.setState({ values: valuesSorted });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n      <div id=\"normalisation\">\n        <Select\n          value={this.props.selectedAttributes}\n          onChange={this.handleChangeAttribute}\n          options={this.state.values}\n          isMulti=\"true\"\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedAttributes: state.CommonAttributesReducer.selectedAttributes\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CommonAttributes);\n","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport isEqual from 'lodash/isEqual';\n\nimport mapStyles from '../Explore/mapStyles';\n\nconst mapContainerStyle = {\n  height: 500\n};\n\nclass USAMap extends Component {\n  state = {\n    center: {\n      lat: 37.09024,\n      lng: -95.712891\n    },\n    markerClicked: false,\n    zoom: 0,\n    markers: []\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (!isEqual(this.props.locations, nextProps.locations)) {\n      this.renderMarkers(nextProps.locations);\n    }\n  }\n\n  renderMarkers = locations => {\n    if (this.map && this.maps) {\n      this.setMarkersMap(this.state.markers, null);\n      const markers = locations.map(location => {\n        const marker = new this.maps.Marker({\n          position: {\n            lat: location.latitude,\n            lng: location.longitude\n          },\n          map: this.map,\n          animation: this.maps.Animation.DROP\n        });\n        const infowindow = new this.maps.InfoWindow({\n          content: `\n            <div>\n              ${location.name}\n            </div>\n          `,\n          maxWidth: 200\n        });\n        // infowindow.open(this.map, marker);\n        marker.addListener('mouseover', () => {\n          infowindow.open(this.map, marker);\n        });\n        return marker;\n      });\n      this.setState({ markers });\n    }\n  };\n\n  setMarkersMap = (markers, map) => {\n    markers.forEach(marker => marker.setMap(map));\n  };\n\n  handleApiLoaded = (map, maps) => {\n    this.maps = maps;\n    this.map = map;\n    map.setOptions({\n      styles: mapStyles,\n      fullscreenControlOptions: {\n        position: maps.ControlPosition.BOTTOM_RIGHT\n      }\n    });\n    this.renderMarkers(this.props.locations);\n  };\n\n  render() {\n    return (\n      <div style={mapContainerStyle}>\n        <GoogleMapReact\n          bootstrapURLKeys={{\n            key: 'AIzaSyD6S0fXIE22l64bV3nhv-EB-7K1gh39nqs'\n          }}\n          defaultCenter={this.state.center}\n          defaultZoom={4.5}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({ map, maps }) => this.handleApiLoaded(map, maps)}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  locations: store.SimilarLocationsReducer.locations\n});\n\nexport default withRouter(connect(mapStateToProps)(USAMap));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport USAMap from './USAMap';\nimport { ListGroup, ListGroupItem, Container, Row, Col } from 'reactstrap';\n// import MapCode from \"./MapCode\";\n\nconst SimilarLocationsList = ({ locations }) => (\n  <ListGroup>\n    {locations.map((location, idx) => (\n      <ListGroupItem key={idx} className=\"text-truncate\">\n        {/*<div style={{paddingTop: \"12px\", paddingLeft: \"5px\", paddingRight:\"5px\"}}>*/}\n        {/*<MapCode color={location.color}/>*/}\n        {/*</div>*/}\n        <span className=\"text-secondary py-2\">{location.name}</span>\n      </ListGroupItem>\n    ))}\n  </ListGroup>\n);\n\nclass SimilarPlacesResponse extends Component {\n  render() {\n    return (\n      <Container fluid>\n        {this.props.locations.length !== 0 && (\n          <div style={{ paddingTop: '25px' }}>\n            <hr />\n            <Row>\n              <h4 className=\"text-secondary py-3\">\n                We have found these locations which are similar to your location\n                of interest!\n              </h4>\n            </Row>\n            <Row>\n              <Col md={9} sm={12} className=\"pl-md-0\">\n                <USAMap />\n              </Col>\n              <Col md={3} sm={12} className=\"pr-md-0\">\n                <SimilarLocationsList locations={this.props.locations} />\n              </Col>\n            </Row>\n          </div>\n        )}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    locations: state.SimilarLocationsReducer.locations\n  };\n};\n\nexport default connect(mapStateToProps)(SimilarPlacesResponse);\n","export const updateLocations = locations => {\n  return {\n    type: 'UPDATE_SIMILAR_LOCATIONS',\n    locations: locations\n  };\n};\n","export const emptyAttributesList = () => {\n  return {\n    type: 'EMPTY_ATTRIBUTES_LIST'\n  };\n};\n","import React, { Component } from 'react';\nimport { Container } from 'reactstrap';\nimport SimilarPlacesSearch from './SimilarPlacesSearch';\nconst paddingTop = {\n  paddingTop: '90px'\n};\nclass Advance extends Component {\n  render() {\n    return (\n      <Container className=\"stories-page\" style={paddingTop}>\n        <SimilarPlacesSearch />\n      </Container>\n    );\n  }\n}\n\nexport default Advance;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Explore from './components/Explore';\nimport Stories from './components/Stories';\nimport Admin from './components/Admin';\nimport SideMenu from './components/SideMenu';\nimport Advance from './components/Advance';\n\nimport './App.css';\nimport './styles/Tab.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"d-flex flex-column\">\n          <Header />\n          <SideMenu />\n          <Switch>\n            <Route exact path=\"/\" component={Explore} />\n            <Route exact path=\"/stories\" component={Stories} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/admin\" component={Admin} />\n            <Route exact path=\"/advance\" component={Advance} />\n            <Route exact path=\"/explore/:level/:name/:id\" component={Home} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.scss';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-typist/dist/Typist.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/RootReducer';\nexport default function configureStore() {\n  return createStore(rootReducer, applyMiddleware(thunk));\n}\n"],"sourceRoot":""}