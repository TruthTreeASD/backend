{"version":3,"sources":["truthtree-logo.png","constants.js","reducers/LocationSearchBoxReducer.js","reducers/RootReducer.js","reducers/FilterByReducer.js","reducers/AttributeRangeReducer.js","reducers/SelectedAttributeReducer.js","reducers/YearSelectorReducer.js","reducers/NormalizationReducer.js","components/YearSelector.js","components/Explore/Normalization.js","components/DisplayComponent.js","components/LeftSideBar.js","components/AttributeDeselector.js","components/AttributeRange.js","components/Explore/Tab.js","components/Explore/Tabs.js","components/Explore/TimeSeriesChart.js","components/Explore/TimeSeriesView.js","components/Explore/TimeSeriesGrid.js","components/StoryCreationComponent.js","components/Home.js","actions/LocationSearchBoxActions.js","components/Explore/LocationSearchBox.js","components/Header.js","components/About/index.js","components/Explore/Map.js","components/Explore/DummySearchBox.js","components/Explore/IntroHeading.js","components/Explore/Intro.js","components/Explore/index.js","components/Stories/ViewStories.js","mockData/storyData.js","components/Stories/TrendingStories.js","components/Stories/index.js","App.js","serviceWorker.js","index.js","store.js"],"names":["module","exports","__webpack_require__","p","TRUTHTREE_URI","defaultState","value","loading","combineReducers","FilterByReducer","state","arguments","length","undefined","dimension","action","type","Object","objectSpread","AttributeRangeReducer","attributeName","populationRange","SelectedAttributeReducer","sidebarData","selectedAttributes","Array","from","YearSelectorReducer","yearSelected","LocationSearchBoxReducer","payload","NormalizationReducer","selectedNormalizationDisplayName","selectedNormalizationName","Normalization","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dropdownOpen","normalizationValues","normalizationValuesCall","bind","assertThisInitialized","toggle","setSelectedNormalization","setState","prevState","e","dispatch","target","id","_this2","axios","get","concat","then","response","data","catch","error","console","log","_this3","values","map","i","react_default","a","createElement","DropdownItem","key","name","displayValue","onClick","Dropdown","isOpen","DropdownToggle","caret","DropdownMenu","Component","connect","DisplayComponent","currentPopulation","currentLevel","selectedData","locationIds","year","populationRangeCall","getFormattedName","attributeCall","colFormatter","nextProps","normalizationKeys","currentRows","_","pickBy","keys","attributes","flatMap","elem","row","location_id","attribute_id","per_capita","by_revenue","cell","toLowerCase","location","replace","capitalize","_this4","minPopulation","maxPopulation","population","confirmAlert","title","message","buttons","label","Math","floor","level","obj","1","link","href","rel","toLocaleString","_this5","columns","dataField","text","formatter","sort","column","index","push","toString","currentRow","currentValue","ExportCSVButton","CSVExport","Explore_Normalization","react_bootstrap_table2_toolkit_lib_default","keyField","exportCSV","assign","className","csvProps","lib_default","hover","striped","baseProps","LeftSideBar","isAttributeSelected","handleClickCollection","collection","defineProperty","handleChangeSearch","event","searchString","searchedString","renderSearchTerm","search","attr","isLoaded","collapsedLeft","match","params","attribute","newArr","_loop","remove","v","_ret","collapseLeftBar","style","color","data-spy","data-offset-top","onChange","placeholder","display","handleClickAttribute","background","withRouter","dropdownMenuStyle","height","overflow","allYears","YearSelector","yearArray","AttributeDeselector","selectedAttribtes","Row","Col","xs","deselectAttribute","paddingRight","Range","Slider","marks","-50","-40","-30","-20","-10","0","10","20","30","40","50","AttributeRange","onSliderChange","locationPopulation","min","max","url","locationId","locPop","res","err","createSliders","currentAttribute","dots","step","Tab","_this$props","_this$props2","activeTab","Tabs","onClickTabItem","tab","children","child","Explore_Tab","TimeSeries","condition","padding","Badge","collectionName","LineChart","width","margin","top","right","bottom","left","CartesianGrid","stroke","strokeDasharray","XAxis","dataKey","position","YAxis","angle","Tooltip","Legend","verticalAlign","iconSize","locations","Line","isAnimationActive","TimeSeriesView","locationData","dataReal","lineColors","fetchResponse","formatResponse","initializeYearMap","fetchLocations","toInteger","updateLocation","selectedNormalization","dataForEachLocation","locationName","attributesForEachLocation","attrValue","val","da","userSelectedLocations","includes","select","yearArr","yearEntry","len","Spinner","size","attrData","TimeSeriesChart","GridTest","ImageCapture","newRef","refs","image","fileName","attrId","domtoimage","toJpeg","quality","dataUrl","document","download","click","handExpandClick","modal","modalAttrIndex","modalToggle","renderLocationList","selectLocations","defaultLocations","slice","selected","clickedLocation","parseInt","filter","locationlist","sm","checked","htmlFor","getAttributeNames","cards","card","Card","CardBody","Explore_TimeSeriesView","Button","Container","Modal","ref","ModalBody","ModalFooter","StoryCreationComponent","handleChangeAuthor","author","authorField","handleChangeTags","tag","endsWith","tagsField","handleChangeStory","story","storyField","rows","homeStyle","paddingTop","Home","fluid","components_LeftSideBar","components_AttributeDeselector","Explore_Tabs","components_DisplayComponent","TimeSeriesGrid","components_StoryCreationComponent","CardHeader","components_AttributeRange","components_YearSelector","updateValue","finishLoading","ENDPOINTS","TYPE_CODE","2","createFuseOptions","threshold","includeScore","distance","maxPatternLength","minMatchCharLength","renderSuggestionsContainer","_ref","containerProps","getSuggestionLabel","suggestion","item","typeCode","county","stateAbbr","renderSuggestion","type_code","Link","to","LocationSearchBox","_parseData","statesData","countiesData","citiesData","statesDataById","reduce","newStatesData","state_code","counties","forEach","fips_code_state","abbreviation","city","statesFuseOptions","weight","countiesFuseOptions","citiesFuseOptions","Fuse","storeInputRef","searchBox","input","handleInputChange","_ref2","newValue","handleSuggestionsFetchRequested","_ref3","searchPhrase","matchedStates","matchedCounties","matchedCities","temp","b","score","suggestions","renderInputComponent","inputProps","Input","innerRef","inputRef","popoverOpen","debouncedhandleSuggestionsFetchRequested","debounce","reqs","Promise","all","_ref4","_ref5","slicedToArray","statesRes","countiesRes","citiesRes","prevProps","focus","dist_default","theme","container","suggestionsList","onSuggestionsClearRequested","onSuggestionsFetchRequested","getSuggestionValue","store","navbarStyle","backgroundColor","navBrandStyle","&:hover","textDecoration","logoStyle","Header","collapseOpen","searchBoxContainerClasses","classNames","justify-content-center","d-none","Navbar","expand","NavbarBrand","src","logo","alt","NavbarToggler","Collapse","navbar","md","lg","Explore_LocationSearchBox","Nav","NavItem","NavLink","aboutStyle","About","Jumbotron","mapContainerStyle","Map","center","lat","lng","zoom","handleApiLoaded","maps","setOptions","styles","mapStyles","fullscreenControlOptions","ControlPosition","BOTTOM_RIGHT","google_map_react_lib_default","bootstrapURLKeys","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","DummySearchBox","blur","Label","cursor","for","introHeadingStyle","IntroHeading","Typist_default","avgTypingDelay","hideWhenDone","introContainerStyle","marginBottom","Intro","introContainerClasses","Explore_IntroHeading","Explore_DummySearchBox","exploreStyle","flex","Explore","Explore_Map","Explore_Intro","ViewStories","mockData","body","upvotes","TrendingStories","getStoryDetails","handleUpVoteClick","handleDownVoteClick","Media","sortBy","reverse","heading","truncate","class","Stories","Stories_ViewStories","Stories_TrendingStories","App","BrowserRouter","components_Header","Switch","Route","exact","path","component","Boolean","window","hostname","ReactDOM","render","es","createStore","rootReducer","applyMiddleware","thunk","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.969480e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/truthtree-logo.75b56fb9.png\";","const TRUTHTREE_URI = 'https://truthtree.herokuapp.com';\nmodule.exports = {\n  TRUTHTREE_URI\n};\n","const defaultState = {\n  value: '',\n  loading: true\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SEARCHBOX_UPDATE_VALUE':\n      return {\n        ...state,\n        value: action.payload\n      };\n\n    case 'SEARCHBOX_FINISH_LOADING':\n      return {\n        ...state,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport AttributeRangeReducer from './AttributeRangeReducer';\nimport FilterByReducer from './FilterByReducer';\nimport SelectedAttributeReducer from './SelectedAttributeReducer';\nimport YearSelectorReducer from './YearSelectorReducer';\nimport LocationSearchBoxReducer from './LocationSearchBoxReducer';\nimport NormalizationReducer from './NormalizationReducer';\n\nexport default combineReducers({\n  FilterByReducer,\n  AttributeRangeReducer,\n  SelectedAttributeReducer,\n  YearSelectorReducer,\n  LocationSearchBoxReducer,\n  NormalizationReducer\n});\n","export default (state = { dimension: 'State' }, action) => {\n  switch (action.type) {\n    case 'CHANGE_DIMENSION':\n      return {\n        ...state,\n        dimension: action.value\n      };\n    default:\n      return state;\n  }\n};\n","export default (\n  state = {\n    attributeName: ['Population'],\n    populationRange: [-25, 25]\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'RANGE_SELECTION':\n      return {\n        ...state,\n        populationRange: action.populationRange\n      };\n    default:\n      return state;\n  }\n};\n","export default (\n  state = {\n    sidebarData: [],\n    selectedAttributes: []\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'CHANGE_ATTRIBUTE':\n      return {\n        ...state,\n        selectedAttributes: Array.from(action.value)\n      };\n    default:\n      return state;\n  }\n};\n","export default (state = { yearSelected: 2016 }, action) => {\n  switch (action.type) {\n    case 'CHANGE_YEAR':\n      state = {\n        ...state,\n        yearSelected: action.yearSelected\n      };\n      break;\n    default:\n      return state;\n  }\n  return state;\n};\n","export default (\n  state = {\n    selectedNormalizationDisplayName: 'Gross',\n    selectedNormalizationName: 'GROSS'\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'CHANGE_NORMALIZATION':\n      state = {\n        ...state,\n        selectedNormalizationName: action.selectedNormalizationName,\n        selectedNormalizationDisplayName:\n          action.selectedNormalizationDisplayName\n      };\n      break;\n    default:\n      return state;\n  }\n  return state;\n};\n","import React, { Component } from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\nimport { connect } from 'react-redux';\n\nconst dropdownMenuStyle = {\n  height: '200px',\n  overflow: 'auto'\n};\n\nlet allYears = [];\nfor (let i = 1966; i < 2016; i++) {\n  allYears.push(i + 1);\n}\n\nclass YearSelector extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      dropdownOpen: false,\n      yearSelected: '2016'\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  onClick(e) {\n    //this.setState({ yearSelected: e.target.id });\n    this.props.dispatch({\n      type: 'CHANGE_YEAR',\n      yearSelected: e.target.id\n    });\n  }\n\n  render() {\n    let yearArray = allYears.map((year, i) => (\n      <DropdownItem key={i} id={year} onClick={this.onClick}>\n        {year}\n      </DropdownItem>\n    ));\n\n    return (\n      <div>\n        <p> Select Year of Data to be displayed: </p>\n        <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n          <DropdownToggle caret>{this.props.yearSelected}</DropdownToggle>\n          <DropdownMenu style={dropdownMenuStyle}>{yearArray}</DropdownMenu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    yearSelected: state.YearSelectorReducer.yearSelected\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(YearSelector);\n","import React, { Component } from 'react';\n\nimport '../../styles/Header.css';\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle\n} from 'reactstrap';\nimport axios from 'axios/index';\nimport { connect } from 'react-redux';\n\nimport { TRUTHTREE_URI } from '../../constants';\n\nclass Normalization extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownOpen: false,\n      selectedNormalizationDisplayName: 'Gross',\n      selectedNormalizationName: 'GROSS',\n      normalizationValues: []\n    };\n    this.normalizationValuesCall = this.normalizationValuesCall.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.setSelectedNormalization = this.setSelectedNormalization.bind(this);\n  }\n\n  componentDidMount() {\n    this.normalizationValuesCall();\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  setSelectedNormalization(e) {\n    //console.log(e.target.id);\n    //this.setState({selectedNormalizationDisplayName: e.target.value});\n    //this.setState({selectedNormalizationName: e.target.id});\n    this.props.dispatch({\n      type: 'CHANGE_NORMALIZATION',\n      selectedNormalizationName: e.target.id,\n      selectedNormalizationDisplayName: e.target.value\n    });\n  }\n\n  normalizationValuesCall() {\n    axios\n      .get(`${TRUTHTREE_URI}/api/normalization_types`)\n      .then(response => {\n        this.setState({ normalizationValues: response.data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    let values = this.state.normalizationValues.map((value, i) => (\n      <DropdownItem\n        key={i}\n        id={value.name}\n        value={value.displayValue}\n        onClick={this.setSelectedNormalization}\n      >\n        {value.displayValue}\n      </DropdownItem>\n    ));\n\n    return (\n      <div id=\"normalisation\">\n        Normalization attribute:\n        <Dropdown\n          id=\"dropdown\"\n          isOpen={this.state.dropdownOpen}\n          toggle={this.toggle}\n        >\n          <DropdownToggle caret>\n            {' '}\n            {this.props.selectedNormalizationDisplayName}{' '}\n          </DropdownToggle>\n          <DropdownMenu>{values}</DropdownMenu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    selectedNormalizationName:\n      state.NormalizationReducer.selectedNormalizationName,\n    selectedNormalizationDisplayName:\n      state.NormalizationReducer.selectedNormalizationDisplayName\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Normalization);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios/index';\nimport _ from 'lodash';\nimport '../styles/DisplayComponent.css';\nimport { TRUTHTREE_URI } from '../constants';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\n\nimport Normalization from './Explore/Normalization';\nimport { confirmAlert } from 'react-confirm-alert';\n\nclass DisplayComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPopulation: 0,\n      currentLevel: null,\n      data: {},\n      selectedData: {},\n      locationIds: [],\n      selectedAttributes: [],\n      year: 2016,\n      selectedNormalizationName: 'GROSS',\n      populationRange: [-25, 25]\n    };\n    this.populationRangeCall = this.populationRangeCall.bind(this);\n    this.getFormattedName = this.getFormattedName.bind(this);\n    this.attributeCall = this.attributeCall.bind(this);\n    this.colFormatter = this.colFormatter.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      selectedAttributes: nextProps.selectedAttributes,\n      year: nextProps.year,\n      selectedNormalizationName: nextProps.selectedNormalizationName,\n      populationRange: nextProps.populationRange,\n      normalizationKeys: nextProps.normalizationKeys\n    });\n    let currentRows = _.pickBy(this.state.data, e => {\n      return (\n        e['1'] <=\n          this.state.currentPopulation +\n            (nextProps.populationRange[1] / 100) *\n              this.state.currentPopulation &&\n        e['1'] >=\n          this.state.currentPopulation +\n            (nextProps.populationRange[0] / 100) * this.state.currentPopulation\n      );\n    });\n    this.setState({\n      selectedData: currentRows,\n      locationIds: _.keys(currentRows)\n    });\n    // this.setState({ locationIds: _.keys(currentRows) });\n    let attributes = _.flatMap(nextProps.selectedAttributes, elem => {\n      return elem[0];\n    });\n    if (attributes.length > 0) {\n      this.attributeCall(_.keys(currentRows), attributes, nextProps);\n    }\n  }\n\n  attributeCall(locationIds, attributes, nextProps) {\n    let year = nextProps.year ? nextProps.year : 2016;\n    axios\n      .get(\n        '/api/attributes?locationIds=' +\n          locationIds +\n          '&attributeIds=' +\n          attributes +\n          '&normalizationType=' +\n          nextProps.selectedNormalizationName +\n          '&yearList=' +\n          year\n      )\n      .then(response => {\n        let data = this.state.selectedData;\n        _.map(response.data, row => {\n          _.map(row.attributes, elem => {\n            data[row.location_id][elem.attribute_id] =\n              nextProps.selectedNormalizationName === 'PER_CAPITA'\n                ? elem.data[0].per_capita\n                : nextProps.selectedNormalizationName === 'BY_REVENUE'\n                ? elem.data[0].by_revenue\n                : elem.data[0].value;\n          });\n        });\n        this.setState({ selectedData: data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: {},\n      selectedAttributes: this.props.selectedAttributes,\n      year: this.props.yearSelected,\n      selectedNormalizationName: this.props.selectedNormalizationName,\n      populationRange: this.props.populationRange\n    });\n    this.populationRangeCall();\n  }\n\n  getFormattedName(cell) {\n    if (cell.toLowerCase() === this.props.location.replace(/-/g, ' ')) {\n      return <b>{_.capitalize(cell)}</b>;\n    } else {\n      return _.capitalize(cell);\n    }\n  }\n\n  populationRangeCall() {\n    let minPopulation = 0;\n    let maxPopulation = 0;\n    let data = {};\n    let population = 0;\n    let year = this.state.year ? this.state.year : 2016;\n    // Calculate min and max population\n    axios\n      .get(\n        `${TRUTHTREE_URI}/api/population?locationId=` +\n          this.props.id +\n          '&year=' +\n          year\n      )\n      .then(response => {\n        population = response.data.population;\n        if (!population) {\n          confirmAlert({\n            title: 'Oops!',\n            message:\n              'The location you have selected does not seem to have data. Please go back and chose another location.',\n            buttons: [\n              {\n                label: 'OK'\n              }\n            ]\n          });\n        }\n        this.setState({ currentPopulation: population });\n        maxPopulation = Math.floor(population + 0.5 * population);\n        minPopulation = Math.floor(population - 0.5 * population);\n        return axios\n          .get(\n            `${TRUTHTREE_URI}/api/${this.props.level}?populationRange=` +\n              minPopulation +\n              ',' +\n              maxPopulation\n          )\n          .then(response => {\n            _.map(response.data, obj => {\n              data[obj.id] = { name: obj.name, '1': obj.population };\n            });\n            this.setState({ data: data });\n            let currentRows = _.pickBy(this.state.data, e => {\n              return (\n                e['1'] <=\n                  population +\n                    (this.state.populationRange[1] / 100) * population &&\n                e['1'] >=\n                  population +\n                    (this.state.populationRange[0] / 100) * population\n              );\n            });\n            this.setState({ selectedData: currentRows });\n            this.setState({\n              locationIds: _.keys(currentRows)\n            });\n            if (this.props.selectedAttributes) {\n              let attributes = _.flatMap(\n                this.props.selectedAttributes,\n                elem => {\n                  return elem[0];\n                }\n              );\n              this.attributeCall(_.keys(currentRows), attributes, this.state);\n            }\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  colFormatter(cell, row) {\n    let link =\n      'https://www.google.com/search?q=' +\n      row[0] +\n      '+' +\n      this.state.selectedAttributes[0][2] +\n      ' ' +\n      this.state.selectedAttributes[0][1];\n    return (\n      <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n        {cell.toLocaleString()}\n      </a>\n    );\n  }\n\n  render() {\n    var columns = [\n      {\n        dataField: '0',\n        text: 'Name',\n        formatter: this.getFormattedName\n      },\n      {\n        dataField: '1',\n        text: 'Population',\n        sort: true\n      }\n    ];\n    this.state.selectedAttributes.map((column, index) => {\n      columns.push({\n        dataField: (index + 2).toString(),\n        text: column[1],\n        sort: true,\n        formatter: this.colFormatter\n      });\n    });\n    var data = [];\n    _.values(this.state.selectedData).map(row => {\n      var currentRow = {};\n      currentRow['0'] = _.capitalize(row['name']);\n      currentRow['1'] = row['1'].toLocaleString();\n      this.state.selectedAttributes.map((column, i) => {\n        var currentValue = row[column[0]] ? row[column[0]] : '-';\n        currentRow[(i + 2).toString()] = currentValue;\n      });\n      data.push(currentRow);\n    });\n    const { ExportCSVButton } = CSVExport;\n    return (\n      <div id=\"mainDisplay\">\n        <Normalization />\n        <ToolkitProvider keyField=\"0\" data={data} columns={columns} exportCSV>\n          {props => (\n            <div>\n              <ExportCSVButton\n                className=\"btn btn-secondary\"\n                {...props.csvProps}\n              >\n                Export as Csv\n              </ExportCSVButton>\n              <hr />\n              <BootstrapTable hover striped {...props.baseProps} />\n            </div>\n          )}\n        </ToolkitProvider>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => ({\n  year: state.YearSelectorReducer.yearSelected,\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes,\n  populationRange: state.AttributeRangeReducer.populationRange,\n  selectedNormalizationName:\n    state.NormalizationReducer.selectedNormalizationName\n});\n\nexport default connect(mapState)(DisplayComponent);\n","import React, { Component } from 'react';\nimport '../styles/LeftSideBar.css';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { confirmAlert } from 'react-confirm-alert';\n\nimport { TRUTHTREE_URI } from '../constants';\nimport { withRouter } from 'react-router-dom';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nclass LeftSideBar extends Component {\n  constructor(props) {\n    super(props);\n    //   /api/collections?level=state\n    this.state = {\n      sidebarData: [],\n      isLoaded: false,\n      selectedAttributes: [],\n      collapsedLeft: false,\n      searchedString: ''\n    };\n    // Set initial state of each collection to false\n    Object.keys(this.state.sidebarData).map(key => (this.state[key] = false));\n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        `${TRUTHTREE_URI}/api/collections?locationId=` + //382026003\n          this.props.match.params.id // +&year=2016\n      )\n      .then(response => {\n        //data contains the variables\n        this.setState({\n          sidebarData: response.data,\n          isLoaded: true\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // if (this.state.selectedAttributes != nextProps.selectedAttributes) {\n    // this.setState({ selectedAttributes: nextProps.selectedAttributes });\n    //  }\n    //console.log('got prop');\n  }\n\n  isAttributeSelected = attribute_id => {\n    for (let i = 0; i < this.props.selectedAttributes.length; i++) {\n      if (this.props.selectedAttributes[i][0] === attribute_id) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // Toggle state of each collection on click\n  handleClickCollection = collection => {\n    this.setState({ [collection]: !this.state[collection] });\n  };\n\n  // stores attribute selected\n  handleClickAttribute(collection, attribute) {\n    let newArr = this.props.selectedAttributes;\n    let id = attribute.attribute_id;\n    for (let i = 0; i < newArr.length; i++) {\n      if (newArr[i][0] === id) {\n        _.remove(newArr, elem => {\n          return elem === newArr[i];\n        });\n        this.setState({\n          selectedAttributes: newArr\n        });\n\n        this.props.dispatch({\n          type: 'CHANGE_ATTRIBUTE',\n          value: newArr\n        });\n        return;\n      }\n    }\n\n    // To limit number of selected attributes to 10\n    if (newArr.length < 10) {\n      newArr.push([id, attribute.name, collection]);\n      this.setState({\n        selectedAttributes: newArr\n      });\n      this.props.dispatch({\n        type: 'CHANGE_ATTRIBUTE',\n        value: newArr\n      });\n    } else {\n      confirmAlert({\n        title: 'Error!',\n        message:\n          'Number of selected attributes exceeded limit of 10, please remove attributes to add more.',\n        buttons: [\n          {\n            label: 'OK'\n          }\n        ]\n      });\n    }\n  }\n\n  collapseLeftBar() {\n    this.setState({ collapsedLeft: !this.state.collapsedLeft });\n    this.setState({ searchedString: '' });\n  }\n\n  //updates search bar with text\n  handleChangeSearch = event => {\n    let searchString = event.target.value.toLowerCase();\n    searchString = searchString.replace('\\\\', '');\n    searchString = searchString.replace('*', '');\n\n    this.setState({ searchedString: searchString });\n  };\n\n  renderSearchTerm = collection => {\n    if (\n      this.state.searchedString === '' ||\n      this.state.sidebarData[collection].name\n        .toLowerCase()\n        .search(this.state.searchedString) > -1\n    ) {\n      return true;\n    }\n    var attr;\n    for (attr in this.state.sidebarData[collection].attributes) {\n      if (\n        this.state.sidebarData[collection].attributes[attr].name\n          .toLowerCase()\n          .search(this.state.searchedString) > -1\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  render() {\n    var { isLoaded } = this.state;\n    if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      if (this.state.collapsedLeft) {\n        return (\n          <button\n            className=\"LeftSideBarButton\"\n            onClick={() => this.collapseLeftBar()}\n          >\n            <i\n              style={{ color: 'white' }}\n              className={\n                'col-md-flex d-md-flex ' + !this.state.collapsedLeft\n                  ? 'fa fa-chevron-right'\n                  : 'fa fa-chevron-left'\n              }\n            />\n          </button>\n        );\n      } else {\n        return (\n          <nav className=\"scrollLeftBar col-md-2 d-none d-md-block bg-dark sidebar\">\n            <div className=\"row\">\n              <div className=\"col-10\">\n                <input\n                  className=\"form-control leftSearch\"\n                  data-spy=\"affix\"\n                  data-offset-top=\"197\" //trying to make search box stay top\n                  id=\"attribute-search-box\"\n                  onChange={this.handleChangeSearch}\n                  placeholder=\"Search Attributes\"\n                />\n              </div>\n              <button className=\"btn\" onClick={() => this.collapseLeftBar()}>\n                <i\n                  className={\n                    'chevron-icon-padding ' + !this.state.collapsedLeft\n                      ? 'fa fa-chevron-left'\n                      : 'fa fa-chevron-right'\n                  }\n                />\n              </button>\n            </div>\n            <div\n              style={{ display: !this.state.collapsedLeft ? 'block' : 'none' }}\n            >\n              {Object.keys(this.state.sidebarData).map((collection, i) => {\n                if (this.renderSearchTerm(collection)) {\n                  return (\n                    <div key={i}>\n                      <button\n                        className=\"accordion\"\n                        onClick={() => this.handleClickCollection(collection)}\n                      >\n                        {this.state.sidebarData[collection].name}\n                      </button>\n                      <div\n                        style={{\n                          display: this.state[collection] ? 'block' : 'none'\n                        }}\n                      >\n                        {Object.keys(\n                          this.state.sidebarData[collection].attributes\n                        ).map((attr, i) => {\n                          return (\n                            <label\n                              onClick={() =>\n                                this.handleClickAttribute(\n                                  this.state.sidebarData[collection].name,\n                                  this.state.sidebarData[collection].attributes[\n                                    attr\n                                  ]\n                                )\n                              }\n                              key={i}\n                              className=\"panel float-right attributes\"\n                              style={{\n                                background: this.isAttributeSelected(\n                                  this.state.sidebarData[collection].attributes[\n                                    attr\n                                  ].attribute_id\n                                )\n                                  ? '#bfd9d5'\n                                  : 'white'\n                              }}\n                            >\n                              <div>\n                                {\n                                  this.state.sidebarData[collection].attributes[\n                                    attr\n                                  ].name\n                                }\n                              </div>\n                            </label>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  );\n                }\n              })}\n            </div>\n          </nav>\n        );\n      }\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes\n});\n\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(LeftSideBar));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Col, Row } from 'reactstrap';\n\nimport '../styles/AttributeDeselector.css';\n\nclass AttributeDeselector extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedAttributes: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ selectedAttribtes: this.props.selectedAttributes });\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({ selectedAttributes: nextProps.selectedAttributes });\n  }\n\n  deselectAttribute(attribute) {\n    let newArr = this.state.selectedAttributes;\n    let id = attribute[0];\n    for (let i = 0; i < newArr.length; i++) {\n      if (newArr[i][0] === id) {\n        _.remove(newArr, elem => {\n          return elem === newArr[i];\n        });\n        this.setState({\n          selectedAttributes: newArr\n        });\n        this.props.dispatch({\n          type: 'CHANGE_ATTRIBUTE',\n          value: newArr\n        });\n        return;\n      }\n    }\n  }\n\n  render() {\n    if (this.state.selectedAttributes.length < 1) {\n      return (\n        <Row>\n          <Col xs=\"auto\" className=\"filters\">\n            Selected Attributes: None\n          </Col>\n        </Row>\n      );\n    } else {\n      return (\n        <Row>\n          <Col xs=\"auto\" className=\"filters\">\n            Selected Attributes:\n          </Col>\n          <Col>\n            {Object.keys(this.state.selectedAttributes).map((attributes, i) => {\n              return (\n                <button\n                  className=\"btn btn-light selected-attribute-button\"\n                  onClick={() =>\n                    this.deselectAttribute(this.state.selectedAttributes[i])\n                  }\n                >\n                  <i className=\"fa fa-times\" style={{ paddingRight: '10px' }} />\n                  {this.state.selectedAttributes[i][2]}-\n                  {this.state.selectedAttributes[i][1]}\n                </button>\n              );\n            })}\n          </Col>\n        </Row>\n      );\n    }\n  }\n}\n\nconst mapState = state => ({\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes\n});\n\nexport default connect(mapState)(AttributeDeselector);\n","import React, { Component } from 'react';\nimport Slider from 'rc-slider';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport '../styles/AttributeRange.css';\nimport { TRUTHTREE_URI } from '../constants';\n\nconst Range = Slider.Range;\n\nconst marks = {\n  '-50': '-50%',\n  '-40': '-40%',\n  '-30': '-30%',\n  '-20': '-20%',\n  '-10': '-10%',\n  '0': '0%',\n  '10': '10%',\n  '20': '+20%',\n  '30': '+30%',\n  '40': '+40%',\n  '50': '+50%'\n};\n\nclass AttributeRange extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locationPopulation: null,\n      value: [-5, 5],\n      min: -50,\n      max: 50\n    };\n  }\n\n  componentDidMount() {\n    let year = this.props.yearSelected ? this.props.yearSelected : 2016;\n    let url =\n      `${TRUTHTREE_URI}/api/population?locationId=` +\n      this.props.locationId +\n      '&year=' +\n      year;\n    let locPop = null;\n\n    axios\n      .get(url)\n      .then(res => {\n        locPop = res.data.population;\n        this.setState({ locationPopulation: locPop });\n      })\n      .catch(err => console.log(err));\n  }\n\n  onSliderChange = value => {\n    console.log();\n    this.props.dispatch({\n      type: 'RANGE_SELECTION',\n      populationRange: value\n    });\n  };\n\n  render() {\n    const createSliders = this.props.attribute.attributeName.map(\n      (currentAttribute, i) => (\n        <div className=\"outer\" key={i}>\n          <p>\n            {currentAttribute} of {this.props.location} {':  '}{' '}\n            <b>{this.state.locationPopulation}</b>\n          </p>\n          <p className=\"no-margin\">\n            Select range of {currentAttribute} for filtering other{' '}\n            {this.props.level}:{' '}\n            <b>\n              {this.props.attribute.populationRange[0]}% to{' '}\n              {this.props.attribute.populationRange[1]}%\n            </b>\n          </p>\n          <p className=\"Note\">\n            (*range selection available from -50% to +50% wrt to{' '}\n            {this.props.location} {currentAttribute})\n          </p>\n\n          <Range\n            dots\n            step={5}\n            value={this.props.attribute.populationRange}\n            min={this.state.min}\n            max={this.state.max}\n            marks={marks}\n            onChange={this.onSliderChange}\n          />\n        </div>\n      )\n    );\n\n    return (\n      <div>\n        <div>\n          <div> {createSliders} </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    year: state.YearSelectorReducer.yearSelected,\n    attribute: state.AttributeRangeReducer\n  };\n};\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AttributeRange);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tab extends Component {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  };\n\n  render() {\n    const {\n      onClick,\n      props: { activeTab, label }\n    } = this;\n\n    let className = 'tab-list-item';\n\n    if (activeTab === label) {\n      className += ' tab-list-active';\n    }\n\n    return (\n      <li className={className} onClick={onClick}>\n        {label}\n      </li>\n    );\n  }\n}\n\nexport default Tab;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Tab from './Tab';\nimport '../../styles/Tab.css';\n\nclass Tabs extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Array).isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: this.props.children[0].props.label\n    };\n  }\n\n  onClickTabItem = tab => {\n    this.setState({ activeTab: tab });\n  };\n\n  render() {\n    const {\n      onClickTabItem,\n      props: { children },\n      state: { activeTab }\n    } = this;\n\n    return (\n      <div className=\"tabs\">\n        <ol className=\"tab-list\">\n          {children.map(child => {\n            const { label } = child.props;\n\n            return (\n              <Tab\n                activeTab={activeTab}\n                key={label}\n                label={label}\n                onClick={onClickTabItem}\n              />\n            );\n          })}\n        </ol>\n        <div className=\"tab-content\">\n          {children.map(child => {\n            if (child.props.label !== activeTab) return undefined;\n            return child.props.children;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\n","import React, { Component } from 'react';\nimport { Badge } from 'reactstrap';\n\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend\n} from 'recharts';\nimport '../../styles/TimeSeries.css';\n\nclass TimeSeries extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const attributeName = this.props.attributeName;\n    if (this.props.condition === 'large') {\n      return (\n        <div className=\"chartDiv\">\n          <div style={{ padding: '10px' }}>\n            <Badge color=\"info\" className=\"popupHeader\">\n              {this.props.collectionName} - {this.props.attributeName}\n            </Badge>\n          </div>\n\n          <LineChart\n            width={1050}\n            height={450}\n            data={this.props.data}\n            margin={{ top: 5, right: 5, bottom: 5, left: 5 }}\n          >\n            <CartesianGrid\n              className=\"chartDiv\"\n              stroke=\"#ccc\"\n              strokeDasharray=\"5 5\"\n              padding={{ left: 20, right: 20 }}\n            />\n            <XAxis\n              dataKey=\"year\"\n              label={{\n                value: 'Year',\n                position: 'insideBottom'\n              }}\n            />\n            <YAxis\n              label={{\n                value: attributeName,\n                angle: -90,\n                position: 'insideLeft'\n              }}\n            />\n            <Tooltip />\n            <Legend verticalAlign=\"bottom\" iconSize={10} />\n            {this.props.locations.map((location, i) => (\n              <Line\n                key={location.name}\n                type=\"monotone\"\n                dataKey={location.name}\n                stroke={location.color}\n                isAnimationActive={false}\n              />\n            ))}\n          </LineChart>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"chartDiv\">\n          <div style={{ padding: '10px' }}>\n            <Badge color=\"info\"> {this.props.collectionName} - {this.props.attributeName} </Badge>\n          </div>\n          <LineChart\n            width={495}\n            height={200}\n            data={this.props.data}\n            margin={{ top: 5, right: 5, bottom: 5, left: 5 }}\n          >\n            <CartesianGrid\n              className=\"chartDiv\"\n              stroke=\"#ccc\"\n              strokeDasharray=\"5 5\"\n              padding={{ left: 20, right: 20 }}\n            />\n            <XAxis\n              dataKey=\"year\"\n              label={{\n                value: 'Year',\n                position: 'insideBottom'\n              }}\n            />\n            <YAxis\n              label={{\n                value: attributeName,\n                angle: -90,\n                position: 'insideLeft'\n              }}\n            />\n            <Tooltip />\n            {this.props.locations.map((location, i) => (\n              <Line\n                key={location.name}\n                type=\"monotone\"\n                dataKey={location.name}\n                stroke={location.color}\n                isAnimationActive={false}\n              />\n            ))}\n          </LineChart>\n        </div>\n      );\n    }\n  }\n}\n\nexport default TimeSeries;\n","import React, { Component } from 'react';\nimport { Spinner, Button } from 'reactstrap';\nimport axios from 'axios/index';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport TimeSeriesChart from './TimeSeriesChart';\nimport { TRUTHTREE_URI } from '../../constants';\n\nclass TimeSeriesView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      locations: [],\n      data: [],\n      locationData: [],\n      currentLevel: null,\n      dataReal: [],\n      locationIds: [],\n      lineColors: [\n        'red',\n        'purple',\n        'green',\n        'blue',\n        'deeppink',\n        'orange',\n        'navy',\n        'slategray',\n        'lime',\n        'indianred',\n        'dimgrey'\n      ],\n      populationRange: [-25, 25]\n    };\n    this.fetchResponse = this.fetchResponse.bind(this);\n    this.formatResponse = this.formatResponse.bind(this);\n    this.initializeYearMap = this.initializeYearMap.bind(this);\n    this.fetchLocations = this.fetchLocations.bind(this);\n  }\n\n  componentDidMount() {\n    const len = this.props.selectedAttributes.length;\n    if (len !== 0) {\n      this.fetchLocations();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      selectedAttributes: nextProps.selectedAttributes\n    });\n    const len = this.props.selectedAttributes.length;\n    if (len !== 0) {\n      this.fetchLocations();\n    }\n  }\n\n  fetchLocations() {\n    let minPopulation = 0;\n    let maxPopulation = 0;\n    let year = this.props.yearSelected ? this.props.yearSelected : 2016;\n    let locationIds = [];\n    let data = {};\n    let population = 0;\n    // Calculate min and max population\n    axios\n      .get(\n        `${TRUTHTREE_URI}/api/population?locationId=` +\n          this.props.id +\n          '&year=' +\n          year\n      )\n      .then(response => {\n        population = response.data.population;\n        this.setState({ currentPopulation: population });\n        maxPopulation = Math.floor(population + 0.5 * population);\n        minPopulation = Math.floor(population - 0.5 * population);\n        return axios\n          .get(\n            `${TRUTHTREE_URI}/api/${this.props.level}?populationRange=` +\n              minPopulation +\n              ',' +\n              maxPopulation\n          )\n          .then(response => {\n            _.map(response.data, obj => {\n              data[obj.id] = { name: obj.name, '1': obj.population };\n            });\n            this.setState({ locationData: data });\n            let currentRows = _.pickBy(data, e => {\n              return (\n                e['1'] <=\n                  population +\n                    (this.props.populationRange[1] / 100) * population &&\n                e['1'] >=\n                  population +\n                    (this.props.populationRange[0] / 100) * population\n              );\n            });\n            this.setState({\n              locationIds: _.map(_.keys(currentRows), _.toInteger)\n            });\n            this.setState({ locationData: data });\n            this.props.updateLocation(data, this.state.locationIds);\n            this.fetchResponse();\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  fetchResponse() {\n    let url =\n      `${TRUTHTREE_URI}/api/attributes?locationIds=` +\n      this.state.locationIds +\n      '&attributeIds=' +\n      this.props.selectedAttributes[this.props.index][0] +\n      '&normalizationType=' +\n      this.props.selectedNormalization;\n    axios\n      .get(url)\n      .then(response => {\n        console.log(response);\n        this.formatResponse(response);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  formatResponse(response) {\n    let data = [];\n    let locations = [];\n    let map = {};\n\n    response.data.map(dataForEachLocation => {\n      let location = {};\n      let lData = this.state.locationData[dataForEachLocation.location_id];\n      let locationName = lData['name'];\n      dataForEachLocation.attributes.map(attributesForEachLocation => {\n        attributesForEachLocation.data.map(attrValue => {\n          let val = map[attributesForEachLocation.attribute_id];\n          if (val === undefined) {\n            val = this.initializeYearMap();\n          }\n          let da = val[attrValue.year - 1967];\n          if (\n            da[dataForEachLocation.location_id] === 0 ||\n            da[dataForEachLocation.location_id] === undefined\n          ) {\n            if (this.props.selectedNormalization === 'GROSS') {\n              val[attrValue.year - 1967][locationName] = attrValue.value;\n            } else if (this.props.selectedNormalization === 'PER_CAPITA') {\n              val[attrValue.year - 1967][locationName] = attrValue.per_capita;\n            } else if (this.props.selectedNormalization === 'BY_REVENUE') {\n              val[attrValue.year - 1967][locationName] = attrValue.by_revenue;\n            }\n          }\n          map[attributesForEachLocation.attribute_id] = val;\n          return null;\n        });\n        if (\n          this.props.userSelectedLocations.includes(\n            dataForEachLocation.location_id\n          )\n        ) {\n          location['id'] = dataForEachLocation.location_id;\n          // let select = this.state.lineColors[Math.floor(Math.random() * 11)];\n          let select = this.state.lineColors[locations.length - 1];\n          location['color'] = select;\n          location['name'] = locationName;\n          locations.push(location);\n        }\n        return null;\n      });\n      return null;\n    });\n    data.push(map);\n    this.setState({ data: data, locations: locations, loading: false });\n  }\n\n  initializeYearMap() {\n    let yearArr = [];\n    for (let i = 1967; i < 2017; i++) {\n      let yearEntry = { year: i };\n      yearArr.push(yearEntry);\n    }\n    return yearArr;\n  }\n\n  render() {\n    const len = this.props.selectedAttributes.length;\n\n    const { loading } = this.state;\n\n    if (len === 0) {\n      return <div>Select an attribute</div>;\n    } else {\n      if (loading) {\n        return (\n          <div className=\"d-flex justify-content-center\">\n            <Spinner\n              className=\"align-self-center\"\n              color=\"secondary\"\n              size=\"sm\"\n            />\n          </div>\n        );\n      } else {\n        return this.state.data.map((attrData, i) => {\n          return (\n            <TimeSeriesChart\n              data={\n                attrData[this.props.selectedAttributes[this.props.index][i]]\n              }\n              attributeName={this.props.selectedAttributes[this.props.index][1]}\n              collectionName={\n                this.props.selectedAttributes[this.props.index][2]\n              }\n              locations={this.state.locations}\n              condition={this.props.condition}\n            />\n          );\n        });\n      }\n    }\n  }\n}\n\nconst mapState = state => ({\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes,\n  year: state.YearSelectorReducer.yearSelected,\n  populationRange: state.AttributeRangeReducer.populationRange,\n  selectedNormalization: state.NormalizationReducer.selectedNormalizationName\n});\nexport default connect(mapState)(TimeSeriesView);\n","import React, { Component } from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardHeader,\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Badge\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { confirmAlert } from 'react-confirm-alert';\nimport domtoimage from 'dom-to-image';\n\nimport TimeSeriesView from './TimeSeriesView';\nimport Normalization from './Normalization';\n\nimport '../../styles/TimeSeries.css';\n\nclass GridTest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      locations: {},\n      locationIds: [],\n      userSelectedLocations: []\n    };\n\n    this.modalToggle = this.modalToggle.bind(this);\n    this.updateLocation = this.updateLocation.bind(this);\n    this.renderLocationList = this.renderLocationList.bind(this);\n    this.selectLocations = this.selectLocations.bind(this);\n    this.ImageCapture = this.ImageCapture.bind(this);\n  }\n\n  ImageCapture = () => {\n    var newRef = this.refs.image;\n    const fileName = this.attrId;\n    console.log(fileName);\n    domtoimage\n      .toJpeg(newRef, { quality: 1 })\n      .then(function(dataUrl) {\n        var link = document.createElement('a');\n        link.download = 'TruthTree.jpeg';\n        link.href = dataUrl;\n        link.click();\n      })\n      .catch(function(error) {\n        console.error('oops, something went wrong!', error);\n      });\n  };\n  modalToggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  getAttributeNames(type) {\n    return _.flatMap(this.props.selectedAttributes, elem => {\n      return type === 'name' ? elem[1] : elem[0];\n    });\n  }\n\n  updateLocation(locations, locationIds) {\n    let defaultLocations = this.state.userSelectedLocations;\n    if (defaultLocations.length === 0) {\n      if (locationIds.length > 10) {\n        defaultLocations = locationIds.slice(0, 10);\n      } else {\n        defaultLocations = locationIds;\n      }\n    }\n    this.setState({\n      locations,\n      locationIds,\n      userSelectedLocations: defaultLocations\n    });\n  }\n\n  selectLocations(event) {\n    let selected = Object.assign([], this.state.userSelectedLocations);\n    let clickedLocation = parseInt(event.target.value);\n    if (selected.includes(clickedLocation)) {\n      selected = selected.filter(val => {\n        return val !== clickedLocation;\n      });\n      this.setState({ userSelectedLocations: selected });\n    } else if (selected.length < 10) {\n      selected.push(clickedLocation);\n      this.setState({ userSelectedLocations: selected });\n    } else {\n      confirmAlert({\n        title: 'Error!',\n        message:\n          'Number of selected locations exceeded limit of 10, please remove existing location to add more.',\n        buttons: [\n          {\n            label: 'OK'\n          }\n        ]\n      });\n    }\n  }\n\n  renderLocationList() {\n    let locationlist = this.state.locationIds.map(location => {\n      return (\n        <Col\n          sm=\"3\"\n          className=\"form-check checkbox checkbox-circle checkbox-yellow\"\n        >\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            value={location}\n            id=\"checkbox-input\"\n            checked={this.state.userSelectedLocations.includes(location)}\n            onClick={this.selectLocations}\n          />\n          <label className=\"form-check-label\" htmlFor=\"checkbox-input\">\n            {this.state.locations[location].name}\n          </label>\n        </Col>\n      );\n    });\n    return <Row className=\"location-list-padding\">{locationlist}</Row>;\n  }\n\n  handExpandClick = attrId =>\n    this.setState({\n      modal: true,\n      modalAttrIndex: attrId\n    });\n\n  render() {\n    let attributes = this.getAttributeNames('name');\n    let len = attributes.length;\n\n    let cards = attributes.map((card, index) => {\n      return (\n        <Card key={index}>\n          <CardBody className=\"time-series-card\">\n            <TimeSeriesView\n              index={index}\n              condition=\"tiny\"\n              id={this.props.id}\n              level={this.props.level}\n              updateLocation={this.updateLocation}\n              userSelectedLocations={this.state.userSelectedLocations}\n            />\n            <Button\n              className=\"button\"\n              color=\"secondary\"\n              onClick={() => this.handExpandClick(index)}\n            >\n              <Badge>Expand</Badge>\n            </Button>\n          </CardBody>\n        </Card>\n      );\n    });\n\n    if (len === 0) {\n      return (\n        <Container className=\"alert\">\n          {' '}\n          Please select minimum of one attribute{' '}\n        </Container>\n      );\n    } else {\n      return (\n        <Container className=\"GridContainer\">\n          <Row>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Normalization />\n                </Row>\n                <hr />\n                <Row className=\"SelectedLocations\">\n                  <i>\n                    Select locations from the selected range to be plotted in\n                    the graph:{' '}\n                  </i>\n                  {this.renderLocationList()}\n                </Row>\n              </CardBody>\n            </Card>\n          </Row>\n          <Row>\n            {' '}\n            <div className=\"Space\" />\n          </Row>\n          <Row>\n            {cards}\n            <Modal\n              isOpen={this.state.modal}\n              toggle={this.modalToggle}\n              className=\"GridModal\"\n            >\n              <div ref=\"image\">\n                <ModalBody className=\"backgroundWhite\">\n                  <TimeSeriesView\n                    index={this.state.modalAttrIndex}\n                    condition=\"large\"\n                    id={this.props.id}\n                    updateLocation={this.updateLocation}\n                    userSelectedLocations={this.state.userSelectedLocations}\n                    level={this.props.level}\n                  />\n                </ModalBody>\n              </div>\n              <ModalFooter>\n                <Button color=\"secondary\" onClick={this.ImageCapture}>\n                  Download\n                </Button>\n                <Button color=\"secondary\" onClick={this.modalToggle}>\n                  Cancel\n                </Button>\n              </ModalFooter>\n            </Modal>\n          </Row>\n        </Container>\n      );\n    }\n  }\n}\n\nconst mapState = state => ({\n  selectedAttributes: state.SelectedAttributeReducer.selectedAttributes\n});\nexport default connect(mapState)(GridTest);\n","import React, { Component } from 'react';\nimport '../styles/LeftSideBar.css';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { confirmAlert } from 'react-confirm-alert';\n\nimport { TRUTHTREE_URI } from '../constants';\nimport { withRouter } from 'react-router-dom';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { Col, Row } from 'reactstrap';\n\nimport '../styles/AttributeDeselector.css';\n\nclass StoryCreationComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: false,\n      selectedAttributes: [],\n      authorField: '',\n      tagsField: [],\n      storyField: ''\n    };\n    // Set initial state of each collection to false\n  }\n\n  componentDidMount() {\n    /* axios\n           .get(\n             `${TRUTHTREE_URI}/api/collections?locationId=` + //382026003\n               this.props.match.params.id // +&year=2016\n           )\n           .then(response => {\n             //data contains the variables\n             this.setState({\n               sidebarData: response.data,\n               isLoaded: true\n             });\n           })\n           .catch(error => {\n             console.log(error);\n           });*/\n  }\n\n  componentWillReceiveProps(nextProps) {\n    //    this.setState({ tagsField: nextProps.selectedAttributes });\n    //    console.log(this.state.tagsField)\n  }\n\n  handleChangeAuthor = event => {\n    let author = event.target.value.toLowerCase();\n    author = author.replace('\\\\', '');\n    author = author.replace('*', '');\n    this.setState({ authorField: author });\n  };\n\n  handleChangeTags = event => {\n    let tag = event.target.value.toLowerCase();\n    tag = tag.replace('\\\\', '');\n    tag = tag.replace('*', '');\n    if (_.endsWith(tag, ' ')) {\n      let newArr = this.state.tagsField;\n      newArr.push(tag);\n      this.setState({\n        selectedAttributes: newArr\n      });\n      console.log(this.state.tagsField);\n    }\n  };\n\n  handleChangeStory = event => {\n    let story = event.target.value.toLowerCase();\n    story = story.replace('\\\\', '');\n    story = story.replace('*', '');\n    this.setState({ storyField: story });\n  };\n  /*\n    deselectAttribute(attribute) {\n        let newArr = this.state.selectedAttributes;\n        let id = attribute[0];\n        for (let i = 0; i < newArr.length; i++) {\n            if (newArr[i][0] === id) {\n                _.remove(newArr, elem => {\n                    return elem === newArr[i];\n                });\n                this.setState({\n                    selectedAttributes: newArr\n                });\n                this.props.dispatch({\n                    type: 'CHANGE_ATTRIBUTE',\n                    value: newArr\n                });\n                return;\n            }\n        }\n    }\n    */\n  render() {\n    var { isLoaded } = this.state;\n    var active = false;\n\n    return (\n      <div>\n        <p>Tell us what you found!</p>\n        <input\n          className=\"form-control\"\n          data-spy=\"affix\"\n          data-offset-top=\"197\"\n          //id=\"attribute-search-box\"\n          onChange={this.handleChangeAuthor}\n          placeholder=\"Author Name\"\n        />\n        <br />\n        <input\n          className=\"form-control\"\n          data-spy=\"affix\"\n          data-offset-top=\"197\"\n          // id=\"attribute-search-box\"\n          //onChange={this.handleChangeSearch}\n          placeholder=\"Tags\"\n        />\n        <Row>\n          <Col xs=\"auto\" className=\"filters\">\n            Selected Tags:\n          </Col>\n          <Col>\n            {Object.keys(this.state.tagsField).map((attributes, i) => {\n              return (\n                <button\n                  className=\"btn btn-light selected-attribute-button\"\n                  /* onClick={() =>\n                                    this.deselectAttribute(this.state.selectedAttributes[i])\n                                }*/\n                >\n                  <i className=\"fa fa-times\" style={{ paddingRight: '10px' }} />\n                  {this.state.tagsField[i][2]}-{this.state.tagsField[i][1]}\n                </button>\n              );\n            })}\n          </Col>\n        </Row>\n        <br />\n        <textarea\n          className=\"form-control\"\n          rows=\"5\"\n          data-spy=\"affix\"\n          data-offset-top=\"197\"\n          //id=\"attribute-search-box\"\n          onChange={this.handleChangeStory}\n          placeholder=\"Story\"\n        />\n        <button\n          className=\"btn btn-light selected-attribute-button\"\n          onClick={\n            () => console.log('Submitted form')\n            //    this.deselectAttribute(this.state.selectedAttributes[i])\n          }\n        >\n          <i className=\"fa\" />\n          SUBMIT STORY\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(StoryCreationComponent));\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport '../styles/Home.css';\nimport { Card, CardBody, CardHeader } from 'reactstrap';\n\nimport DisplayComponent from './DisplayComponent';\nimport LeftSideBar from './LeftSideBar';\nimport YearSelector from './YearSelector';\nimport AttributeDeselector from './AttributeDeselector';\nimport Filters from './AttributeRange';\nimport Tabs from './Explore/Tabs';\nimport TimeSeriesGrid from './Explore/TimeSeriesGrid';\nimport StoryCreationComponent from './StoryCreationComponent';\n\nconst homeStyle = {\n  paddingTop: 75\n};\n\nclass Home extends Component {\n  render() {\n    return (\n      <Container fluid style={homeStyle} className=\"home\">\n        <Row>\n          <LeftSideBar />\n\n          <div className=\"col-12 col-md-10 align-items-center padding\">\n            <Card className=\"selected-attributes padding\">\n              <AttributeDeselector />\n            </Card>\n\n            <Card className=\"right-panel\">\n              <Tabs>\n                <div label=\"Table View\">\n                  <DisplayComponent\n                    level={this.props.match.params.level}\n                    id={this.props.match.params.id}\n                    location={this.props.match.params.name}\n                  />\n                </div>\n\n                <div label=\"Time Series View\">\n                  <TimeSeriesGrid\n                    id={this.props.match.params.id}\n                    level={this.props.match.params.level}\n                  />\n                </div>\n\n                <div label=\"Create a Story\">\n                  <StoryCreationComponent />\n                </div>\n              </Tabs>\n            </Card>\n\n            <Card className=\"bottom-panel\">\n              <CardHeader className=\"bottom-panel-header\">\n                <div>\n                  Selected Location: <b>{this.props.match.params.name}</b>\n                </div>\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col className=\"border-right\">\n                    <Filters\n                      level={this.props.match.params.level}\n                      location={this.props.match.params.name}\n                      locationId={this.props.match.params.id}\n                    />\n                  </Col>\n                  <Col sm=\"2\" xs=\"2\">\n                    <YearSelector />\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </div>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Home;\n","export const updateValue = value => {\n  return {\n    type: 'SEARCHBOX_UPDATE_VALUE',\n    payload: value\n  };\n};\n\nexport const finishLoading = () => {\n  return {\n    type: 'SEARCHBOX_FINISH_LOADING'\n  };\n};\n","import React, { Component } from 'react';\nimport { Container, Row, Col, Spinner, Input } from 'reactstrap';\nimport { get } from 'axios';\nimport Fuse from 'fuse.js';\nimport Autosuggest from 'react-autosuggest';\nimport { Link, withRouter } from 'react-router-dom';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\n\nimport {\n  updateValue,\n  finishLoading\n} from '../../actions/LocationSearchBoxActions';\n\n// TruthTree API endpoints\nconst ENDPOINTS = {\n  STATES: `/api/states`,\n  COUNTIES: `/api/counties`,\n  CITIES: `/api/cities`\n};\n\nconst TYPE_CODE = {\n  0: 'states',\n  1: 'counties',\n  2: 'cities'\n};\n\nconst createFuseOptions = keys => {\n  return {\n    threshold: 0.6,\n    includeScore: true,\n    location: 0,\n    distance: 100,\n    maxPatternLength: 32,\n    minMatchCharLength: 2,\n    keys: keys\n  };\n};\n\nconst renderSuggestionsContainer = ({ containerProps, children }) => {\n  const style = {\n    height: '5em'\n  };\n  return (\n    <div style={style} {...containerProps}>\n      {children}\n    </div>\n  );\n};\n\nconst getSuggestionLabel = suggestion => {\n  let item = suggestion.item;\n  let label = item.name;\n  if (item.typeCode !== 1) {\n    label += item.county ? `, ${item.county}` : '';\n  }\n  label += item.stateAbbr ? `, ${item.stateAbbr}` : '';\n  return label;\n};\n\nconst renderSuggestion = suggestion => {\n  let item = suggestion.item;\n  const url = `/explore/${\n    TYPE_CODE[item.type_code]\n  }/${item.name.toLowerCase().replace(' ', '-')}/${item.id}`;\n  return <Link to={url}>{getSuggestionLabel(suggestion)}</Link>;\n};\n\nclass LocationSearchBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      popoverOpen: false,\n      statesData: undefined,\n      countiesData: undefined,\n      citiesData: undefined,\n      matchedStates: [],\n      matchedCounties: [],\n      matchedCities: [],\n      suggestions: []\n    };\n    this.debouncedhandleSuggestionsFetchRequested = _.debounce(\n      this.handleSuggestionsFetchRequested,\n      250\n    );\n  }\n\n  componentDidMount() {\n    const reqs = [\n      get(ENDPOINTS.STATES),\n      get(ENDPOINTS.COUNTIES),\n      get(ENDPOINTS.CITIES)\n    ];\n\n    Promise.all(reqs)\n      .then(([statesRes, countiesRes, citiesRes]) => {\n        this._parseData(statesRes.data, countiesRes.data, citiesRes.data);\n      })\n      .catch(err => console.log(err));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.value !== prevProps.value) {\n      this.inputRef.focus();\n    }\n  }\n\n  _parseData = (statesData, countiesData, citiesData) => {\n    const statesDataById = statesData.reduce((newStatesData, state) => {\n      newStatesData[state.state_code] = state;\n      state.counties = {};\n      state.type_code = 0;\n      return newStatesData;\n    }, {});\n\n    countiesData.forEach(county => {\n      const state = statesDataById[county.fips_code_state];\n      county.state = state.name;\n      county.stateAbbr = state.abbreviation;\n      state.counties[county.county] = county;\n    });\n\n    citiesData.forEach(city => {\n      const state = statesDataById[city.fips_code_state];\n      const county = state.counties[city.county];\n\n      if (state) {\n        city.state = state.name;\n        city.stateAbbr = state.abbreviation;\n      } else {\n        city.state = null;\n        city.stateAbbr = null;\n      }\n      city.county = county ? county.name : null;\n    });\n\n    const statesFuseOptions = createFuseOptions([\n      { name: 'abbreviation', weight: 0.3 },\n      { name: 'name', weight: 0.7 }\n    ]);\n\n    const countiesFuseOptions = createFuseOptions([\n      { name: 'name', weight: 0.6 },\n      { name: 'state', weight: 0.3 },\n      { name: 'stateAbbr', weight: 0.1 }\n    ]);\n\n    const citiesFuseOptions = createFuseOptions([\n      { name: 'name', weight: 0.7 },\n      { name: 'state', weight: 0.2 },\n      { name: 'stateAbbr', weight: 0.05 },\n      { name: 'county', weight: 0.05 }\n    ]);\n\n    this.setState(\n      {\n        statesData: new Fuse(statesData, statesFuseOptions),\n        countiesData: new Fuse(countiesData, countiesFuseOptions),\n        citiesData: new Fuse(citiesData, citiesFuseOptions)\n      },\n      () => {\n        this.props.dispatch(finishLoading());\n      }\n    );\n  };\n\n  storeInputRef = searchBox => {\n    if (searchBox !== null) {\n      this.input = searchBox.input;\n    }\n  };\n\n  handleInputChange = (_, { newValue }) => {\n    this.props.dispatch(updateValue(newValue));\n  };\n\n  handleSuggestionsFetchRequested = ({ value }) => {\n    const searchPhrase = value;\n    const matchedStates = this.state.statesData.search(searchPhrase);\n    const matchedCounties = this.state.countiesData.search(searchPhrase);\n    const matchedCities = this.state.citiesData.search(searchPhrase);\n    const temp = [].concat(matchedStates, matchedCounties, matchedCities);\n    temp.sort((a, b) => a.score - b.score);\n    this.setState({\n      suggestions: temp.slice(0, 10)\n    });\n  };\n  renderInputComponent = inputProps => (\n    <div>\n      <Input\n        {...inputProps}\n        id=\"location-search-box\"\n        name=\"location-search-box\"\n        placeholder=\"Try something like Seattle or Boston\"\n        innerRef={input => {\n          this.inputRef = input;\n        }}\n      />\n    </div>\n  );\n\n  render() {\n    const { loading, value } = this.props;\n\n    const inputProps = {\n      value,\n      onChange: this.handleInputChange\n    };\n\n    return (\n      <Container>\n        <Row>\n          {loading ? (\n            <Col className=\"d-flex justify-content-center\">\n              <Spinner className=\"align-self-center\" color=\"primary\" />\n            </Col>\n          ) : (\n            <Col>\n              <Autosuggest\n                ref={this.storeInputRef}\n                theme={{\n                  container: 'position-relative',\n                  suggestionsList:\n                    'list-group position-absolute w-100 overflow-y',\n                  suggestion: 'list-group-item'\n                }}\n                suggestions={this.state.suggestions}\n                onSuggestionsClearRequested={() =>\n                  this.setState({ suggestions: [] })\n                }\n                onSuggestionsFetchRequested={\n                  this.debouncedhandleSuggestionsFetchRequested\n                }\n                getSuggestionValue={getSuggestionLabel}\n                renderInputComponent={this.renderInputComponent}\n                renderSuggestionsContainer={renderSuggestionsContainer}\n                renderSuggestion={renderSuggestion}\n                inputProps={inputProps}\n              />\n            </Col>\n          )}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  value: store.LocationSearchBoxReducer.value,\n  loading: store.LocationSearchBoxReducer.loading\n});\n\nexport default connect(mapStateToProps)(withRouter(LocationSearchBox));\n","import React, { Component } from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Collapse,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavItem,\n  NavLink,\n  NavbarToggler\n} from 'reactstrap';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport LocationSearchBox from './Explore/LocationSearchBox';\n\nimport '../styles/Header.css';\nimport logo from '../truthtree-logo.png';\n\nconst navbarStyle = {\n  backgroundColor: 'rgba(13, 22, 38, 0.8)'\n};\n\nconst navBrandStyle = {\n  '&:hover': {\n    textDecoration: 'none'\n  }\n};\n\nconst logoStyle = {\n  width: 50\n};\n\nclass Header extends Component {\n  state = {\n    collapseOpen: false\n  };\n\n  render() {\n    const { searchPhrase } = this.props;\n    const searchBoxContainerClasses = classNames({\n      'justify-content-center': true,\n      'd-none': searchPhrase === ''\n    });\n    return (\n      <Navbar style={navbarStyle} expand=\"md\" className=\"fixed-top\">\n        <NavbarBrand className=\"text-primary\" style={navBrandStyle}>\n          <Link to=\"/\">\n            <img\n              src={logo}\n              style={logoStyle}\n              className=\"d-inline-block\"\n              alt=\"TruthTree logo\"\n            />\n          </Link>\n          &nbsp;TruthTree\n        </NavbarBrand>\n        <NavbarToggler\n          onClick={() =>\n            this.setState({ collapseOpen: !this.state.collapseOpen })\n          }\n        />\n        <Collapse isOpen={this.state.collapseOpen} navbar>\n          <Container>\n            <Row className={searchBoxContainerClasses}>\n              <Col md={10} lg={7}>\n                <LocationSearchBox />\n              </Col>\n            </Row>\n          </Container>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink tag={Link} to=\"/\">\n                Explore\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to=\"/stories\">\n                Stories\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to=\"/about\">\n                About\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  searchPhrase: store.LocationSearchBoxReducer.value\n});\n\nexport default withRouter(connect(mapStateToProps)(Header));\n","import React, { Component } from 'react';\nimport { Container, Jumbotron } from 'reactstrap';\nimport '../../styles/About.css';\n\nconst aboutStyle = {\n  paddingTop: 70\n};\n\nclass About extends Component {\n  render() {\n    return (\n      <Container fluid style={aboutStyle} className=\"about\">\n        <Jumbotron className=\"float-center\">\n          <h1 className=\"text-primary\">TruthTree</h1>\n          <p>A Public Data Vizipedia/Wiki-Laboratory</p>\n          <hr className=\"my-2\" />\n          <p className=\"lead\">\n            TruthTree seeks to unite all the public data in the world into a\n            data-visualization tool and reference platform that can facilitate\n            data-driven understanding and consensus regarding geography,\n            politics, and culture for geographical entities at all scales.\n          </p>\n          <p className=\"lead\" />\n        </Jumbotron>\n      </Container>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n\nimport mapStyles from './mapStyles.json';\n\nconst mapContainerStyle = {\n  height: '100%',\n  width: '100%'\n};\n\nclass Map extends Component {\n  state = {\n    center: {\n      lat: 37.09024,\n      lng: -95.712891\n    },\n    zoom: 5\n  };\n\n  handleApiLoaded = (map, maps) => {\n    map.setOptions({\n      styles: mapStyles,\n      fullscreenControlOptions: {\n        position: maps.ControlPosition.BOTTOM_RIGHT\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div style={mapContainerStyle} className=\"position-absolute\">\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: 'AIzaSyD6S0fXIE22l64bV3nhv-EB-7K1gh39nqs' }}\n          defaultCenter={this.state.center}\n          defaultZoom={this.state.zoom}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({ map, maps }) => this.handleApiLoaded(map, maps)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Map;\n","import React, { Component } from 'react';\nimport { Container, Row, Col, Label, Input, Spinner } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { updateValue } from '../../actions/LocationSearchBoxActions';\n\nclass DummySearchBox extends Component {\n  handleInputChange = event => {\n    event.target.blur();\n    this.props.dispatch(updateValue(event.target.value));\n  };\n\n  render() {\n    const { value, loading } = this.props;\n    return (\n      <Container>\n        <Row className=\"py-3\">\n          {loading ? (\n            <Col className=\"d-flex justify-content-center\">\n              <Spinner className=\"align-self-center\" color=\"primary\" />\n            </Col>\n          ) : (\n            <Col>\n              <Label\n                style={{ cursor: 'pointer', color: 'white' }}\n                for=\"dummy-search-box\"\n              >\n                Search for a U.S location:\n              </Label>\n              <Input\n                id=\"dummy-search-box\"\n                value={value}\n                onChange={this.handleInputChange}\n                placeholder=\"Try something like Seattle or Boston\"\n              />\n            </Col>\n          )}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  value: store.LocationSearchBoxReducer.value,\n  loading: store.LocationSearchBoxReducer.loading\n});\n\nexport default connect(mapStateToProps)(DummySearchBox);\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport Typist from 'react-typist';\nimport { Link } from 'react-router-dom';\n\nconst introHeadingStyle = {\n  color: 'white'\n};\n\nclass IntroHeading extends Component {\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col style={introHeadingStyle}>\n            <h1 className=\"text-primary\">Welcome to TruthTree</h1>\n            <Typist avgTypingDelay={20} cursor={{ hideWhenDone: true }}>\n              We're an open source data visualization project that focuses on\n              U.S government financial spending. &nbsp;\n              <Link to=\"/about\">Find out more</Link>\n            </Typist>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default IntroHeading;\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport DummySearchBox from './DummySearchBox';\nimport IntroHeading from './IntroHeading';\n\nconst introContainerStyle = {\n  marginBottom: '12em',\n  backgroundColor: 'rgba(13, 22, 38, 0.7)'\n};\n\nclass Intro extends Component {\n  render() {\n    const { searchPhrase } = this.props;\n    const introContainerClasses = classNames({\n      'd-none': searchPhrase !== ''\n    });\n    return (\n      <Container className={introContainerClasses}>\n        <Row>\n          <Col\n            style={introContainerStyle}\n            xs={12}\n            sm={11}\n            md={9}\n            lg={6}\n            className=\"py-3 px-4\"\n          >\n            <IntroHeading />\n            <DummySearchBox />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  searchPhrase: store.LocationSearchBoxReducer.value\n});\n\nexport default connect(mapStateToProps)(Intro);\n","import React, { Component } from 'react';\n\nimport Map from './Map';\nimport Intro from './Intro';\n\nconst exploreStyle = {\n  flex: '1 1 100%'\n};\n\nclass Explore extends Component {\n  render() {\n    return (\n      <div\n        style={exploreStyle}\n        className=\"d-flex align-items-center position-relative\"\n      >\n        <Map />\n        <Intro />\n      </div>\n    );\n  }\n}\n\nexport default Explore;\n","import React, { Component } from 'react';\nimport { Card, CardBody, CardHeader } from 'reactstrap';\n\nclass ViewStories extends Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>TruthTree Stories</CardHeader>\n\n        <CardBody>\n          <p>Display list of stories</p>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default ViewStories;\n","export var mockData = [\n  {\n    title: 'Title1',\n    body: 'dummytext1',\n    upvotes: 2\n  },\n  {\n    title: 'Title2',\n    body:\n      'dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2dummytext2',\n    upvotes: -3\n  },\n  {\n    title: 'Title3',\n    body: 'dummytext3',\n    upvotes: 5\n  },\n  {\n    title: 'Title4',\n    body: 'dummytext4',\n    upvotes: 0\n  }\n];\n","import React, { Component } from 'react';\nimport { Card, CardBody, CardHeader } from 'reactstrap';\nimport { Media } from 'reactstrap';\nimport _ from 'lodash';\nimport '../../styles/TrendingStories.css';\nimport { mockData } from '../../mockData/storyData';\n\nclass TrendingStories extends Component {\n  constructor(props) {\n    super(props);\n    this.getStoryDetails = this.getStoryDetails.bind(this);\n    this.handleUpVoteClick = this.handleUpVoteClick.bind(this);\n    this.handleDownVoteClick = this.handleDownVoteClick.bind(this);\n  }\n\n  handleUpVoteClick(data) {\n    data.upvotes++;\n    //api call to change data\n  }\n\n  handleDownVoteClick(data) {\n    data.upvotes--;\n    //api call to change data\n  }\n\n  getStoryDetails() {\n    return (\n      <Media body>\n        {_.map(_.sortBy(mockData, 'upvotes').reverse(), data => {\n          return (\n            <div>\n              <Media heading>{data.title}</Media>\n              {_.truncate(data.body)}\n              <br />\n              <i\n                onClick={this.handleUpVoteClick(data)}\n                class=\"fa fa-thumbs-o-up thumb\"\n              />\n              <i\n                onClick={this.handleDownVoteClick(data)}\n                class=\"fa fa-thumbs-o-down thumb\"\n              />\n              <hr />\n            </div>\n          );\n        })}\n      </Media>\n    );\n  }\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>Trending Stories</CardHeader>\n\n        <CardBody>\n          <Media>{this.getStoryDetails()}</Media>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default TrendingStories;\n","import React, { Component } from 'react';\nimport { Container, Card, Row, Col, CardBody, CardHeader } from 'reactstrap';\n\nimport '../../styles/StoriesIndex.css';\nimport ViewStories from './ViewStories';\nimport TrendingStories from './TrendingStories';\n\nclass Stories extends Component {\n  render() {\n    return (\n      <Container className=\"stories-page\">\n        <Row>\n          <Col className=\"border-right\">\n            <ViewStories />\n          </Col>\n          <Col sm=\"6\" xs=\"6\">\n            <TrendingStories />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Stories;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Explore from './components/Explore';\nimport Stories from './components/Stories';\n\nimport './App.css';\nimport './styles/Tab.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"d-flex flex-column\">\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={Explore} />\n            <Route exact path=\"/stories\" component={Stories} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/explore/:level/:name/:id\" component={Home} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-typist/dist/Typist.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/RootReducer';\nexport default function configureStore() {\n  return createStore(rootReducer, applyMiddleware(thunk));\n}\n"],"sourceRoot":""}